/* $Id: GCClient_GetAssemblyBySequ.cpp 500855 2016-05-09 16:12:34Z zherikov $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using the following specifications:
 *   'gencoll_client.asn'.
 */

// standard includes
#include <ncbi_pch.hpp>

#include <serial/enumvalues.hpp>

// generated includes
#include <objects/genomecoll/GCClient_GetAssemblyBySequ.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// destructor
CGCClient_GetAssemblyBySequenceRequest::~CGCClient_GetAssemblyBySequenceRequest(void)
{
}

string CGCClient_GetAssemblyBySequenceRequest::GetFilterDisplayName(int filter)
{
    string s = ENUM_METHOD_NAME(EGCClient_GetAssemblyBySequenceFilter)()->FindName(filter, true);
    if(!s.empty())
        return s;

    list<string> res;
    ITERATE(CEnumeratedTypeValues::TValueToName, it, ENUM_METHOD_NAME(EGCClient_GetAssemblyBySequenceFilter)()->ValueToName())
        if(it->first && (it->first & filter) == it->first)
        {
            res.push_back(*it->second);
            filter &= ~it->first;
        }

    if(filter)
        res.push_back(NStr::NumericToString(filter));

    return NStr::Join(res, ",");
}


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

/* Original file checksum: lines: 57, chars: 1807, CRC32: 7a2cd229 */
