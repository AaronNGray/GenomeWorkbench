MACRO AutofixWGS_001 "Perform taxonomy lookup and correct genetic codes"
FOR EACH TSEntry
DO
    DoTaxLookup();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_002 "Edit taxname replace 'f.sp.' (case insensitive) with 'f. sp.'"
VAR
    qual_name = "org.taxname"
    find_text = "f.sp."
    repl_text = "f. sp."
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_003 "Edit taxname replace ' SP. ' with ' sp. '"
VAR
    qual_name = "org.taxname"
    find_text = " SP. "
    repl_text = " sp. "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_004 "Edit taxname replace 'sp' with 'sp.' where source dbxref does not start with 'taxon' (case-sensitive)"
VAR
    find_text = "sp"
    repl_text = "sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon", case_sensitive)
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_005 "Edit taxname replace 'spp' with 'sp.' where source dbxref does not start with 'taxon' (case-sensitive)"
VAR
    find_text = "spp"
    repl_text = "sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon", case_sensitive)
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_006 "Edit taxname replace 'spp.' with 'sp.' where source dbxref does not start with 'taxon' (case-sensitive)"
VAR
    find_text = "spp."
    repl_text = "sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon", case_sensitive)
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_007 "Edit taxname replace 'sp ' with 'sp. ' where source dbxref does not start with 'taxon' (case-sensitive)"
VAR
    find_text = "sp "
    repl_text = "sp. "
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon", case_sensitive)
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_008 "Apply Homo sapiens to host (ignore new text when existing text is present) where source isolation-source equals 'Homo sapiens' (ignore spaces, ignore punctuation), allow 'Homo sapiens' to be replaced by 'human', 'Homo sapien', 'Homosapiens', 'Homo-sapiens', 'Homo spiens', 'Homo Sapience', 'homosapein', 'homosapiens', 'homosapien', 'homo_sapien', 'homo_sapiens', 'Homosipian', 'Human Being', and 'Human Beings', allow 'sapiens' to be replaced by 'sapien', 'sapeins', 'sapein', 'sapins', 'sapens', 'sapin', 'sapen', 'sapians', 'sapian', 'sapies', and 'sapie' and where source taxname does not equal 'Homo sapiens' (case-sensitive)"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host" 
    new_value = "Homo sapiens"
    existing_text = "eLeaveOld"
    case_sensitiveA = false
    ignore_spaces = true
    ignore_punct = true
    case_sensitiveB = true
FOR EACH BioSource
WHERE EQUALS("subtype", "isolation-source", new_value, case_sensitiveA, ignore_spaces, ignore_punct, "synonyms.txt", new_value) AND
      NOT EQUALS("org.taxname", new_value, case_sensitiveB)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier;
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_009 "Remove isolation-source where source isolation-source equals 'Homo sapiens' (ignore spaces, ignore punctuation), allow 'Homo sapiens' to be replaced by 'human', 'Homo sapien', 'Homo spiens', 'Homo-sapiens', 'Homosapiens', 'Homo Sapience', 'Human Being', and 'Human Beings', allow 'sapiens' to be replaced by 'sapien', 'spaeins', 'sapein', 'sapins', 'sapens', 'sapin', 'sapen', 'sapians', 'sapian', 'sapies', and 'sapie' and where source host equals 'Homo sapiens' (case-sensitive)"
VAR
    match_text = "Homo sapiens"
    case_sensitiveA = true
    case_sensitiveB = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS("org.orgname.mod", "nat-host", match_text, case_sensitiveA)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                             AND EQUALS("obj.name", match_text, case_sensitiveB, ignore_spaces, ignore_punct, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_009 "Apply Homo sapiens to host (ignore new text when existing text is present) where source isolation-source equals 'Homo sapiens' (ignore spaces, ignore punctuation), allow 'Homo sapiens' to be replaced by 'human', 'Homo sapien', 'Homosapiens', 'Homo-sapiens', 'Homo spiens', 'Homo Sapience', 'homosapein', 'homosapiens', 'homosapien', 'homo_sapien', 'homo_sapiens', 'Homosipian', 'Human Being', and 'Human Beings', allow 'sapiens' to be replaced by 'sapien', 'sapeins', 'sapein', 'sapins', 'sapens', 'sapin', 'sapen', 'sapians', 'sapian', 'sapies', and 'sapie' and where source taxname does not equal 'Homo sapiens' (case-sensitive)"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host" 
    new_value = "Homo sapiens"
    existing_text = "eLeaveOld"
    case_sensitiveA = false
    ignore_spaces = true
    ignore_punct = true
    case_sensitiveB = true
FOR EACH BioSource
WHERE EQUALS("subtype", "isolation-source", new_value, case_sensitiveA, ignore_spaces, ignore_punct, "synonyms.txt", new_value) AND
      NOT EQUALS("org.taxname", new_value, case_sensitiveB)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier;
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_010 "Apply Homo sapiens to host (overwrite existing text) where source host equals 'homo sapiens' (ignore spaces, ignore punctuation), allow 'homo sapiens' to be replaced by 'humans', 'human', 'Homo sapien', 'Homosapiens', 'Homo-sapiens', 'Homo spiens', 'Homo Sapience', 'Homo sappiens', 'homo_sapien', 'human sapiens', 'Human Beings', and 'Human Being', allow 'sapiens' to be replaced by 'sapeins', 'sapein', 'sapens', 'sapins', 'sapin', 'sapen', 'spaeins', 'sapians', 'sapian', 'sapies', and 'sapie'"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host" 
    new_value = "Homo sapiens"
    match = "homo sapiens"
    existing_text = "eReplace"
    case_sensitive = true
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS(qual_name, modifier, match, case_sensitive, ignore_spaces, ignore_punct, "synonyms.txt", match)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier;
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_011 "Edit host replace ' sp' with ' sp.'"
VAR
    find_text = " sp"
    repl_text = " sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "nat-host";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_012 "Edit isolation-source replace 'faeces' (case insensitive) with 'feces'"
VAR
    find_text = "faeces"
    repl_text = "feces"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "isolation-source";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_013 "Edit isolation-source replace 'faecal' (case insensitive) with 'fecal'"
VAR
    find_text = "faecal"
    repl_text = "fecal"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "isolation-source";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_014 "Edit isolation-source replace 'Dairy' with 'dairy'"
VAR
    find_text = "Dairy"
    repl_text = "dairy"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "isolation-source";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_015 "Edit country replace '`' with '''"
VAR
    find_text = "`"
    repl_text = "'"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_016 "Apply Virgin Islands to country (overwrite existing text) where source country equals 'US Virgin Islands' (ignore spaces, ignore punctuation), allow 'US Virgin Islands' to be replaced by 'U.S. Virgin Islands' and 'United States Virgin Islands'"
VAR
    qual_name = "subtype"
    modifier = "country" 
    new_value = "Virgin Islands"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS("subtype", "country", "US Virgin Islands", case_sensitive, ignore_spaces, ignore_punct,"synonyms.txt", "US Virgin Islands")
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier;
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_017 "Edit country replace 'Coted'Ivoire' (case insensitive) with 'Cote d'Ivoire'"
VAR
    find_text = "Coted'Ivoire"
    repl_text = "Cote d'Ivoire"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_018 "Edit country replace 'Cote d' Ivoire' (case insensitive) with 'Cote d'Ivoire'"
VAR
    find_text = "Cote d' Ivoire"
    repl_text = "Cote d'Ivoire"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_019 "Edit country replace 'Guinea Bissau' (case insensitive) with 'Guinea-Bissau'"
VAR
    find_text = "Guinea Bissau"
    repl_text = "Guinea-Bissau"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_020 "Edit country replace 'Guinea_Bissau' (case insensitive) with 'Guinea-Bissau'"
VAR
    find_text = "Guinea_Bissau"
    repl_text = "Guinea-Bissau"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_021 "Edit country replace 'GuineaBissau' (case insensitive) with 'Guinea-Bissau'"
VAR
    find_text = "GuineaBissau"
    repl_text = "Guinea-Bissau"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_022 "Edit country replace 'vietnam' (case insensitive) with 'Viet Nam'"
VAR
    find_text = "vietnam"
    repl_text = "Viet Nam"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_023 "Edit country replace 'Scotland' (case insensitive) with 'United Kingdom: Scotland' where source country equals 'Scotland' (ignore punctuation)"
VAR
    find_text = "Scotland"
    repl_text = "United Kingdom: Scotland"
    location = "at the beginning"
    case_sensitive = false
    case_sensitive_constr = true
    ignore_spaces = false
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive_constr, ignore_spaces, ignore_punct);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_024 "Edit country replace 'Wales' (case insensitive) with 'United Kingdom: Wales' where source country equals 'Wales' (ignore punctuation)"
VAR
    find_text = "Wales"
    repl_text = "United Kingdom: Wales"
    location = "at the beginning"
    case_sensitive = false
    case_sensitive_constr = true
    ignore_spaces = false
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive_constr, ignore_spaces, ignore_punct);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_025 "Fix capitalization in common Mus musculus strains"
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    FixMouseStrains(o);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_026 "Fix source country qualifier capitalization"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "country";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_027 "Fix capitalization in sex source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "sex";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_028 "Fix capitalization in host source qualifier"
For each BioSource
Do
    o = Resolve("org.orgname.mod") Where o.subtype = "nat-host";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_030 "Fix capitalization in dev-stage source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "dev-stage";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_031 "Fix capitalization in tissue-type source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "tissue-type";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_032 "Fix capitalization in lab-host source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "lab-host";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_033 "Fix capitalization in cell-type source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "cell-type";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_034 "Fix collection-date format"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "collection-date";
    FixFormat(o);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_035 "Fix lat-lon format"
FOR EACH BioSource
DO
    obj = Resolve("subtype") Where obj.subtype = "lat-lon";
    FixFormat(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_036 "Edit segment replace 'segment-' (case insensitive) with ''"
VAR
    find_text = "segment-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_037 "Edit segment replace 'segment_' (case insensitive) with ''"
VAR
    find_text = "segment_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_038 "Edit segment replace 'segment:' (case insensitive) with ''"
VAR
    find_text = "segment:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_039 "Edit segment replace 'segment' (case insensitive) with ''"
VAR
    find_text = "segment"
    repl_text = ""
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_040 "Edit strain replace 'strain-' (case insensitive) with ''"
VAR
    find_text = "strain-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_041 "Edit strain replace 'strain_' (case insensitive) with ''"
VAR
    find_text = "strain_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_042 "Edit strain replace 'strain:' (case insensitive) with ''"
VAR
    find_text = "strain:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_043 "Edit strain replace 'strain' (case insensitive) with '' where source strain does not contain 'strains' (ignore spaces, ignore punctuation)"
VAR
    find_text = "strain"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain"
                       AND NOT CONTAINS("o.subname", "strains", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_044 "Edit strain replace ' strain' (case insensitive) with '' where source strain contains 'strains' (ignore spaces, ignore punctuation)"
VAR
    find_text = " strain"
    repl_text = ""
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain"
                       AND CONTAINS("o.subname", "strains", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_045 "Edit clone replace 'clone-' (case insensitive) with ''"
VAR
    find_text = "clone-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_046 "Edit clone replace 'clone_' (case insensitive) with ''"
VAR
    find_text = "clone_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_047 "Edit clone replace 'clone:' (case insensitive) with ''"
VAR
    find_text = "clone:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_048 "Edit clone replace 'clone' (case insensitive) with ''"
VAR
    find_text = "clone"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_049 "Edit clone replace 'clone' (case insensitive) with ''"
VAR
    find_text = "clone"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_050 "Edit isolate replace 'isolate-' (case insensitive) with ''"
VAR
    find_text = "isolate-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_051 "Edit isolate replace 'isolate_' (case insensitive) with ''"
VAR
    find_text = "isolate_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_052 "Edit isolate replace 'isolate:' (case insensitive) with ''"
VAR
    find_text = "isolate:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_053 "Edit isolate replace 'isolate:' (case insensitive) with '' where source isolate does not contain 'isolated' (ignore spaces, ignore punctuation)"
VAR
    find_text = "isolate:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND
                                   NOT CONTAINS("o.subname", "isolated", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_054 "Edit isolate replace 'isolate:' (case insensitive) with '' where source isolate does not contain 'isolated' (ignore spaces, ignore punctuation)"
VAR
    find_text = "isolate:"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND
                                   NOT CONTAINS("o.subname", "isolated", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_055 "Remove location nucleomorph where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "nucleomorph" AND 
      STARTS("org.db.db", "taxon", case_sensitive) AND
      ISPRESENT("org.orgname.div") AND
      ISPRESENT(match_field) AND
      NOT CONTAINS(match_field, match_text1, case_sensitive) AND
      NOT CONTAINS(match_field, match_text2, case_sensitive)
Do
    RemoveQual("genome");
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_056 "Remove note-orgmod where source note-orgmod equals 'Organelle: nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "Organelle: nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_057 "Remove note-orgmod where source note-orgmod equals 'nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_058 "Remove note-subsrc where source note-subsrc equals 'Organelle: nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "Organelle: nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_059 "Remove note-subsrc where source note-subsrc equals 'nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_060 "Remove location macronuclear where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "macronuclear" AND 
      STARTS("org.db.db", "taxon", case_sensitive) AND
      ISPRESENT("org.orgname.div") AND
      ISPRESENT(match_field) AND
      NOT CONTAINS(match_field, match_text, case_sensitive)
Do
    RemoveQual("genome");
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_061 "Remove note-orgmod where source note-orgmod equals 'Organelle: macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "Organelle: macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_062 "Remove note-subsrc where source note-subsrc equals 'Organelle: macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "Organelle: macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_063 "Remove note-orgmod where source note-orgmod equals 'macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_064 "Remove note-subsrc where source note-subsrc equals 'macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_065 "Remove germline where source division is present and where source lineage does not contain 'Craniata' (case-sensitive)"
VAR
    match_text = "Craniata"
    case_sensitive = true
FOR EACH BioSource
WHERE ISPRESENT("org.orgname.div") AND NOT CONTAINS("org.orgname.lineage", match_text, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "germline";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_066 "Parse text starting with 'CBS' replace 'CBS' with 'CBS:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'CBS' and where source strain does not contain ',' (case-sensitive) and where source strain does not contain ';' (case-sensitive) and where source strain does not contain 'ATCC' (ignore spaces, ignore punctuation), allow 'ATCC' to be replaced by 'DSM' and where source strain starts with 'CBS' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "CBS"
    repl_text = "CBS:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "ATCC", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   NOT CONTAINS("src.subname", "DSM", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_067 "Parse text starting with 'ATCC' replace 'ATCC' with 'ATCC:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'ATCC' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'DSM' and where source strain starts with 'ATCC' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "ATCC"
    repl_text = "ATCC:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   NOT CONTAINS("src.subname", "DSM", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_068 "Parse text starting with 'ATCC' replace 'ATCC' with 'ATCC:' from cell-line to culture-collection(ignore new text when existing text is present) where source cell-line does not equal 'ATCC' and where source cell-line does not contain ';' (case-sensitive) and where source cell-line does not contain ',' (case-sensitive) and where source cell-line does not contain 'DSM' (ignore spaces, ignore punctuation), allow 'DSM' to be replaced by 'CBS' and where source cell-line starts with 'ATCC' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "ATCC"
    repl_text = "ATCC:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("subtype") WHERE src.subtype = "cell-line" AND
                   NOT EQUALS("src.name", find_text) AND
                   NOT CONTAINS("src.name", ",") AND
                   NOT CONTAINS("src.name", ";") AND
                   NOT CONTAINS("src.name", "DSM", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   NOT CONTAINS("src.name", "CBS", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   STARTS("src.name", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.name", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_069 "Parse text starting with 'ATCC' replace 'ATCC' with 'ATCC:', remove text starting with ';' from tissue-type to culture-collection(ignore new text when existing text is present) where source tissue-type does not equal 'ATCC' (case-sensitive) and where source tissue-type contains ';' (case-sensitive) and where source tissue-type does not contain ',' (case-sensitive) and where source tissue-type does not contain 'DSM' (ignore spaces), allow 'DSM' to be replaced by 'CBS'"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "ATCC"
    repl_text = "ATCC:"
    location = "at the beginning"
    case_sensitive_edit = true
VAR
    remove_from_parsed = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("subtype") WHERE src.subtype = "tissue-type" AND
                   NOT EQUALS("src.name", find_text) AND
                   NOT CONTAINS("src.name", ",") AND
                   CONTAINS("src.name", ";") AND
                   NOT CONTAINS("src.name", "DSM", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   NOT CONTAINS("src.name", "CBS", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   STARTS("src.name", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.name", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
    ParsedText("edit_obj.subname", ";", include_left, "", include_right, case_sens_parse, whole_word, remove_from_parsed);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_070 "Parse text starting with 'DSMZ' replace 'DSMZ' with 'DSM:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'DSM', allow 'DSM' to be replaced by 'DSMZ' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'ATCC' and where source strain starts with 'DSMZ' (ignore spaces, ignore punctuation), allow 'DSMZ' to be replaced by 'DSM'"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "DSMZ"
    repl_text = "DSM:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", "DSM", "synonyms.txt", "DSM") AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   NOT CONTAINS("src.subname", "ATCC", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", find_text);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_071 "Parse text starting with 'DSM' replace 'DSM' with 'DSM:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'DSM' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'ATCC' (ignore spaces, ignore punctuation), allow 'ATCC' to be replaced by 'CBS' and where source strain starts with 'DSM' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "DSM"
    repl_text = "DSM:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "ATCC", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_072 "Edit strain replace 'ATCC:' with 'ATCC '"
VAR
    find_text = "ATCC:"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_073 "Edit cell-line replace 'ATCC:' with 'ATCC '"
VAR
    find_text = "ATCC:"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "cell-line";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_074 "Edit tissue-type replace 'ATCC:' with 'ATCC '"
VAR
    find_text = "ATCC:"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "tissue-type";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_075 "Edit strain replace 'CBS:' with 'CBS '"
VAR
    find_text = "CBS:"
    repl_text = "CBS "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_076 "Edit strain replace 'DSMZ:' with 'DSMZ '"
VAR
    find_text = "DSMZ:"
    repl_text = "DSMZ "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_077 "Edit strain replace 'DSM:' with 'DSM '"
VAR
    find_text = "DSM:"
    repl_text = "DSM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_078 "Edit strain replace 'ATCC' with 'ATCC ' where source strain does not contain 'ATCC ' (case-sensitive) and where source strain does not equal 'ATCC'"
VAR
    find_text = "ATCC"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_079 "Edit cell-line replace 'ATCC' with 'ATCC ' where source cell-line does not contain 'ATCC ' (case-sensitive) and where source cell-line does not equal 'ATCC'"
VAR
    find_text = "ATCC"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "cell-line" AND
                           NOT CONTAINS("o.name", repl_text, case_sensitive) AND
                           NOT EQUALS("o.name", find_text);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_080 "Edit tissue-type replace 'ATCC' with 'ATCC ' where source tissue-type does not contain 'ATCC ' (case-sensitive) and where source tissue-type does not equal 'ATCC'"
VAR
    find_text = "ATCC"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "tissue-type" AND
                           NOT CONTAINS("o.name", repl_text, case_sensitive) AND
                           NOT EQUALS("o.name", find_text);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_081 "Edit strain replace 'CBS' with 'CBS ' where source strain does not contain 'CBS ' (case-sensitive) and where source strain does not equal 'CBS'"
VAR
    find_text = "CBS"
    repl_text = "CBS "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_082 "Edit strain replace 'DSMZ' with 'DSMZ ' where source strain does not contain 'DSMZ ' (case-sensitive) and where source strain does not equal 'DSMZ'"
VAR
    find_text = "DSMZ"
    repl_text = "DSMZ "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain"  AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_083 "Edit strain replace 'DSM' with 'DSM ' where source strain does not contain 'DSM ' (case-sensitive) and where source strain does not equal 'DSM' and where source strain does not contain 'DSMZ' (case-sensitive)"
VAR
    find_text = "DSM"
    repl_text = "DSM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text) AND
                                   NOT CONTAINS("o.subname", "DSMZ", case_sensitive);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_084 "Remove lineage source notes"
FOR EACH BioSource
DO
    RemoveLineageSourceNotes();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_085 "Apply Gallus gallus to host (overwrite existing text) where source host equals 'Gallus domesticus (chicken)' (ignore spaces, ignore punctuation), allow 'Gallus domesticus (chicken)' to be replaced by 'Gallus gallus domesticus'"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host"
    new_value = "Gallus gallus"
    existing_text = "eReplace"
    match = "Gallus domesticus (chicken)"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier
                                     AND EQUALS("obj.subname", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.subname", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_086 "Fix i in primer (forward and reverse) sequences"
VAR
    qual_name_fwd = "pcr-primers..forward..seq"
    qual_name_rev = "pcr-primers..reverse..seq"
FOR EACH BioSource
DO
    FixIInPrimerSeq(qual_name_fwd);
    FixIInPrimerSeq(qual_name_rev);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_087 "Remove location plastid where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "plastid" AND
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_088 "Remove location chloroplast where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chloroplast" AND
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_089 "Remove location chromoplast where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chromoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_090 "Remove location leucoplast where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "leucoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_091 "Remove location proplastid where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "proplastid" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_092 "Remove location mitochondrion where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "mitochondrion" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_093 "Remove location plastid where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea" 
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "plastid" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_094 "Remove location chromoplast  where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chromoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_095 "Remove location chloroplast where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chloroplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_096 "Remove location leucoplast where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "leucoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_097 "Remove location proplastid where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "proplastid" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_098 "Remove location mitochondrion where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "mitochondrion" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_099 "Remove location extrachromosomal where source lineage contains 'Viruses' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Viruses"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "extrachromosomal" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_100 "Remove identified-by where source identified-by equals 'unknown' (ignore spaces, ignore punctuation), allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', 'same laboratory', 'laboratory', 'lab', 'our laboratory', 'n.a.', 'not available', 'many methods', 'molecular typing method', 'biochemical tests', 'biochemical testing', 'biochemical test', 'bacteria', 'PCR, Sequencing, and Cloning', 'PCR, Sequencing, Cloning', 'molecular methods', '16S', 'Sanger', 'Sanger sequencing', 'sanger-sequencing', 'sequence', 'sequencing', 'Author', 'authors', 'student', 'students', 'self', 'me', 'myself', 'Rose Rainbolt', and 'Carlos Cutrer'"
VAR
    match_text = "unknown"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "identified-by" 
                             AND EQUALS("obj.name", match_text, case_sensitive, ignore_spaces, ignore_punct, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_101 "Remove collected-by where source collected-by equals 'unknown' (ignore spaces, ignore punctuation), allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', 'same laboratory', 'laboratory', 'lab', 'our laboratory', 'n.a.', 'not available', 'many methods', 'molecular typing method', 'biochemical tests', 'biochemical testing', 'biochemical test', 'bacteria', 'PCR, Sequencing, and Cloning', 'PCR, Sequencing, Cloning', 'molecular methods', '16S', 'Sanger', 'Sanger sequencing', 'sanger-sequencing', 'sequence', 'sequencing', 'Author', 'authors', 'student', 'students', 'self', 'me', 'myself', 'Rose Rainbolt', and 'Carlos Cutrer'"
VAR
    match_text = "unknown"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "collected-by" 
                             AND EQUALS("obj.name", match_text, case_sensitive, ignore_spaces, ignore_punct, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_102 "Remove lat-lon where object text equals 'unknown', allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', 'n.a.', and 'not available'"
VAR
    match_text = "unknown"
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "lat-lon" 
                             AND EQUALS("obj.name", match_text, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_103 "Remove country where object text equals 'unknown', allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', and 'not available'"
VAR
    match_text = "unknown"
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "country" 
                             AND EQUALS("obj.name", match_text, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_104 "Remove collected-by where source collected-by equals 'students'"
VAR
    match_text = "students"
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "collected-by" AND EQUALS("obj.name", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_105 "Edit collected-by replace ':' with ','"
VAR
    find_text = ":"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "collected-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_106 "Edit collected-by replace '/' with ','"
VAR
    find_text = "/"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "collected-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_107 "Edit collected-by replace ';' with ','"
VAR
    find_text = ";"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "collected-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_108 "Edit identified-by replace ':' with ','"
VAR
    find_text = ":"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "identified-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_109 "Edit identified-by replace '/' with ','"
VAR
    find_text = "/"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "identified-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_110 "Edit identified-by replace ';' with ','"
VAR
    find_text = ";"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "identified-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_111 "Apply nasopharyngeal aspirate to isolation-source (overwrite existing text) where source isolation-source equals 'Naso pharyngeal aspirate' (ignore spaces, ignore punctuation), allow 'Naso pharyngeal aspirate' to be replaced by 'Naso-pharyngeal aspirate', 'naso pharyngeal aspirate', and 'naso-pharyngeal aspirate'"
VAR
    new_value = "nasopharyngeal aspirate"
    existing_text = "eReplace"
    match = "Naso pharyngeal aspirate"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_112 "Apply lung to isolation-source (overwrite existing text) where object text equals 'lung tissue' (ignore spaces, ignore punctuation) and where source isolation-source equals 'lung tissue' (ignore spaces, ignore punctuation), allow 'lung tissue' to be replaced by 'lung tissues'"
VAR
    new_value = "lung"
    existing_text = "eReplace"
    match = "lung tissue"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_113 "Apply blood to isolation-source (overwrite existing text) where source isolation-source equals 'blood sample' (ignore spaces, ignore punctuation), allow 'blood sample' to be replaced by 'blood samples'"
VAR
    new_value = "blood"
    existing_text = "eReplace"
    match = "blood sample"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_114 "Apply blood to tissue-type (overwrite existing text) where source tissue-type equals 'blood sample' (ignore spaces, ignore punctuation), allow 'blood sample' to be replaced by 'blood samples'"
VAR
    new_value = "blood"
    existing_text = "eReplace"
    match = "blood sample"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "tissue-type" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_115 "Edit taxname replace 'uncultured fungus clone' (case insensitive) with 'uncultured fungus' where source taxname equals 'uncultured fungus clone' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "uncultured fungus clone"
    repl_text = "uncultured fungus"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_116 "Edit taxname replace 'uncultured bacteria clone' (case insensitive) with 'uncultured bacterium' where source taxname equals 'uncultured bacteria clone' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "uncultured bacteria clone"
    repl_text = "uncultured bacterium"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_117 "Edit taxname replace 'uncultured bacterium clone' (case insensitive) with 'uncultured bacterium' where source taxname equals 'uncultured bacterium clone' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "uncultured bacterium clone"
    repl_text = "uncultured bacterium"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_118 "Edit taxname replace 'unculture bacterium' (case insensitive) with 'uncultured bacterium' where source taxname equals 'unculture bacterium' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "unculture bacterium"
    repl_text = "uncultured bacterium"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_119 "Edit taxname replace 'unculture fungus' (case insensitive) with 'uncultured fungus' where source taxname equals 'unculture fungus' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "unculture fungus"
    repl_text = "uncultured fungus"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_120 "Perform taxonomy lookup and correct genetic codes"
FOR EACH TSEntry
DO
    DoTaxLookup();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_121 "Edit publication title replace ' ' with ''"
VAR
    find_text = " "
    repl_text = ""
    location = "at the beginning"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_122 "Fix pub affiliation where where title is all caps and where authors is all caps and where journal is all caps and where issue is all caps and where pages is all caps and where serial number is all caps and where citation is all caps and where affiliation is all caps and where department is all caps and where city is all caps and where state is all caps and where country is all caps and where street is all caps and where email is all caps and where fax is all caps and where phone is all caps and where postal code is all caps"
FOR EACH Pubdesc
DO
    title = PUB_TITLE();
    journal = PUB_JOURNAL();
    issue = PUB_ISSUE();
    pages = PUB_PAGES();
    serial_number = PUB_SERIAL_NUMBER();
    cit = PUB_CIT();
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    email = PUB_AFFIL("email");
    fax = PUB_AFFIL("fax");
    phone = PUB_AFFIL("phone");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(title) AND NOT ISUPPER(title)) OR
                                  (ISPRESENT(PUB_AUTHORS()) AND NOT ISUPPER(PUB_AUTHORS())) OR
                                  (ISPRESENT(journal) AND NOT ISUPPER(journal)) OR
                                  (ISPRESENT(issue) AND NOT ISUPPER(issue)) OR
                                  (ISPRESENT(pages) AND NOT ISUPPER(pages)) OR
                                  (ISPRESENT(serial_number) AND NOT ISUPPER(serial_number)) OR
                                  (ISPRESENT(cit) AND NOT ISUPPER(cit)) OR
                                  (ISPRESENT(affil) AND NOT ISUPPER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISUPPER(div)) OR
                                  (ISPRESENT(city) AND NOT ISUPPER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISUPPER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISUPPER(country)) OR
                                  (ISPRESENT(street) AND NOT ISUPPER(street)) OR
                                  (ISPRESENT(email) AND NOT ISUPPER(email)) OR
                                  (ISPRESENT(fax) AND NOT ISUPPER(fax)) OR
                                  (ISPRESENT(phone) AND NOT ISUPPER(phone)) OR
                                  (ISPRESENT(postalcode) AND NOT ISUPPER(postalcode))) AND
    (ISPRESENT(title) OR ISPRESENT(PUB_AUTHORS()) OR ISPRESENT(journal) OR ISPRESENT(issue) OR
    ISPRESENT(pages) OR ISPRESENT(serial_number) OR ISPRESENT(cit) OR ISPRESENT(affil) OR 
    ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR ISPRESENT(country) OR 
    ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_123 "Fix pub affiliation where where affiliation is all caps and where department is all caps and where city is all caps and where state is all caps and where country is all caps and where street is all caps and where postal code is all caps"
FOR EACH Pubdesc
DO
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(affil) AND NOT ISUPPER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISUPPER(div)) OR
                                  (ISPRESENT(city) AND NOT ISUPPER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISUPPER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISUPPER(country)) OR
                                  (ISPRESENT(street) AND NOT ISUPPER(street)) OR
                                  (ISPRESENT(postalcode) AND NOT ISUPPER(postalcode))) AND
    (ISPRESENT(affil) OR ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR
     ISPRESENT(country) OR ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_124 "Fix pub affiliation where where affiliation is all lowercase and where department is all lowercase and where city is all lowercase and where state is all lowercase and where country is all lowercase and where street is all lowercase and where phone is all lowercase and where postal code is all lowercase"
FOR EACH Pubdesc
DO
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(affil) AND NOT ISLOWER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISLOWER(div)) OR
                                  (ISPRESENT(city) AND NOT ISLOWER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISLOWER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISLOWER(country)) OR
                                  (ISPRESENT(street) AND NOT ISLOWER(street)) OR
                                  (ISPRESENT(postalcode) AND NOT ISLOWER(postalcode))) AND
    (ISPRESENT(affil) OR ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR 
    ISPRESENT(country) OR ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_125 "Fix pub affiliation where where title is all lowercase and where authors is all lowercase and where journal is all lowercase and where issue is all lowercase and where pages is all lowercase and where serial number is all lowercase and where citation is all lowercase and where affiliation is all lowercase and where department is all lowercase and where city is all lowercase and where state is all lowercase and where country is all lowercase and where street is all lowercase and where email is all lowercase and where fax is all lowercase and where phone is all lowercase and where postal code is all lowercase"
FOR EACH Pubdesc
DO
    title = PUB_TITLE();
    journal = PUB_JOURNAL();
    issue = PUB_ISSUE();
    pages = PUB_PAGES();
    serial_number = PUB_SERIAL_NUMBER();
    cit = PUB_CIT();
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    email = PUB_AFFIL("email");
    fax = PUB_AFFIL("fax");
    phone = PUB_AFFIL("phone");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(title) AND NOT ISLOWER(title)) OR
                                  (ISPRESENT(PUB_AUTHORS()) AND NOT ISLOWER(PUB_AUTHORS())) OR
                                  (ISPRESENT(journal) AND NOT ISLOWER(journal)) OR
                                  (ISPRESENT(issue) AND NOT ISLOWER(issue)) OR
                                  (ISPRESENT(pages) AND NOT ISLOWER(pages)) OR
                                  (ISPRESENT(serial_number) AND NOT ISLOWER(serial_number)) OR
                                  (ISPRESENT(cit) AND NOT ISLOWER(cit)) OR
                                  (ISPRESENT(affil) AND NOT ISLOWER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISLOWER(div)) OR
                                  (ISPRESENT(city) AND NOT ISLOWER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISLOWER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISLOWER(country)) OR
                                  (ISPRESENT(street) AND NOT ISLOWER(street)) OR
                                  (ISPRESENT(email) AND NOT ISLOWER(email)) OR
                                  (ISPRESENT(fax) AND NOT ISLOWER(fax)) OR
                                  (ISPRESENT(phone) AND NOT ISLOWER(phone)) OR
                                  (ISPRESENT(postalcode) AND NOT ISLOWER(postalcode))) AND
    (ISPRESENT(title) OR ISPRESENT(PUB_AUTHORS()) OR ISPRESENT(journal) OR ISPRESENT(issue) OR
    ISPRESENT(pages) OR ISPRESENT(serial_number) OR ISPRESENT(cit) OR ISPRESENT(affil) OR 
    ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR ISPRESENT(country) OR 
    ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_126 "Fix pub title where where title is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_TITLE() WHERE ISUPPER(obj);
    FixPubCapsTitle(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_127 "Fix pub title where where title is all lowercase"
FOR EACH Pubdesc
DO
    obj = PUB_TITLE() WHERE ISLOWER(obj);
    FixPubCapsTitle(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_128 "Fix pub authors where where authors is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS() WHERE ISUPPER(PUB_AUTHORS());
    FixPubCapsAuthors(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_129 "Fix pub authors where where authors is all lowercase"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS() WHERE ISLOWER(PUB_AUTHORS());
    FixPubCapsAuthors(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_130 "Truncate middle name initials"
FOR EACH Pubdesc
DO
    TruncateMiddleInitials();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_131 "Fix capitalization in author name where name is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS() WHERE ISUPPER(obj);
    FixPubCapsAuthors(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_132 "Fix capitalization in author last names where last name is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS("last") WHERE ISUPPER(obj);
    FixCapsAuthorLastName(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_133 "Fix pub authors"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS();
    FixPubCapsAuthors(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_134 "Fix pub affiliation country"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL();
    FixPubCapsAffilCountry(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_135 "Fix pub affiliation (punctuation only)"
Var
    punct_only = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL();
    FixPubCapsAffiliation(obj, punct_only);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_136 "Remove publication state where state is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("sub") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_137 "Remove publication state where state contains 'Select A State' (ignore spaces, ignore punctuation), allow 'Select A State' to be replaced by 'none', 'N/A', 'Not Applicable', 'NotApplicable', 'Select State/Province', '--- Select One ---', 'N/A = Not Applicable', 'not USA', 'not USA/Canada', 'outside of USA', 'Select if applicable', '(Outside USA)', 'outside USA', 'outside US', 'outside the US', 'Neither U.S. nor Canada', 'Choose a state', '---Select A Canadian Province---', 'Non-US/Non-Canadian', 'Please select region, state or province', 'Select one', 'Please select...', 'Select State/Province', '-- Please Select --', 'Outside US/Canada/Australia', 'Select State', 'Please choose from the following:', 'Non-US/Canada', 'OTHER', and 'Please choose from the following :'"
VAR
    match = "Select A State"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("sub") WHERE CONTAINS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_138 "Remove publication postal code where postal code is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("postal-code") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_139 "Remove publication affiliation where affiliation is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("affil") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_140 "Remove publication affiliation where affiliation equals 'N/A', allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("affil") WHERE EQUALS(obj, match, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_141 "Remove publication postal code where postal code equals 'N/A' (ignore spaces, ignore punctuation), allow 'N/A' to be replaced by 'none', 'N.A.', and 'Not Applicable'"
VAR
    match = "N/A"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("postal-code") WHERE EQUALS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_142 "Remove publication department where department equals 'N/A', allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("div") WHERE EQUALS(obj, match, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_143 "Remove publication department where department is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("div") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_144 "Remove publication city where city equals 'N/A' (ignore spaces, ignore punctuation), allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("city") WHERE EQUALS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_145 "Remove publication street where street is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("street") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_146 "Remove publication street where street equals 'N/A' (ignore spaces, ignore punctuation), allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("street") WHERE EQUALS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_147 "Remove publication city where city is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("city") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_148 "Edit publication affiliation replace 'Sience' with 'Science'"
VAR
    find_text = "Sience"
    repl_text = "Science"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("affil");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_149 "Edit publication department replace 'Sience' with 'Science'"
VAR
    find_text = "Sience"
    repl_text = "Science"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("div");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_150 "Edit publication street replace 'Sience' with 'Science'"
VAR
    find_text = "Sience"
    repl_text = "Science"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("street");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_151 "Fix pub title where where title is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_TITLE() WHERE ISUPPER(obj);
    FixPubCapsTitle(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_152 "Edit publication title replace ' sp' with ' sp..'"
VAR
    find_text = " sp"
    repl_text = " sp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_153 "Edit publication title replace ' sp.' with ' sp..'"
VAR
    find_text = " sp."
    repl_text = " sp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_154 "Edit publication title replace ' spp' with ' spp..'"
VAR
    find_text = " spp"
    repl_text = " spp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_155 "Edit publication title replace ' spp.' with ' spp..'"
VAR
    find_text = " spp."
    repl_text = " spp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_156 "Edit publication title replace ' ' with ''"
VAR
    find_text = " "
    repl_text = ""
    location = "at the beginning"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_157 "Remove Publication descriptors where pub is unpublished and title is not present"
FOR EACH Pubdesc
WHERE PUB_CLASS() = "unpublished" AND NOT ISPRESENT(PUB_TITLE())
DO
    RemoveDescriptor();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_158 "Edit publication title replace '#' with ' '"
VAR
    find_text = "#"
    repl_text = " "
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_159 "Remove Publication descriptors where pub is unpublished and title equals 'none' (ignore spaces, ignore punctuation), allow 'none' to be replaced by 'N/A', 'to be determined', 'not submitted', 'nothing', 'unpublished', 'direct submission', 'direct submit', 'submit', 'in preparation', 'manuscript in preparation', 'N.A.', 'null', 'directed submission', 'unpublished data', 'No', 'title', 'no title', 'GenBank', 'NCBI', 'in prep', 'in preparation for publication', 'NotApplicable', 'Not Applicable', 'under submission', 'under review', 'Direct Submission', 'Direct Submitted', 'dirct submission', 'yet to be published', 'not published', 'no titled', 'no title yet', 'Direct submision', 'submitted directly', 'submited direct', 'direct submited', 'unpublished manuscript', 'sequence submission', 'directed-submission', 'Unpublish', 'unpublication', 'untitled - to update', 'Unpublished sequence', 'Direct submission', 'Unpublished yet', 'Directly submit', 'Unpubilished', 'title for manuscript', 'no reference', 'direction submission', 'direction submittion', 'unpublication', 'Direct submisson', 'non', 'unknown', 'No title yet', 'No title given', 'unpulished', and 'submit directly'"
VAR
    match = "none"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
WHERE PUB_CLASS() = "unpublished" AND 
      EQUALS(PUB_TITLE(), match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    RemoveDescriptor();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_160 "Remove Publication descriptors where pub is unpublished and title is all punctuation"
FOR EACH Pubdesc
WHERE PUB_CLASS() = "unpublished" AND ISPUNCTUATION(PUB_TITLE())
DO
    RemoveDescriptor();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_161 "Fix USA and state abbreviations in publications"
FOR EACH Pubdesc
DO
    FixUSAAndStateAbbreviations();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_162 "Remove BioProject where BioProject contains 'SUB' (case-sensitive)"
VAR
    contains1 = "SUB"
    case_sensitive = true
FOR EACH DBLink
DO
    dblink_obj = Resolve("data") WHERE EQUALS("dblink_obj.label.str", "BioProject", true);
    data_obj = Resolve("dblink_obj.data.strs") WHERE CONTAINS(data_obj, contains1, case_sensitive);
    RemoveQual(data_obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_163 "Remove BioSample where BioSample contains 'SUB' (case-sensitive)"
VAR
    contains2 = "SUB"
    case_sensitive = true
FOR EACH DBLink
DO
    dblink_obj = Resolve("data") WHERE EQUALS("dblink_obj.label.str", "BioSample", true);
    data_obj = Resolve("dblink_obj.data.strs") WHERE CONTAINS(data_obj, contains2, case_sensitive);
    RemoveQual(data_obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_164 "Remove Genome Project ID"
FOR EACH UserObject
WHERE CHOICETYPE("type") = "str" AND type.str = "GenomeProjectsDB"
DO
   RemoveDescriptor();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_165 "Remove duplicate structured comments"
FOR EACH SeqNa
DO
    RemoveDuplicateStructComments();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_166 "Edit structured comment field StructuredCommentPrefix replace '##Assembly-Data-START##' with '##Genome-Assembly-Data-START##'"
VAR
    find_text = "##Assembly-Data-START##"
    repl_text = "##Genome-Assembly-Data-START##"
    location = "at the beginning"
    case_sensitive = true
    field = "StructuredCommentPrefix"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_167 "Edit structured comment field StructuredCommentSuffix replace '##Assembly-Data-END##' with '##Genome-Assembly-Data-END##'"
VAR
    find_text = "##Assembly-Data-END##"
    repl_text = "##Genome-Assembly-Data-END##"
    location = "at the beginning"
    case_sensitive = true
    field = "StructuredCommentSuffix"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_168 "Reorder structured comment fields"
FOR EACH StructComment
DO
    ReorderStructuredComment();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_169 "Edit (null) replace 'Coverage' with 'Genome Coverage'"
VAR
    find_text = "Coverage"
    repl_text = "Genome Coverage"
    location = "at the beginning"
    case_sensitive = true
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = "Coverage";
    EditStringQual("obj.label.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_170 "Edit structured comment field Genome Coverage replace 'Missing' with 'Unknown'"
VAR
    find_text = "Missing"
    repl_text = "Unknown"
    location = "at the beginning"
    case_sensitive = true
    field = "Genome Coverage"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_171 "Edit structured comment field Sequencing Technology replace 'Missing' with 'Unknown'"
VAR
    find_text = "Missing"
    repl_text = "Unknown"
    location = "at the beginning"
    case_sensitive = true
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_172 "Edit structured comment field Sequencing Technology replace 'illumina' with 'Illumina'"
VAR
    find_text = "illumina"
    repl_text = "Illumina"
    location = "anywhere"
    case_sensitive = true
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_173 "Edit structured comment field Sequencing Technology replace 'illumina Gaii' (case insensitive) with 'Illumina GAII'"
VAR
    find_text = "illumina Gaii"
    repl_text = "Illumina GAII"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_174 "Edit structured comment field Sequencing Technology replace ', ' (case insensitive) with '; '"
VAR
    find_text = ", "
    repl_text = "; "
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_175 "Edit structured comment field Sequencing Technology replace '/' (case insensitive) with '; '"
VAR
    find_text = "/"
    repl_text = "; "
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_176 "Edit structured comment field Sequencing Technology replace 'Illumina; Illumina' (case insensitive) with 'Illumina'"
VAR
    find_text = "Illumina; Illumina"
    repl_text = "Illumina"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_177 "Edit structured comment field Genome coverage replace 'X' with 'x'"
VAR
    find_text = "X"
    repl_text = "x"
    location = "at the end"
    case_sensitive = true
    field = "Genome coverage"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_178 "Reorder structured comment fields"
FOR EACH StructComment
DO
    ReorderStructuredComment();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_179 "Extend 3' end of feature to end of sequence for CDS features only objects that are 3' partial with 3' end no more than 2 from end of sequence and where source lineage contains 'Bacteria' (case-sensitive) and retranslated affected coding regions"
VAR
    case_sensitive = true
    retranslate_cds = true
FOR EACH Cdregion
WHERE ISPARTIALSTOP() AND
      DISTFROMSTOP() <= 2 AND
      CONTAINS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    ExtendFeatToSeqStop(retranslate_cds);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_180 "Extend 3' end of feature to end of sequence for gene features only objects that are 3' partial with 3' end no more than 2 from end of sequence and where source lineage contains 'Bacteria' (case-sensitive)"
VAR
    case_sensitive = true
FOR EACH Gene
WHERE ISPARTIALSTOP() AND
      DISTFROMSTOP() <= 2 AND
      CONTAINS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    ExtendFeatToSeqStop();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_181 "Extend 5' end of feature to end of sequence for CDS features only objects that are 5' partial with 5' end no more than 2 from end of sequence and where source lineage contains 'Bacteria' (case-sensitive) and retranslated affected coding regions"
VAR
    case_sensitive = true
    retranslate_cds = true
FOR EACH Cdregion
WHERE ISPARTIALSTART() AND
      DISTFROMSTART() <= 2 AND
      CONTAINS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    ExtendFeatToSeqStart(retranslate_cds);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_182 "Extend 5' end of feature to end of sequence for gene features only objects that are 5' partial with 5' end no more than 2 from end of sequence and where source lineage contains 'Bacteria' (case-sensitive)"
VAR
    case_sensitive = true
FOR EACH Gene
WHERE ISPARTIALSTART() AND
      DISTFROMSTART() <= 2 AND
      CONTAINS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    ExtendFeatToSeqStart();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_183 "Apply match to CDS codon-start (overwrite existing text) where CDS translation does not contain '*' (case-sensitive)"
FOR EACH Cdregion
WHERE NOT CONTAINS(TRANSLATION(), "*")
DO
  ApplyCDSFrame("match");
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_184 "Synchronize coding region partials"
FOR EACH Cdregion
DO
    SynchronizeCDSPartials();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_185 "Perform Autofix for DISC_PRODUCT_NAME_TYPO Discrepancy Report Test"
FOR EACH TSEntry
Do
    PerformDiscrAutofix("SUSPECT_PRODUCT_NAMES");
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_186 "Perform Autofix for DISC_PRODUCT_NAME_QUICKFIX Discrepancy Report Test"
FOR EACH TSEntry
Do
    PerformDiscrAutofix("SUSPECT_PRODUCT_RULES");
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_187 "Edit CDS note replace '[intronless gene]' with '' where source lineage starts with 'Bacteria' (case-sensitive)"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_188 "Edit CDS note replace '[intronless gene]' with '' where source lineage starts with 'Archaea' (case-sensitive)"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Archaea", case_sensitive)
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_189 "Edit CDS note replace '[intronless gene]' with '' where source lineage starts with 'Viruses' (case-sensitive)"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Viruses", case_sensitive)
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_190 "Edit CDS note replace '[intronless gene]' with '' where sequence type is mRNA [cDNA]"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE MOLINFO_FOR_SEQFEAT("biomol") = "mRNA"
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_191 "Remove 5'UTR note where 5'UTR note equals '5'UTR' (ignore spaces, ignore punctuation), allow '5'UTR' to be replaced by '5' UTR', 'UTR', '5`UTR', and '5` UTR'"
VAR
    field_name = "comment"
    match_text = "5'UTR"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "5'UTR" AND
    EQUALS(field_name, match_text, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_text)
DO   
    RemoveQual(field_name);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_192 "Remove 3'UTR note where 3'UTR note equals '3' UTR' (ignore spaces, ignore punctuation), allow '3' UTR' to be replaced by '3'UTR', 'UTR', '3` UTR', and '3`UTR'"
VAR
    field_name = "comment"
    match_text = "3'UTR"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "3'UTR" AND
    EQUALS(field_name, match_text, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_text)
DO   
    RemoveQual(field_name);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_193 "Edit gene locus replace ' gene' (case insensitive) with '' where gene locus does not contain 'recombination' (ignore spaces), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where gene locus does not contain 'triple' (ignore spaces), allow 'triple' to be replaced by 'block'"
VAR
    find_text = " gene"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    qual_name = "data.gene.locus"
FOR EACH Gene
WHERE NOT CONTAINS(qual_name, "recombination", case_sensitive, ignore_space, "synonyms.txt", "recombination") AND
      NOT CONTAINS(qual_name, "triple", case_sensitive, ignore_space, "synonyms.txt", "triple")
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_194 "Edit protein name replace ', partial CDS' (case insensitive) with ''"
VAR
    find_text = ", partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_195 "Edit protein name replace '; partial CDS' (case insensitive) with ''"
VAR
    find_text = "; partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_196 "Edit protein name replace 'partial CDS' (case insensitive) with ''"
VAR
    find_text = "partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_197 "Edit protein name replace 'gene, partial CDS' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    field_name = "data.prot.name"
    find_text = "gene, partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE ENDS(field_name, find_text) AND
      NOT CONTAINS(field_name, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
      NOT CONTAINS(field_name, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
      NOT CONTAINS(field_name, "triple", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve(field_name) 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_198 "Edit protein name replace 'gene partial CDS' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    field_name = "data.prot.name"
    find_text = "gene partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE ENDS(field_name, find_text) AND
          NOT CONTAINS(field_name, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(field_name, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(field_name, "triple", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve(field_name) 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_199 "Edit protein name replace 'gene, partial protein' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    field_name = "data.prot.name"
    find_text = "gene, partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE ENDS(field_name, find_text) AND
          NOT CONTAINS(field_name, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(field_name, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(field_name, "triple", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve(field_name) 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_200 "Edit protein name replace 'gene partial protein' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    field_name = "data.prot.name"
    find_text = "gene partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE ENDS(field_name, find_text) AND
          NOT CONTAINS(field_name, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(field_name, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(field_name, "triple", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve(field_name) 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_201 "Edit protein name replace ', partial protein' (case insensitive) with ''"
VAR
    find_text = ", partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_202 "Edit protein name replace '; partial protein' (case insensitive) with ''"
VAR
    find_text = "; partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_203 "Edit protein name replace ' partial protein' (case insensitive) with ''"
VAR
    find_text = " partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_204 "Edit protein name replace ', partial' (case insensitive) with ''"
VAR
    find_text = ", partial"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_205 "Edit protein name replace '; partial' (case insensitive) with ''"
VAR
    find_text = "; partial"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_206 "Edit protein name replace ' partial' (case insensitive) with ''"
VAR
    find_text = " partial"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_207 "Edit protein name replace 'oxydase' (case insensitive) with 'oxidase'"
VAR
    find_text = "oxydase"
    repl_text = "oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_208 "Edit protein name replace 'oxigenase' (case insensitive) with 'oxygenase'"
VAR
    find_text = "oxigenase"
    repl_text = "oxygenase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_209 "Edit protein name replace 'cytochorme' (case insensitive) with 'cytochrome'"
VAR
    find_text = "cytochorme"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_210 "Edit protein name replace 'citochrome' (case insensitive) with 'cytochrome'"
VAR
    find_text = "citochrome"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_211 "Edit protein name replace 'cytochome' (case insensitive) with 'cytochrome'"
VAR
    find_text = "cytochome"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_212 "Edit protein name replace 'polymeerase' (case insensitive) with 'polymerase'"
VAR
    find_text = "polymeerase"
    repl_text = "polymerase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_213 "Apply cytochrome b to CDS product (overwrite existing text) where CDS product equals 'cytochrome b gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'region', 'cytb', 'cyt b', 'partial sequence', 'complete sequence', '(cytb)', and '(cyt b)'"
VAR
    new_value = "cytochrome b"
    existing_text = "eReplace"
    match1 = "cytochrome b gene"
    match2 = "gene"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_214 "Apply maturase K to CDS product (overwrite existing text) where CDS product equals 'maturase K gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'partial', 'complete', 'region', 'sequence', 'matK', 'mat k', 'partial sequence', 'complete sequence', '(matK)', and '(mat K)'"
VAR
    new_value = "maturase K"
    existing_text = "eReplace"
    match1 = "maturase K gene"
    match2 = "gene"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_215 "Edit protein name replace 'cytochrome oxidase c subunit 1' (case insensitive) with 'cytochrome c oxidase subunit 1'"
VAR
    find_text = "cytochrome oxidase c subunit 1"
    repl_text = "cytochrome c oxidase subunit 1"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_216 "Apply tandem to repeat_region rpt-type (append separated by semicolon) where repeat_region satellite-type equals 'microsatellite' (case-sensitive) and where repeat_region rpt-type does not contain 'tandem' (case-sensitive)"
VAR
    new_value = "tandem"
    existing_text = "eAppend"
    delimiter = ";"
    case_sensitive = true
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region" AND
    STARTS("qual", "satellite", "microsatellite", case_sensitive) AND
    NOT CONTAINS("qual", "rpt_type", new_value, case_sensitive)
DO   
    obj = Resolve("qual") WHERE obj.qual = "rpt_type";
    SetGBQualifier(obj, "qual", "rpt_type", new_value, existing_text, delimiter);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_217 "Edit protein name replace 'cytochrome oxidase c subunit I' (case insensitive) with 'cytochrome c oxidase subunit I'"
VAR
    find_text = "cytochrome oxidase c subunit I"
    repl_text = "cytochrome c oxidase subunit I"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_218 "Edit protein name replace 'cytochrome c oxidae' (case insensitive) with 'cytochrome c oxidase'"
VAR
    find_text = "cytochrome c oxidae"
    repl_text = "cytochrome c oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_219 "Edit protein name replace 'cytochrome oxidae' (case insensitive) with 'cytochrome oxidase'"
VAR
    find_text = "cytochrome oxidae"
    repl_text = "cytochrome oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_220 "Edit protein name replace 'cytochrom c oxidase subunit 1' (case insensitive) with 'cytochrome c oxidase subunit 1'"
VAR
    find_text = "cytochrom c oxidase subunit 1"
    repl_text = "cytochrome c oxidase subunit 1"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_221 "Edit protein name replace 'cytochrom oxidase subunit 1' (case insensitive) with 'cytochrome oxidase subunit 1'"
VAR
    find_text = "cytochrom oxidase subunit 1"
    repl_text = "cytochrome oxidase subunit 1"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_222 "Edit protein name replace 'Translation Elongation Factor 1-alpha ' (case insensitive) with 'translation elongation factor 1-alpha '"
VAR
    find_text = "Translation Elongation Factor 1-alpha "
    repl_text = "translation elongation factor 1-alpha "
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_223 "Swap protein name with protein description where protein name equals 'COI' (ignore spaces, ignore punctuation) and where protein description equals 'cytochrome oxidase subunit I' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase subunit I' to be replaced by 'cytochrome c oxidase subunit I', 'cytochrome c oxidase subunit one', 'cytochrome oxidase subunit one', 'cytochrome c oxidase subunit I', and 'cytochrome oxidase subunit I'"
Var
    match_protein = "COI"
    match_descr = "cytochrome oxidase subunit I"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
For each Protein
WHERE EQUALS("data.prot.desc", match_descr, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match_descr) AND
      EQUALS("data.prot.name", match_protein, case_sensitive, ignore_space, ignore_punctuation)
Do
    src_obj = Resolve("data.prot.name") WHERE EQUALS(src_obj, match_protein, case_sensitive, ignore_space, ignore_punctuation);
    SwapQual(src_obj, "data.prot.desc");
    UpdatemRNAProduct();
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_224 "Swap protein name with CDS comment where protein name equals 'COI' (ignore spaces, ignore punctuation) and where CDS comment equals 'cytochrome oxidase subunit I' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase subunit I' to be replaced by 'cytochrome c oxidase subunit I', 'cytochrome c oxidase subunit one', 'cytochrome oxidase subunit one', 'cytochrome c oxidase subunit I', and 'cytochrome oxidase subunit I'"
VAR
    update_mrna = true
    match_protein = "COI"
    match_cds = "cytochrome oxidase subunit I"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("CDS", "comment"), match_cds, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match_cds) AND
      EQUALS("data.prot.name", match_protein, case_sensitive, ignore_space, ignore_punctuation)
DO
    src = Resolve("data.prot.name") WHERE EQUALS(src, match_protein, case_sensitive, ignore_space, ignore_punctuation);
    SwapFeatureQual(src, "CDS", "comment", update_mrna);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_225 "Edit protein name replace 'Cytochrome Oxidase unit ' (case insensitive) with 'cytochrome oxidase subunit ' where protein name does not contain 'subunit' (case-sensitive)"
VAR
    find_text = "Cytochrome Oxidase unit "
    repl_text = "cytochrome oxidase subunit "
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH Protein
WHERE NOT CONTAINS("data.prot.name", "subunit", case_sensitive_constr) AND CONTAINS("data.prot.name", find_text)
DO
    o = Resolve("data.prot.name") WHERE NOT CONTAINS(o, "subunit", case_sensitive_constr);
    EditStringQual (o, find_text, repl_text, location, case_sensitive_edit);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_226 "Edit protein name replace 'Cytochrome c Oxidase unit ' (case insensitive) with 'cytochrome c oxidase subunit ' where protein name does not contain 'subunit' (case-sensitive)"
VAR
    find_text = "Cytochrome c Oxidase unit "
    repl_text = "cytochrome c oxidase subunit "
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH Protein
WHERE NOT CONTAINS("data.prot.name", "subunit", case_sensitive_constr) AND CONTAINS("data.prot.name", find_text)
DO
    o = Resolve("data.prot.name") WHERE NOT CONTAINS(o, "subunit", case_sensitive_constr);
    EditStringQual (o, find_text, repl_text, location, case_sensitive_edit);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_227 "Apply cytochrome c oxidase subunit I to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit I gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome c oxidase subunit I gene' to be replaced by 'cytochrome c oxidase I', 'cytochrome c oxidase I gene', 'cytochrome c subunit I', and 'cytochrome c oxidase subunit I gene protein', allow 'I' to be replaced by 'one', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit I"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit I gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "I"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_228 "Apply cytochrome c oxidase subunit II to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit II gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome c oxidase subunit II gene' to be replaced by 'cytochrome c oxidase II gene', 'cytochrome c oxidase II', 'cytochrome c subunit II', and 'cytochrome c oxidase subunit II protein', allow 'II' to be replaced by 'two', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit II"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit II gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "II"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_229 "Apply cytochrome oxidase subunit I to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit I gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit I gene' to be replaced by 'cytochrome oxidase I gene', 'cytochrome oxidase I', and 'cytochrome subunit I', allow 'I' to be replaced by 'one', allow ' I' to be replaced by ' i', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit I"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit I gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "I"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name")
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_230 "Apply cytochrome oxidase subunit II to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit II gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit II gene' to be replaced by 'cytochrome oxidase II gene', 'cytochrome oxidase II', and 'cytochrome subunit II', allow 'II' to be replaced by 'two', allow 'II' to be replaced by 'ii', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit II"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit II gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "II"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_231 "Apply cytochrome oxidase subunit III to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit III gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit III gene' to be replaced by 'cytochrome oxidase III gene', 'cytochrome oxidase III', and 'cytochrome subunit III', allow 'III' to be replaced by 'three' and 'iii', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit III"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit III gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "III"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_232 "Apply cytochrome c oxidase subunit 1 to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit 1 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome c oxidase subunit 1 gene' to be replaced by 'cytochrome c oxidase 1 gene', 'cytochrome c oxidase 1', and 'cytochrome c subunit 1', allow '1' to be replaced by 'one', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit 1"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit 1 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "1"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_233 "Apply cytochrome oxidase subunit 1 to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit 1 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit 1 gene' to be replaced by 'cytochrome oxidase 1', 'cytochrome oxidase 1 gene', and 'cytochrome subunit 1', allow '1' to be replaced by 'one', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit 1"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit 1 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "1"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_234 "Apply COI to gene locus (overwrite existing text) where gene locus equals 'cytochrome oxidase subunit I (COI)' (case-sensitive, ignore spaces, ignore punctuation) and where protein name equals 'cytochrome oxidase subunit I (COI)', allow 'cytochrome oxidase subunit I (COI)' to be replaced by 'cytochrome oxidase subunit I'"
VAR
    new_value = "COI"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit I (COI)"
    case_sensitive = true
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, "synonyms.txt", match)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_235 "Apply COI to gene locus (overwrite existing text) where gene locus equals 'cytochrome oxidase I (COI)' (case-sensitive, ignore spaces, ignore punctuation) and where protein name equals 'cytochrome oxidase I (COI)', allow 'cytochrome oxidase I (COI)' to be replaced by 'cytochrome oxidase subunit I (COI)'"
VAR
    new_value = "COI"
    existing_text = "eReplace"
    match = "cytochrome oxidase I (COI)"
    case_sensitive = true
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, "synonyms.txt", match)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_236 "Apply cytochrome oxidase subunit I to protein name (overwrite existing text) where gene locus contains 'COI' (case-sensitive) and where protein name equals 'cytochrome oxidase I (COI)', allow 'cytochrome oxidase I (COI)' to be replaced by 'cytochrome oxidase subunit I (COI)'"
VAR
    new_value = "cytochrome oxidase subunit I"
    existing_text = "eReplace"
    case_sensitive = true
    match = "cytochrome oxidase I (COI)"
FOR EACH Protein
WHERE CONTAINS(RELATED_FEATURE("gene", "data.gene.locus"), "COI", case_sensitive) AND EQUALS("data.prot.name", match, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_237 "Apply cytochrome oxidase subunit I to protein name (overwrite existing text) where gene locus contains 'COI' (case-sensitive) and where protein name equals 'cytochrome oxidase I (COI)'"
VAR
    new_value = "cytochrome oxidase subunit I"
    existing_text = "eReplace"
    case_sensitive = true
    match = "cytochrome oxidase I (COI)"
FOR EACH Protein
WHERE CONTAINS(RELATED_FEATURE("gene", "data.gene.locus"), "COI", case_sensitive) AND EQUALS("data.prot.name", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_238 "Apply cytochrome oxidase subunit III to protein name (overwrite existing text) where gene locus contains 'COIII' (case-sensitive) and where protein name equals 'cytochrome oxidase subunit III (COIII) gene' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase subunit III (COIII) gene' to be replaced by 'cytochrome oxidase subunit 3 (COIII) gene', 'cytochrome oxidase subunit 3 (COIII)', and 'cytochrome oxidase subunit III (COIII)'"
VAR
    new_value = "cytochrome oxidase subunit III"
    existing_text = "eReplace"
    case_sensitive_constr1 = true
VAR
    match = "cytochrome oxidase subunit III (COIII) gene"
    case_sensitive_constr2 = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE CONTAINS(RELATED_FEATURE("gene", "data.gene.locus"), "COIII", case_sensitive_constr1) AND
      EQUALS("data.prot.name", match, case_sensitive_constr2, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive_constr2, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_239 "Edit gene locus replace 'mtDNA COI' with 'COI' where gene locus equals 'mtDNA COI' (case-sensitive)"
VAR
    find_text = "mtDNA COI"
    repl_text = "COI"
    location = "anywhere"
    case_sensitive = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", find_text, case_sensitive)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_240 "Apply cytochrome c oxidase subunit 2 to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit 2 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'partial', 'complete', 'sequence', 'region', 'partial sequence', 'complete sequence', and 'protein', allow 'cytochrome c oxidase subunit 2 gene' to be replaced by 'cytochrome c oxidase 2 gene', 'cytochrome c oxidase 2', and 'cytochrome c subunit 2', allow '2' to be replaced by 'two', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit 2"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit 2 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "2"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_241 "Apply cytochrome oxidase subunit 2 to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit 2 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'partial', 'complete', 'sequence', 'region', 'partial sequence', 'complete sequence', and 'protein', allow 'cytochrome oxidase subunit 2 gene' to be replaced by 'cytochrome oxidase 2 gene', 'cytochrome oxidase 2', and 'cytochrome subunit 2', allow '2' to be replaced by 'two', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit 2"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit 2 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "2"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_242 "Apply cytochrome oxidase subunit 3 to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit 3 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'partial', 'complete', 'sequence', 'region', 'partial sequence', 'complete sequence', and 'protein', allow 'cytochrome oxidase subunit 3 gene' to be replaced by 'cytochrome oxidase 3 gene', 'cytochrome oxidase 3', and 'cytochrome subunit 3', allow '3' to be replaced by 'three', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit 3"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit 3 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "3"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6)
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_243 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'complete sequence', 'region', 'complete', 'partial', 'sequence', 'rbcL', 'partial sequence', 'protein', and 'subunit', allow 'large subunit gene' to be replaced by 'lsu' and 'large'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit gene"
    match1 = "gene"
    match2 = "large subunit gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_244 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'complete sequence', 'region', 'complete', 'partial', 'sequence', 'rbcL', 'partial sequence', 'protein', and 'subunit', allow 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' to be replaced by 'ribulose-1,5-bisphosphate carboxylase/oxygenase' and 'ribulose 1,5-bisphosphate carboxylase oxygenase' and where gene locus equals 'rbcl gene' (ignore spaces, ignore punctuation), allow 'rbcl gene' to be replaced by 'rbcl', allow 'gene' to be replaced by 'sequence', 'protein', 'partial sequence', 'partial protein', and 'partial gene'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase gene"
    match1 = "gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    match_gene = "rbcl gene"
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match_gene, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_gene) AND
      (EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1) OR
       EQUALS("data.prot.name", "ribulose-1,5-bisphosphate carboxylase/oxygenase rbcL", case_sensitive, ignore_spaces, ignore_punctuation))
DO
    o = Resolve("data.prot.name") WHERE 
    EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1) OR
    EQUALS(o, "ribulose-1,5-bisphosphate carboxylase/oxygenase rbcL", case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_245 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'complete sequence', 'region', 'complete', 'partial', 'sequence', 'rbcS', 'partial sequence', 'protein', and 'subunit', allow 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' to be replaced by 'ribulose-1,5-bisphosphate carboxylase/oxygenase' and 'ribulose 1,5-bisphosphate carboxylase oxygenase' and where gene locus equals 'rbcs gene' (ignore spaces, ignore punctuation), allow 'rbcs gene' to be replaced by 'rbcs', allow 'gene' to be replaced by 'sequence', 'protein', 'partial gene', 'partial sequence', and 'partial protein'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase gene"
    match1 = "gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    match_gene = "rbcs gene"
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match_gene, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_gene) AND
      (EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1) OR
       EQUALS("data.prot.name", "ribulose-1,5-bisphosphate carboxylase/oxygenase rbcS", case_sensitive, ignore_spaces, ignore_punctuation))
DO
    o = Resolve("data.prot.name") WHERE 
    EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1) OR
    EQUALS(o, "ribulose-1,5-bisphosphate carboxylase/oxygenase rbcS", case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_246 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'partial', 'complete', 'partial sequence', 'region', 'sequence', 'rbcS', 'complete sequence', and 'protein'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit gene"
    match1 = "gene"
    match2 = "optional-subunit"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_247 "Apply MHC class I antigen to protein name (overwrite existing text) where object text equals 'MHC CLASS I ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class I antigen"
    existing_text = "eReplace"
    match = "MHC CLASS I ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_248 "Apply MHC class I antigen to mRNA product (overwrite existing text) where object text equals 'MHC CLASS I ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class I antigen"
    existing_text = "eReplace"
    match = "MHC CLASS I ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_249 "Apply MHC class II antigen to protein name (overwrite existing text) where object text equals 'MHC CLASS II ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class II antigen"
    existing_text = "eReplace"
    match = "MHC CLASS II ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_250 "Apply MHC class II antigen to mRNA product (overwrite existing text) where object text equals 'MHC CLASS II ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class II antigen"
    existing_text = "eReplace"
    match = "MHC CLASS II ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_251 "Edit gene locus replace 'NADH dehydrogenase subunit 1 (ND1)' (case insensitive) with 'ND1' where protein name equals 'NADH dehydrogenase subunit 1 (ND1)' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 1 (ND1)"
    repl_text = "ND1"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_252 "Edit protein name replace 'NADH dehydrogenase subunit 1 (ND1)' (case insensitive) with 'NADH dehydrogenase subunit 1' where gene locus equals 'ND1' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 1 (ND1)"
    repl_text = "NADH dehydrogenase subunit 1"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND1", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_253 "Edit gene locus replace 'NADH dehydrogenase subunit 2 (ND2)' (case insensitive) with 'ND2' where protein name equals 'NADH dehydrogenase subunit 2 (ND2)' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 2 (ND2)"
    repl_text = "ND2"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_254 "Edit protein name replace 'NADH dehydrogenase subunit 2 (ND2)' (case insensitive) with 'NADH dehydrogenase subunit 2' where gene locus equals 'ND2' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 2 (ND2)"
    repl_text = "NADH dehydrogenase subunit 2"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND2", case_sensitive, ignore_space, ignore_punctuation) AND 
      CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_255 "Edit gene locus replace 'NADH dehydrogenase subunit 3 (ND3)' (case insensitive) with 'ND3' where protein name equals 'NADH dehydrogenase subunit 3 (ND3)' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 3 (ND3)"
    repl_text = "ND3"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_256 "Edit protein name replace 'NADH dehydrogenase subunit 3 (ND3)' (case insensitive) with 'NADH dehydrogenase subunit 3' where gene locus equals 'ND3' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 3 (ND3)"
    repl_text = "NADH dehydrogenase subunit 3"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND3", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_257 "Edit gene locus replace 'NADH dehydrogenase subunit 4 (ND4)' (case insensitive) with 'ND4' where protein name equals 'NADH dehydrogenase subunit 4 (ND4)' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 4 (ND4)"
    repl_text = "ND4"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_258 "Edit protein name replace 'NADH dehydrogenase subunit 4 (ND4)' (case insensitive) with 'NADH dehydrogenase subunit 4' where gene locus equals 'ND4' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 4 (ND4)"
    repl_text = "NADH dehydrogenase subunit 4"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND4", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_259 "Edit gene locus replace 'NADH dehydrogenase subunit 5 (ND5)' (case insensitive) with 'ND5' where protein name equals 'NADH dehydrogenase subunit 5 (ND5)' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 5 (ND5)"
    repl_text = "ND5"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_260 "Edit protein name replace 'NADH dehydrogenase subunit 5 (ND5)' (case insensitive) with 'NADH dehydrogenase subunit 5' where gene locus equals 'ND5' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 5 (ND5)"
    repl_text = "NADH dehydrogenase subunit 5"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND5", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_261 "Edit gene locus replace 'NADH dehydrogenase subunit 6 (ND6)' (case insensitive) with 'ND6' where protein name equals 'NADH dehydrogenase subunit 6 (ND6)' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 6 (ND6)"
    repl_text = "ND6"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_262 "Edit protein name replace 'NADH dehydrogenase subunit 6 (ND6)' (case insensitive) with 'NADH dehydrogenase subunit 6' where gene locus equals 'ND6' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 6 (ND6)"
    repl_text = "NADH dehydrogenase subunit 6"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND6", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();	
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_263 "Apply NADH dehydrogenase subunit 1 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 1 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 1 gene' to be replaced by 'NADH dehydrogenase 1 gene' and 'NADH dehydrogenase 1', allow '1' to be replaced by 'one'"
VAR
    new_value = "NADH dehydrogenase subunit 1"
    match1 = "NADH dehydrogenase subunit 1 gene"
    match2 = "gene"
    match3 = "1"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_264 "Apply NADH dehydrogenase subunit 4 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 4 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 4 gene' to be replaced by 'NADH dehydrogenase 4 gene' and 'NADH dehydrogenase 4', allow '4' to be replaced by 'four'"
VAR
    new_value = "NADH dehydrogenase subunit 4"
    match1 = "NADH dehydrogenase subunit 4 gene"
    match2 = "gene"
    match3 = "4"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_265 "Apply NADH dehydrogenase subunit 5 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 5 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 5 gene' to be replaced by 'NADH dehydrogenase 5 gene' and 'NADH dehydrogenase 5', allow '5' to be replaced by 'five'"
VAR
    new_value = "NADH dehydrogenase subunit 5"
    match1 = "NADH dehydrogenase subunit 5 gene"
    match2 = "gene"
    match3 = "5"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_266 "Apply NADH dehydrogenase subunit 6 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 6 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 6 gene' to be replaced by 'NADH dehydrogenase 6 gene' and 'NADH dehydrogenase 6', allow '6' to be replaced by 'six'"
VAR
    new_value = "NADH dehydrogenase subunit 6"
    match1 = "NADH dehydrogenase subunit 6 gene"
    match2 = "gene"
    match3 = "6"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_267 "Apply actin to protein name (overwrite existing text) where object text equals 'Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "actin"
    match = "Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_268 "Apply alpha-actin to protein name (overwrite existing text) where object text equals 'alpha Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "alpha-actin"
    match = "alpha Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_269 "Apply actin to mRNA product (overwrite existing text) where object text equals 'Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "actin"
    existing_text = "eReplace"
    match = "Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_270 "Apply alpha-actin to mRNA product (overwrite existing text) where object text equals 'alpha Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "alpha-actin"
    existing_text = "eReplace"
    match = "alpha Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_271 "Apply hypothetical protein to protein name (overwrite existing text) where object text equals 'Hypothetical protein gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'gene sequence', allow 'Hypothetical protein gene' to be replaced by 'Hypothetical'"
VAR
    new_value = "hypothetical protein"
    match = "Hypothetical protein gene"
    match1 = "gene"
    match2 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match, match1, match2)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match, match1, match2);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_272 "Convert protein name to protein name (overwrite existing text) where protein name equals 'Inclusion body protein', allow 'Inclusion body protein' to be replaced by 'Reverse Transcriptase', 'Glucose-6-phosphate dehydrogenase', 'Phosphoribosylaminoimidazole carboxylase', 'Transkelotase', 'Envelope glycoprotein precursor', 'Fusion protein', 'Core protein', 'large Surface protein', 'Rhodopsin', 'Brain Derived Neurotrophic Factor', 'Oocyte maturation factor', 'Phosducin', 'Prolactin receptor', 'Spike protein', 'Histone protein', 'Nucleocapsid protein', 'Adenylate Kinase', 'Alcohol dehydrogenase', 'Glucosephosphate isomerase', 'Malate Dehydrogenase', 'Hemagglutinin', 'Large protein', 'Matrix protein', 'Phosphoprotein', 'Nucleolin', 'Cell Division Cycle 42', 'Heat Shock Protein 90', 'Growth Hormone', 'Elongation Factor 1 alpha', and 'Attachment protein'" 
VAR
    match = "Inclusion body protein"
    cap_change = "tolower"
    strip_name = false
    existing_text = "eReplace"
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, "synonyms.txt", match)
DO
    src = Resolve("data.prot.name") WHERE EQUALS(src, match, "synonyms.txt", match);
    dest = Resolve("data.prot.name") WHERE EQUALS(dest, match, "synonyms.txt", match);
    ConvertStringQual (src, dest, cap_change, strip_name, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_273 "Convert mRNA product to mRNA product (overwrite existing text) where mRNA product equals 'Inclusion body protein', allow 'Inclusion body protein' to be replaced by 'Reverse Transcriptase', 'Glucose-6-phosphate dehydrogenase', 'Phosphoribosylaminoimidazole carboxylase', 'Transkelotase', 'Envelope glycoprotein precursor', 'Fusion protein', 'Core protein', 'large Surface protein', 'Rhodopsin', 'Brain Derived Neurotrophic Factor', 'Oocyte maturation factor', 'Phosducin', 'Prolactin receptor', 'Spike protein', 'Histone protein', 'Nucleocapsid protein', 'Adenylate Kinase', 'Alcohol dehydrogenase', 'Glucosephosphate isomerase', 'Malate Dehydrogenase', 'Hemagglutinin', 'Large protein', 'Matrix protein', 'Phosphoprotein', 'Nucleolin', 'Cell Division Cycle 42', 'Heat Shock Protein 90', 'Growth Hormone', 'Elongation Factor 1 alpha', and 'Attachment protein'"
VAR
    match = "Inclusion body protein"
    cap_change = "tolower"
    strip_name = false
    existing_text = "eReplace"
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, "synonyms.txt", match)
DO
    ConvertStringQual ("data.rna.ext.name", "data.rna.ext.name", cap_change, strip_name, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_274 "Edit protein name replace 'Histone H3' (case insensitive) with 'histone H3'"
VAR
    find_text = "Histone H3"
    repl_text = "histone H3"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_275 "Edit mRNA product replace 'Histone H3' (case insensitive) with 'histone H3'"
VAR
    find_text = "Histone H3"
    repl_text = "histone H3"
    location = "anywhere"
    case_sensitive = false
FOR EACH mRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_276 "Edit protein name replace 'Putative' (case insensitive) with 'putative'"
VAR
    find_text = "Putative"
    repl_text = "putative"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_277 "Apply putative to protein name (prefix separated by space) where object text ends with ', putative' (ignore spaces, ignore punctuation) and where object text does not start with 'putative' (ignore spaces), allow 'putative' to be replaced by 'hypothetical'"
VAR
    field_name = "data.prot.name"
    new_value = "putative"
    existing_text = "ePrepend"
    delimiter = " "
    match = ", putative"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation_constr1 = true
    ignore_punctuation_constr2 = false
FOR EACH Protein
WHERE ENDS(field_name, match, case_sensitive, ignore_space, ignore_punctuation_constr1) AND
      NOT STARTS(field_name, "putative", case_sensitive, ignore_space, ignore_punctuation_constr2, "synonyms.txt", "putative")
DO
    o = Resolve(field_name) 
    WHERE ENDS(o, match, case_sensitive, ignore_space, ignore_punctuation_constr1) AND
          NOT STARTS(o, "putative", case_sensitive, ignore_space, ignore_punctuation_constr2, "synonyms.txt", "putative");
    SetStringQual (o, new_value, existing_text, delimiter);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_278 "Edit protein name replace ', putative' (case insensitive) with '' where object text starts with 'putative' (ignore spaces, ignore punctuation)"
VAR
    find_text = ", putative"
    repl_text = " "
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text) AND STARTS("data.prot.name", "putative", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE STARTS(o, "putative", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_279 "Edit protein name replace ' putative' (case insensitive) with '' where object text starts with 'putative' (ignore spaces, ignore punctuation)"
VAR
    find_text = " putative"
    repl_text = " "
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text) AND STARTS("data.prot.name", "putative", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE STARTS(o, "putative", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_280 "Edit protein name replace 'Polymerase' (case insensitive) with 'polymerase' where protein name contains 'Polymerase sequence' (ignore spaces, ignore punctuation), allow 'Polymerase sequence' to be replaced by 'Polymerase', 'Polymerase gene', and 'Polymerase protein'"
VAR
    find_text = "Polymerase"
    repl_text = "polymerase"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    match = "Polymerase sequence"
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text) AND CONTAINS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE CONTAINS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_281 "Apply beta-tubulin to protein name (overwrite existing text) where object text equals 'beta-tubulin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-tubulin' to be replaced by 'beta tubulin'"
VAR
    new_value = "beta-tubulin"
    existing_text = "eReplace"
    match = "beta-tubulin gene"
    match1 = "gene"
    match2 = "beta-tubulin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_282 "Apply beta-tubulin to mRNA product (overwrite existing text) where object text equals 'beta-tubulin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-tubulin' to be replaced by 'beta tubulin'"
VAR
    new_value = "beta-tubulin"
    existing_text = "eReplace"
    match = "beta-tubulin gene"
    match1 = "gene"
    match2 = "beta-tubulin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_283 "Apply beta-actin to protein name (overwrite existing text) where object text equals 'beta-actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-actin' to be replaced by 'beta actin' and 'beta_actin'"
VAR
    new_value = "beta-actin"
    existing_text = "eReplace"
    match = "beta-actin gene"
    match1 = "gene"
    match2 = "beta-actin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_284 "Apply beta-actin to mRNA product (overwrite existing text) where object text equals 'beta-actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-actin' to be replaced by 'beta actin' and 'beta_actin'"
VAR
    new_value = "beta-actin"
    existing_text = "eReplace"
    match = "beta-actin gene"
    match1 = "gene"
    match2 = "beta-actin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_285 "Edit protein name replace 'recombination activating gene' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination activating gene"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_286 "Edit protein name replace 'recombination-activating gene' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination-activating gene"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_287 "Edit protein name replace 'recombination-activating protein' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination-activating protein"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_288 "Edit protein name replace 'recombination activating protein, partial gene' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination activating protein, partial gene"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_289 "Apply gag to gene locus (overwrite existing text) where gene locus equals 'GAG gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "gag"
    existing_text = "eReplace"
    match = "GAG gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_290 "Apply pol to gene locus (overwrite existing text) where gene locus equals 'POL gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "pol"
    existing_text = "eReplace"
    match = "POL gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_291 "Apply vif to gene locus (overwrite existing text) where gene locus equals 'VIF gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vif"
    existing_text = "eReplace"
    match = "VIF gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_292 "Apply vpr to gene locus (overwrite existing text) where gene locus equals 'VPR gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpr"
    existing_text = "eReplace"
    match = "VPR gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_293 "Apply tat to gene locus (overwrite existing text) where gene locus equals 'TAT gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "tat"
    existing_text = "eReplace"
    match = "TAT gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_294 "Apply rev to gene locus (overwrite existing text) where gene locus equals 'REV gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "rev"
    existing_text = "eReplace"
    match = "REV gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_295 "Apply vpu to gene locus (overwrite existing text) where gene locus equals 'VPU gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpu"
    existing_text = "eReplace"
    match = "VPU gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_296 "Apply env to gene locus (overwrite existing text) where gene locus equals 'ENV gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "env"
    existing_text = "eReplace"
    match = "ENV gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_297 "Apply nef to gene locus (overwrite existing text) where gene locus equals 'NEF gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "nef"
    existing_text = "eReplace"
    match = "NEF gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_298 "Apply gag protein to CDS product (overwrite existing text) where CDS product equals 'gag sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'gag' to be replaced by 'Gag protein', allow 'gag sequence' to be replaced by 'gag' and 'Gag protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "gag protein"
    existing_text = "eReplace"
    match = "gag sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_299 "Apply pol protein to CDS product (overwrite existing text) where CDS product equals 'pol sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'pol' to be replaced by 'Pol protein', allow 'pol sequence' to be replaced by 'pol' and 'pol protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "pol protein"
    existing_text = "eReplace"
    match = "pol sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_300 "Apply vif protein to CDS product (overwrite existing text) where CDS product equals 'vif sequence' (ignore spaces, ignore punctuation), allow '' to be replaced by 'sequence' and 'gene', allow 'vif' to be replaced by 'Vif protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vif protein"
    existing_text = "eReplace"
    match = "vif sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_301 "Apply vpr protein to CDS product (overwrite existing text) where CDS product equals 'vpr sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'vpr' to be replaced by 'Vpr protein', allow 'vpr sequence' to be replaced by 'vpr' and 'Vpr protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpr protein"
    existing_text = "eReplace"
    match = "vpr sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_302 "Apply tat protein to CDS product (overwrite existing text) where CDS product equals 'tat sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'tat' to be replaced by 'Tat protein', allow 'tat sequence' to be replaced by 'tat' and 'Tat protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "tat protein"
    existing_text = "eReplace"
    match = "tat sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_303 "Apply rev protein to CDS product (overwrite existing text) where CDS product equals 'rev sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'rev' to be replaced by 'Rev protein', allow 'rev sequence' to be replaced by 'rev' and 'Rev protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "rev protein"
    existing_text = "eReplace"
    match = "rev sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_304 "Apply vpu protein to CDS product (overwrite existing text) where CDS product equals 'vpu sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'vpu' to be replaced by 'Vpu protein', allow 'vpu sequence' to be replaced by 'vpu' and 'Vpu protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpu protein"
    existing_text = "eReplace"
    match = "vpu sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_305 "Apply envelope glycoprotein to CDS product (overwrite existing text) where CDS product equals 'env sequence' (ignore spaces, ignore punctuation), allow 'env' to be replaced by 'envelope', allow 'sequence' to be replaced by 'gene', allow 'env sequence' to be replaced by 'Env protein', 'Env glycoprotein', and 'Env' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "envelope glycoprotein"
    existing_text = "eReplace"
    match = "env sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_306 "Apply nef protein to CDS product (overwrite existing text) where CDS product equals 'nef sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'nef sequence' to be replaced by 'Nef protein' and 'nef' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "nef protein"
    existing_text = "eReplace"
    match = "nef sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation) AND
      EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_307 "Apply envelope protein to CDS product (overwrite existing text) where CDS product equals 'Envelope protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Envelope protein sequence' to be replaced by 'Envelope protein'"
VAR
    new_value = "envelope protein"
    existing_text = "eReplace"
    match = "Envelope protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_308 "Apply polyprotein to protein name (overwrite existing text) where object text equals 'Polyprotein gene' (ignore spaces, ignore punctuation), allow 'Polyprotein gene' to be replaced by 'Polyprotein', 'polyprotein sequence', 'polyprotein cds', 'poliprotein', 'pollyprotein', and 'polliprotein'"
VAR
    new_value = "polyprotein"
    existing_text = "eReplace"
    match = "Polyprotein gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_309 "Apply glycoprotein to CDS product (overwrite existing text) where CDS product equals 'Glycoprotein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Glycoprotein sequence' to be replaced by 'Glycoprotein'"
VAR
    new_value = "glycoprotein"
    existing_text = "eReplace"
    match = "Glycoprotein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_310 "Apply nucleoprotein to CDS product (overwrite existing text) where CDS product equals 'Nucleoprotein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Nucleoprotein sequence' to be replaced by 'Nucleoprotein'"
VAR
    new_value = "nucleoprotein"
    existing_text = "eReplace"
    match = "Nucleoprotein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_311 "Apply coat protein to CDS product (overwrite existing text) where CDS product equals 'Coat protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Coat protein sequence' to be replaced by 'Coat protein'"
VAR
    new_value = "coat protein"
    existing_text = "eReplace"
    match = "Coat protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_312 "Apply capsid protein to CDS product (overwrite existing text) where CDS product equals 'Capsid protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Capsid protein sequence' to be replaced by 'capside protein', 'capside protein sequence', and 'Capsid protein'"
VAR
    new_value = "capsid protein"
    existing_text = "eReplace"
    match = "Capsid protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_313 "Apply movement protein to CDS product (overwrite existing text) where CDS product equals 'movement protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'movement protein sequence' to be replaced by 'Movement protein'"
VAR
    new_value = "movement protein"
    existing_text = "eReplace"
    match = "movement protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_314 "Apply envelope glycoprotein to CDS product (overwrite existing text) where CDS product equals 'Envelope glycoprotein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Envelope glycoprotein sequence' to be replaced by 'Envelope glycoprotein protein' and 'Envelope glycoprotein'"
VAR
    new_value = "envelope glycoprotein"
    existing_text = "eReplace"
    match = "Envelope glycoprotein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_315 "Apply nonstructural protein to protein name (overwrite existing text) where object text equals 'Nonstructural protein' (ignore spaces, ignore punctuation)"
VAR
    new_value = "nonstructural protein"
    existing_text = "eReplace"
    match = "Nonstructural protein"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_316 "Apply RNA-dependent RNA polymerase to protein name (overwrite existing text) where object text equals 'RNA-Dependent RNA polymerase' (ignore spaces, ignore punctuation)"
VAR
    new_value = "RNA-dependent RNA polymerase"
    existing_text = "eReplace"
    match = "RNA-Dependent RNA polymerase"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_317 "Edit protein name replace 'conserved hypothetical domain protein' with 'hypothetical protein'"
VAR
    find_text = "conserved hypothetical domain protein"
    repl_text = "hypothetical protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_318 "Edit protein name replace 'conserved hypothetical family protein' with 'hypothetical protein'"
VAR
    find_text = "conserved hypothetical family protein"
    repl_text = "hypothetical protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_319 "Edit protein name replace 'conserved predicted protein' with 'hypothetical protein'"
VAR
    find_text = "conserved predicted protein"
    repl_text = "hypothetical protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_320 "Edit protein name replace 'putative part of phage tail fiber' with 'phage tail fiber-like protein'"
VAR
    find_text = "putative part of phage tail fiber"
    repl_text = "phage tail fiber-like protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_321 "Edit protein name replace 'putative conserved' with 'hypothetical protein' where protein name equals 'putative conserved'"
VAR
    find_text = "putative conserved"
    repl_text = "hypothetical protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", find_text)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, find_text);
    EditStringQual (obj, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_322 "Edit protein name replace 'putative hypothetical protein' with ' hypothetical protein'"
VAR
    find_text = "putative hypothetical protein"
    repl_text = "hypothetical protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_323 "Edit protein name replace 'putative conserved predicted protein' with 'hypothetical protein'"
VAR
    find_text = "putative conserved predicted protein"
    repl_text = "hypothetical protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_324 "Edit protein name replace 'part of AAA domain protein' with 'AAA domain protein-like protein'"
VAR
    find_text = "part of AAA domain protein"
    repl_text = "AAA domain protein-like protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_325 "Apply region found in RelA / SpoT s family protein to CDS comment (overwrite existing text) where protein name equals 'region found in RelA / SpoT s family protein' (case-sensitive)"
VAR
    new_value = "region found in RelA / SpoT s family protein"
    existing_text = "eReplace"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), new_value, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_326 "Edit protein name replace 'region found in RelA / SpoT s family protein' with 'RelA/SpoT family protein'"
VAR
    find_text = "region found in RelA / SpoT s family protein"
    repl_text = "RelA/SpoT family protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_327 "Edit protein name replace 'phosphotriesterase homology protein' with 'phosphotriesterase-like protein'"
VAR
    find_text = "phosphotriesterase homology protein"
    repl_text = "phosphotriesterase-like protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_328 "Edit protein name replace 'transposase for insertion sequences' with 'transposase'"
VAR
    find_text = "transposase for insertion sequences"
    repl_text = "transposase"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_329 "Edit protein name replace 'VCBS' with 'VCBS protein' where protein name equals 'VCBS' (case-sensitive)"
VAR
    find_text = "VCBS"
    repl_text = "VCBS protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", find_text, case_sensitive)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, find_text, case_sensitive);
    EditStringQual (obj, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_330 "Edit protein name replace 'phosphate/phosphite/phosphonate ABC transporters, periplasmic binding protein' with 'phosphate/phosphite/phosphonate ABC transporter, periplasmic binding protein'"
VAR
    find_text = "phosphate/phosphite/phosphonate ABC transporters, periplasmic binding protein"
    repl_text = "phosphate/phosphite/phosphonate ABC transporter, periplasmic binding protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_331 "Apply in prophage CP-933V to CDS comment (overwrite existing text) where protein name equals 'DinI-like protein/in prophage CP-933V' (case-sensitive)"
VAR
    new_value = "in prophage CP-933V"
    existing_text = "eReplace"
    match = "DinI-like protein/in prophage CP-933V"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_332 "Apply various specificities to CDS comment (overwrite existing text) where protein name equals 'tRNA-guanine transglycosylase, various specificities' (case-sensitive)"
VAR
    new_value = "various specificities"
    existing_text = "eReplace"
    match = "tRNA-guanine transglycosylase, various specificities"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_333 "Apply prophage P2 remnant to CDS comment (overwrite existing text) where protein name equals 'DNA-binding transcriptional regulator prophage P2 remnant' (case-sensitive)"
VAR
    new_value = "prophage P2 remnant"
    existing_text = "eReplace"
    match = "DNA-binding transcriptional regulator prophage P2 remnant"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_334 "Apply similar to chlamydial polymorphic outer membrane protein to CDS comment (overwrite existing text) where protein name equals 'chlamydial polymorphic outer membrane protein' (case-sensitive)"
VAR
    new_value = "similar to chlamydial polymorphic outer membrane protein"
    existing_text = "eReplace"
    match = "chlamydial polymorphic outer membrane protein"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_335 "Edit protein name replace 'DNA-binding transcriptional regulator prophage P2 remnant' with 'DNA-binding transcriptional regulator'"
VAR
    find_text = "DNA-binding transcriptional regulator prophage P2 remnant"
    repl_text = "DNA-binding transcriptional regulator"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_336 "Edit protein name replace 'chlamydial polymorphic outer membrane protein' with 'polymorphic outer membrane protein'"
VAR
    find_text = "chlamydial polymorphic outer membrane protein"
    repl_text = "polymorphic outer membrane protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_337 "Edit protein name replace 'tRNA-guanine transglycosylase, various specificities' with 'tRNA-guanine transglycosylase', copy original protein name to CDS note"
VAR
    find_text = "tRNA-guanine transglycosylase, various specificities"
    repl_text = "tRNA-guanine transglycosylase"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    CopyNameToCDSNote();
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_338 "Edit protein name replace 'DinI-like protein/in prophage CP-933V' with 'DinI-like protein'"
VAR
    find_text = "DinI-like protein/in prophage CP-933V"
    repl_text = "DinI-like protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_339 "Edit protein name replace 'peptide deformylase-like' with 'peptide deformylase-like protein' where protein name equals 'peptide deformylase-like' (case-sensitive)"
VAR
    find_text = "peptide deformylase-like"
    repl_text = "peptide deformylase-like protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_340 "Apply maf-like protein BruAb1_2043 to CDS comment (overwrite existing text) where protein name contains 'maf-like protein BruAb1_2043' (case-sensitive)"
VAR
    new_value = "maf-like protein BruAb1_2043"
    existing_text = "eReplace"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), new_value, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_341 "Apply UPF0173 metal-dependent hydrolase BruAb2_0628 to CDS comment (overwrite existing text) where protein name contains 'UPF0173 metal-dependent hydrolase BruAb2_0628' (case-sensitive)"
VAR
    new_value = "UPF0173 metal-dependent hydrolase BruAb2_0628"
    existing_text = "eReplace"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), new_value, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_342 "Apply maf-like protein BruAb1_0276 to CDS comment (overwrite existing text) where protein name contains 'maf-like protein BruAb1_0276' (case-sensitive)"
VAR
    new_value = "maf-like protein BruAb1_0276"
    existing_text = "eReplace"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), new_value, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_343 "Apply UPF0173 metal-dependent hydrolase BAbS19_II06020 to CDS comment (overwrite existing text) where protein name contains 'UPF0173 metal-dependent hydrolase BAbS19_II06020' (case-sensitive)"
VAR
    new_value = "UPF0173 metal-dependent hydrolase BAbS19_II06020"
    existing_text = "eReplace"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), new_value, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_344 "Apply similar to isovaleryl-CoA dehydrogenase, mitochondrial to CDS comment (overwrite existing text) where protein name contains 'isovaleryl-CoA dehydrogenase, mitochondrial' (case-sensitive)"
VAR
    new_value = "similar to isovaleryl-CoA dehydrogenase, mitochondrial"
    existing_text = "eReplace"
    match = "isovaleryl-CoA dehydrogenase, mitochondrial"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_345 "Apply similar to ABC transporter B family member 25, mitochondrial to CDS comment (overwrite existing text) where protein name contains 'ABC transporter B family member 25, mitochondrial' (case-sensitive)"
VAR
    new_value = "similar to ABC transporter B family member 25, mitochondrial"
    existing_text = "eReplace"
    match = "ABC transporter B family member 25, mitochondrial"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_346 "Apply similar to propionyl-CoA carboxylase beta chain, mitochondrial to CDS comment (overwrite existing text) where protein name contains 'propionyl-CoA carboxylase beta chain, mitochondrial' (case-sensitive)"
VAR
    new_value = "similar to propionyl-CoA carboxylase beta chain, mitochondrial"
    existing_text = "eReplace"
    match = "propionyl-CoA carboxylase beta chain, mitochondrial"
    case_sensitive = true
FOR EACH Cdregion
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive)
DO
    SetStringQual ("comment", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_347 "Edit protein name replace 'maf-like protein BruAb1_2043' with 'maf-like protein'"
VAR
    find_text = "maf-like protein BruAb1_2043"
    repl_text = "maf-like protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_348 "Edit protein name replace 'maf-like protein BruAb1_0276' with 'maf-like protein'"
VAR
    find_text = "maf-like protein BruAb1_0276"
    repl_text = "maf-like protein"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_349 "Edit protein name replace 'UPF0173 metal-dependent hydrolase BruAb2_0628' with 'UPF0173 metal-dependent hydrolase'"
VAR
    find_text = "UPF0173 metal-dependent hydrolase BruAb2_0628"
    repl_text = "UPF0173 metal-dependent hydrolase"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_350 "Edit protein name replace 'ABC transporter B family member 25, mitochondrial' with 'ABC transporter B family member 25'"
VAR
    find_text = "ABC transporter B family member 25, mitochondrial"
    repl_text = "ABC transporter B family member 25"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_351 "Edit protein name replace 'glutaryl-CoA dehydrogenase, mitochondrial' with 'glutaryl-CoA dehydrogenase'"
VAR
    find_text = "glutaryl-CoA dehydrogenase, mitochondrial"
    repl_text = "glutaryl-CoA dehydrogenase"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_352 "Edit protein name replace 'propionyl-CoA carboxylase alpha chain, mitochondrial' with 'propionyl-CoA carboxylase alpha chain'"
VAR
    find_text = "propionyl-CoA carboxylase alpha chain, mitochondrial"
    repl_text = "propionyl-CoA carboxylase alpha chain"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
WHERE CONTAINS("data.prot.name", find_text, case_sensitive)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_353 "Edit protein name replace '(Fragment)' (case insensitive) with ''"
VAR
    find_text = "(Fragment)"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
WHERE ENDS("data.prot.name", find_text)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_354 "Remove CDS codon-start where CDS codon-start equals 'atg'"
FOR EACH Cdregion
WHERE ISPRESENT("qual")
DO
    obj = Resolve("qual") WHERE obj.qual = "codon_start" AND obj.val = "atg";
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_355 "Edit intron number replace 'intron' (case insensitive) with ''"
VAR
    find_text = "intron"
    repl_text = ""
    location = "anywhere"
    case_sensitive = false
FOR EACH ImpFeat
WHERE data.imp.key = "intron"
DO
    obj = Resolve("qual") where obj.qual = "number";
    EditStringQual ("obj.val", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_356 "Edit exon number replace 'exon' (case insensitive) with ''"
VAR
    find_text = "exon"
    repl_text = ""
    location = "anywhere"
    case_sensitive = false
FOR EACH ImpFeat
WHERE data.imp.key = "exon"
DO
    obj = Resolve("qual") where obj.qual = "number";
    EditStringQual ("obj.val", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_357 "Update Replaced EC_numbers"
VAR
    del_improper = true
    del_unrecog = true
    del_mult_repl = true
FOR EACH Protein
Do
    UpdateReplacedECNumbers(del_improper, del_unrecog, del_mult_repl);
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_358 "Remove invalid EC_numbers"
FOR EACH Protein
DO
    RemoveInvalidECNumbers();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_359 "Perform Autofix for EC_NUMBER_ON_UNKNOWN_PROTEIN Discrepancy Report Test"
FOR EACH TSEntry
Do
    PerformDiscrAutofix("EC_NUMBER_ON_UNKNOWN_PROTEIN");
Done
------------------------------------------------------------------------------
MACRO AutofixWGS_360 "Edit rRNA product replace 'ribossomal' (case insensitive) with 'ribosomal'"
VAR
    find_text = "ribossomal"
    repl_text = "ribosomal"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_361 "Edit rRNA product replace 'robosmal' (case insensitive) with 'ribosomal'"
VAR
    find_text = "robosmal"
    repl_text = "ribosomal"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_362 "Edit rRNA product replace 'ribosmal' (case insensitive) with 'ribosomal'"
VAR
    find_text = "ribosmal"
    repl_text = "ribosomal"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_363 "Edit rRNA product replace 'S RIBOSOMAL RNA' (case insensitive) with 'S ribosomal RNA' where object text does not end with 'S ribosomal RNA' (case-sensitive)"
VAR
    find_text = "S RIBOSOMAL RNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
    case_sensitiveA = true
FOR EACH rRNA
WHERE NOT ENDS("data.rna.ext.name", repl_text, case_sensitiveA)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_364 "Edit rRNA product replace 'ribosomal RNA gene' (case insensitive) with 'ribosomal RNA' where object text contains 'ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'ribosomal RNA gene' to be replaced by 'ribosomal RNA gene sequence'"
VAR
    find_text = "ribosomal RNA gene"
    repl_text = "ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE CONTAINS("data.rna.ext.name", find_text, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", find_text)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_365 "Apply large subunit ribosomal RNA to rRNA product (overwrite existing text) where object text equals 'LSU ribosomal RNA' (ignore spaces, ignore punctuation), allow 'LSU ribosomal RNA' to be replaced by 'large subunit (LSU) ribosomal RNA'"
VAR
    new_value = "large subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "LSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_366 "Edit rRNA product replace 'rRNA gene' (case insensitive) with 'ribosomal RNA'"
VAR
    find_text = "rRNA gene"
    repl_text = "ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_367 "Edit rRNA product replace '-rRNA' (case insensitive) with ' ribosomal RNA' where rRNA product does not equal 's-rRNA' (ignore spaces, ignore punctuation) and where rRNA product does not equal 'l-rRNA' (ignore spaces, ignore punctuation)"
VAR
    find_text = "-rRNA"
    repl_text = " ribosomal RNA"
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE NOT EQUALS("data.rna.ext.name", "s-rRNA", case_sensitive, ignore_space, ignore_punctuation) AND
      NOT EQUALS("data.rna.ext.name", "l-rRNA", case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_368 "Edit rRNA product replace ' S RIBOSOMAL RNA' (case insensitive) with 'S ribosomal RNA'"
VAR
    find_text = " S RIBOSOMAL RNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_369 "Edit rRNA product replace 'Subunit Ribosomal RNA' (case insensitive) with 'subunit ribosomal RNA' where object text does not end with 'subunit ribosomal RNA' (case-sensitive)"
VAR
    find_text = "Subunit Ribosomal RNA"
    repl_text = "subunit ribosomal RNA"
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH rRNA
WHERE NOT ENDS("data.rna.ext.name", repl_text, case_sensitive_constr)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive_edit);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_370 "Edit rRNA product replace 'RDNA Gene sequence' (case insensitive) with 'ribosomal RNA'"
VAR
    find_text = "RDNA Gene sequence"
    repl_text = "ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_371 "Apply small subunit ribosomal RNA to rRNA product (overwrite existing text) where object text equals 'SSU ribosomal RNA' (ignore spaces, ignore punctuation), allow 'SSU ribosomal RNA' to be replaced by 'small subunit (SSU) ribosomal RNA'"
VAR
    new_value = "small subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "SSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_372 "Edit rRNA product replace 'S SSU ribosomal RNA' (case insensitive) with 'S small subunit ribosomal RNA'"
VAR
    find_text = "S SSU ribosomal RNA"
    repl_text = "S small subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_373 "Edit rRNA product replace 'SSU' (case insensitive) with 'small subunit ribosomal RNA' where object text equals 'SSU' (ignore spaces, ignore punctuation)"
VAR
    find_text = "SSU"
    repl_text = "small subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_374 "Edit rRNA product replace 'LSU' (case insensitive) with 'large subunit ribosomal RNA' where object text equals 'LSU' (ignore spaces, ignore punctuation)"
VAR
    find_text = "LSU"
    repl_text = "large subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_375 "Edit rRNA product replace 'S LSU ribosomal RNA' (case insensitive) with 'S large subunit ribosomal RNA'"
VAR
    find_text = "S LSU ribosomal RNA"
    repl_text = "S large subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_376 "Apply 5.8S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '5.8S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '5.8S ribosomal RNA gene' to be replaced by '5.8SrDNA', '5.8SrRNA', '5.8SrDNA gene', '5.8SrRNA gene', '5.8SrDNA gene sequence', '5.8SrRNA gene sequence', '5.8SrDNA gene sequence region', '5.8SrRNA gene sequence region', '5.8S rDNA gene', '5.8S rRNA gene', and '5.8S gene', allow '5.8S ribosomal RNA gene' to be replaced by 'gene 5.8S rRNA' and 'gene 5.8S ribosomal RNA'"
VAR
    new_value = "5.8S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "5.8S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_377 "Apply 5S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '5S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '5S ribosomal RNA gene' to be replaced by '5SrDNA', '5SrRNA', '5SrDNA gene', '5SrRNA gene', '5SrDNA gene sequence', '5SrRNA gene sequence', '5SrDNA gene sequence region', '5SrRNA gene sequence region', '5S rDNA gene', '5S rRNA gene', '5S gene', and '5S RNA', allow '5S ribosomal RNA gene' to be replaced by 'gene 5S rRNA' and 'gene 5S ribosomal RNA'"
VAR
    new_value = "5S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "5S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_378 "Apply 12S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '12S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '12S ribosomal RNA gene' to be replaced by '12SrDNA', '12SrRNA', '12SrDNA gene', '12SrRNA gene', '12SrDNA gene sequence', '12SrRNA gene sequence', '12SrDNA gene sequence region', '12SrRNA gene sequence region', '12S rDNA gene', and '12S rRNA gene', allow '12S ribosomal RNA gene' to be replaced by 'gene 12S rRNA', 'gene 12S ribosomal RNA', and '12S gene'"
VAR
    new_value = "12S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "12S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_379 "Apply 16S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '16S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '16S ribosomal RNA gene' to be replaced by '16SrDNA', '16SrRNA', '16SrDNA gene', '16SrRNA gene', '16SrDNA gene sequence', '16SrRNA gene sequence', '16SrDNA gene sequence region', '16SrRNA gene sequence region', '16S rDNA gene', and '16S rRNA gene', allow '16S ribosomal RNA gene' to be replaced by 'gene 16S rRNA', 'gene 16S ribosomal RNA', and '16S gene'"
VAR
    new_value = "16S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "16S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_380 "Apply 18S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '18S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '18S ribosomal RNA gene' to be replaced by '18SrDNA', '18SrRNA', '18SrDNA gene', '18SrRNA gene', '18SrDNA gene sequence', '18SrRNA gene sequence', '18SrDNA gene sequence region', '18SrRNA gene sequence region', '18S rDNA gene', and '18S rRNA gene', allow '18S ribosomal RNA gene' to be replaced by 'gene 18S rRNA', 'gene 18S ribosomal RNA', and '18S gene'"
VAR
    new_value = "18S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "18S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_381 "Apply 23S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '23S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '23S ribosomal RNA gene' to be replaced by '23SrDNA', '23SrRNA', '23SrDNA gene', '23SrRNA gene', '23SrDNA gene sequence', '23SrRNA gene sequence', '23SrDNA gene sequence region', '23SrRNA gene sequence region', '23S rDNA gene', and '23S rRNA gene', allow '23S ribosomal RNA gene' to be replaced by 'gene 23S rRNA', 'gene 23S ribosomal RNA', and '23S gene'"
VAR
    new_value = "23S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "23S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_382 "Apply 26S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '26S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '26S ribosomal RNA gene' to be replaced by '26SrDNA', '26SrRNA', '26SrDNA gene', '26SrRNA gene', '26SrDNA gene sequence', '26SrRNA gene sequence', '26SrDNA gene sequence region', '26SrRNA gene sequence region', '26S rDNA gene', and '26S rRNA gene', allow '26S ribosomal RNA gene' to be replaced by 'gene 26S rRNA', 'gene 26S ribosomal RNA', and '26S gene'"
VAR
    new_value = "26S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "26S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_383 "Apply 28S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '28S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '28S ribosomal RNA gene' to be replaced by '28SrDNA', '28SrRNA', '28SrDNA gene', '28SrRNA gene', '28SrDNA gene sequence', '28SrRNA gene sequence', '28SrDNA gene sequence region', '28SrRNA gene sequence region', '28S rDNA gene', and '28S rRNA gene', allow '28S ribosomal RNA gene' to be replaced by 'gene 28S rRNA', 'gene 28S ribosomal RNA', and '28S gene'"
VAR
    new_value = "28S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "28S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_384 "Apply 18S small subunit ribosomal RNA to rRNA product (overwrite existing text) where object text contains '18S SSU ribosomal RNA' (ignore spaces, ignore punctuation), allow '18S SSU ribosomal RNA' to be replaced by '18S small subunit SSU ribosomal RNA', '18S small subunit (SSU) ribosomal RNA', and 'small subunit (SSU) 18S ribosomal RNA'"
VAR
    new_value = "18S small subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "18S SSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE CONTAINS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_385 "Apply 28S large subunit ribosomal RNA to rRNA product (overwrite existing text) where object text contains '28S LSU ribosomal RNA' (ignore spaces, ignore punctuation), allow '28S LSU ribosomal RNA' to be replaced by '28S large subunit LSU ribosomal RNA', '28S large subunit (LSU) ribosomal RNA', and 'large subunit (LSU) 28S ribosomal RNA'"
VAR
    new_value = "28S large subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "28S LSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_386 "Edit Any RNA product replace 'spaser' (case insensitive) with 'spacer'"
VAR
    find_text = "spaser"
    repl_text = "spacer"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    objA = Resolve("data.rna.ext.name");
    EditStringQual (objA, find_text, repl_text, location, case_sensitive);
    objB = Resolve("data.rna.ext.gen.product");
    EditStringQual(objB, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_387 "Edit Any RNA product replace 'intrenal' (case insensitive) with 'internal'"
VAR
    find_text = "intrenal"
    repl_text = "internal"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    objA = Resolve("data.rna.ext.name");
    EditStringQual (objA, find_text, repl_text, location, case_sensitive);
    objB = Resolve("data.rna.ext.gen.product");
    EditStringQual(objB, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_388 "Edit Any RNA product replace 'trascribed' (case insensitive) with 'transcribed'"
VAR
    find_text = "trascribed"
    repl_text = "transcribed"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    objA = Resolve("data.rna.ext.name");
    EditStringQual (objA, find_text, repl_text, location, case_sensitive);
    objB = Resolve("data.rna.ext.gen.product");
    EditStringQual(objB, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_389 "Edit Any RNA comment replace 'spaser' (case insensitive) with 'spacer'"
VAR
    find_text = "spaser"
    repl_text = "spacer"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_390 "Edit Any RNA comment replace 'intrenal' (case insensitive) with 'internal'"
VAR
    find_text = "intrenal"
    repl_text = "internal"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_391 "Edit Any RNA comment replace 'trascribed' (case insensitive) with 'transcribed'"
VAR
    find_text = "trascribed"
    repl_text = "transcribed"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_392 "Convert rRNA to misc_RNA where object text contains 'internal transcribed' (ignore spaces, ignore punctuation) and where object text contains 'ribosomal RNA' (ignore spaces, ignore punctuation) and where object text contains 'contains' (ignore spaces, ignore punctuation), remove original feature"
VAR
    product = "data.rna.ext.name"
    match1 = "internal transcribed"
    match2 = "ribosomal RNA"
    match3 = "contains"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE CONTAINS(product, match1, case_sensitive, ignore_spaces, ignore_punctuation)
      AND CONTAINS(product, match2, case_sensitive, ignore_spaces, ignore_punctuation)
      AND CONTAINS(product, match3, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_393 "Convert misc_RNA product to comment (ignore new text when existing text is present) where object text contains 'internal transcribed' (ignore spaces, ignore punctuation) and where object text contains 'ribosomal' (ignore spaces, ignore punctuation) and where object text contains 'contains' (ignore spaces, ignore punctuation)"
VAR
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE NOT ISPRESENT("comment") AND
      CONTAINS(src_field, "internal transcribed", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS(src_field, "ribosomal", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS(src_field, "contains", case_sensitive, ignore_space, ignore_punctuation)
DO
    ConvertStringQual(src_field, "comment",  cap_change, strip_name, existing_text);
    RemoveQual(src_field);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_394 "Convert misc_RNA product to comment (overwrite existing text) where misc_RNA product equals '18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence' (case-sensitive)"
VAR
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    match = "18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence"
    case_sensitive = true
FOR EACH MiscRNA
WHERE EQUALS(src_field, match, case_sensitive)
DO
    ConvertStringQual(src_field, "comment",  cap_change, strip_name, existing_text);
    RemoveQual(src_field);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_395 "Edit misc_RNA comment replace '18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence' with 'contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA'"
                      VAR
    find_text = "18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence"
    repl_text = "contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA"
    location = "at the beginning"
    case_sensitive = true
FOR EACH MiscRNA
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_396 "Convert misc_RNA note to misc_RNA product (append separated by semicolon) where object text equals 'internal transcribed spacer 1, ITS1 sequence' (case-sensitive), allow 'internal transcribed spacer 1, ITS1 sequence' to be replaced by 'internal transcribed spacer 1, ITS1', 'internal transcribed spacer 1', 'internal transcribed spacer 1, ITS', 'internal transcribed spacer 1, ITS1 sequence', 'internal transcribed spacer 1, ITS1 region', 'ITS1', 'internal transcribed spacer 1, sequence', and 'internal transcribed spacer 1, region'"
VAR
    src = "comment"
    dest = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eAppend"
    delimiter = ";"
    match = "internal transcribed spacer 1, ITS1 sequence"
    case_sensitive = true
FOR EACH MiscRNA
WHERE EQUALS(src, match, case_sensitive, "synonyms.txt", match)
DO
    ConvertStringQual(src, dest, cap_change, strip_name, existing_text, delimiter);
    RemoveQual(src);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_397 "Convert misc_RNA note to misc_RNA product (append separated by semicolon) where object text equals 'internal transcribed spacer 2, ITS2 sequence' (case-sensitive), allow 'internal transcribed spacer 2, ITS2 sequence' to be replaced by 'internal transcribed spacer 2, ITS2', 'internal transcribed spacer 2', 'internal transcribed spacer 2, ITS', 'internal transcribed spacer 2, ITS2 sequence', 'internal transcribed spacer 2, ITS2 region', 'ITS2', 'internal transcribed spacer 2, sequence', and 'internal transcribed spacer 2, region'"
VAR
    src = "comment"
    dest = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eAppend"
    delimiter = ";"
    match = "internal transcribed spacer 2, ITS2 sequence"
    case_sensitive = true
FOR EACH MiscRNA
WHERE EQUALS(src, match, case_sensitive, "synonyms.txt", match)
DO
    ConvertStringQual(src, dest, cap_change, strip_name, existing_text, delimiter);
    RemoveQual(src);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_398 "Convert rRNA to misc_RNA where rRNA product equals 'Internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'ITS1' to be replaced by 'ITS', allow 'sequence' to be replaced by 'region', 'gene', and 'RNA', allow 'Internal transcribed spacer 1, ITS1 sequence' to be replaced by 'ITS1', 'ITS2', 'internal transcribed spacer 1', 'internal transcribed spacer 2', 'internal transcribed spacer 1 (ITS)', 'internal transcribed spacer 2 (ITS)', 'internal transcribed spacer 1 (ITS1)', 'internal transcribed spacer 2 (ITS2)', 'internal transcribed spacer 1, (ITS1)', 'internal transcribed spacer 2, (ITS2)', 'internal transcribed spacer 1, ITS1', and 'internal transcribed spacer 2, ITS2', remove original feature"
VAR
    product = "data.rna.ext.name"
    match1 = "internal transcribed spacer 1, ITS1 sequence"
    match2 = "internal transcribed spacer 2, ITS2 sequence"
    match3 = "ITS1"
    match4 = "ITS2"
    match5 = "internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 1"
    match7 = "optional-internal transcribed spacer 2"
    match8 = "sequence"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS(product, match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match3, match5, match7, match8) OR
      EQUALS(product, match2, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match4, match6, match7, match8)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_399 "Convert rRNA to misc_RNA where rRNA note equals 'Internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'ITS1' to be replaced by 'ITS', allow 'sequence' to be replaced by 'region', 'gene', and 'RNA', allow 'Internal transcribed spacer 1, ITS1 sequence' to be replaced by 'ITS1', 'ITS2', 'internal transcribed spacer 1', 'internal transcribed spacer 2', 'internal transcribed spacer 1 (ITS)', 'internal transcribed spacer 2 (ITS)', 'internal transcribed spacer 1 (ITS1)', 'internal transcribed spacer 2 (ITS2)', 'Internal transcribed spacer 1, ITS1', and 'Internal transcribed spacer 2, ITS2', remove original feature"
VAR
    match1 = "internal transcribed spacer 1, ITS1 sequence"
    match2 = "internal transcribed spacer 2, ITS2 sequence"
    match3 = "ITS1"
    match4 = "ITS2"
    match5 = "internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 1"
    match7 = "optional-internal transcribed spacer 2"
    match8 = "sequence"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("comment", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match3, match5, match7, match8) OR
      EQUALS("comment", match2, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match4, match6, match7, match8)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_400 "Convert region to misc_RNA where region note equals 'Region: Internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'ITS1' to be replaced by 'ITS', allow 'sequence' to be replaced by 'region', 'gene', and 'RNA', remove original feature"
VAR
    match1 = "Region: Internal transcribed spacer 1, ITS1 sequence"
    match2 = "sequence"
    match3 = "ITS1"
    match4 = "internal transcribed spacer 1"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "region" 
      AND EQUALS("comment", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_401 "Convert region to misc_RNA where region name equals 'Internal transcribed spacer 1, ITS1' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow ', ITS1' to be replaced by ' (ITS1)' and ' (ITS)', allow 'Internal transcribed spacer 1, ITS1' to be replaced by 'Internal transcribed spacer 1' and 'Internal transcribed spacer 2', allow '' to be replaced by 'sequence', 'gene', 'partial', and 'complete', remove original feature"
VAR
    match1 = "Internal transcribed spacer 1, ITS1"
    match2 = ", ITS1"
    match3 = "internal transcribed spacer 1"
    match4 = "optional-Region"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-, ITS1"
    match8 = "emptystring02"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "region" 
      AND EQUALS("data.region", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match8)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_402 "Convert misc_feature to misc_RNA where misc_feature note equals 'Region: Internal transcribed spacer 1, ITS1' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'Region: Internal transcribed spacer 1, ITS1' to be replaced by 'Region: Internal transcribed spacer 1', allow ', ITS1' to be replaced by ', (ITS)', ', (ITS1)', and ' (ITS1)', remove original feature"
VAR
    match1 = "Region: Internal transcribed spacer 1, ITS1"
    match2 = ", ITS1"
    match3 = "internal transcribed spacer 1"
    match4 = "optional-Region"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-, ITS1"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE EQUALS("comment", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_403 "Convert misc_feature to misc_RNA where misc_feature product equals 'Region: Internal transcribed spacer 1, ITS1' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'Region: Internal transcribed spacer 1, ITS1' to be replaced by 'Region: Internal transcribed spacer 1', allow ', ITS1' to be replaced by ', (ITS)', ', (ITS1)', and ' (ITS1)', remove original feature"
VAR
    match1 = "Region: Internal transcribed spacer 1, ITS1"
    match2 = ", ITS1"
    match3 = "internal transcribed spacer 1"
    match4 = "optional-Region"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-, ITS1"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE EQUALS("qual", "product", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_404 "Convert misc_feature to misc_RNA where misc_feature note contains 'internal transcribed spacer' (ignore spaces, ignore punctuation) and where object text contains 'RNA' (case-sensitive), remove original feature"
VAR
    match1 = "internal transcribed spacer"
    match2 = "RNA"
    case_sensitive1 = false
    ignore_spaces = true
    ignore_punctuation = true
    case_sensitive2 = true
FOR EACH MiscFeat
WHERE CONTAINS("comment", match1, case_sensitive1, ignore_spaces, ignore_punctuation)
      AND CONTAINS("comment", match2, case_sensitive2)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_405 "Convert misc_RNA product to misc_RNA note (overwrite existing text) where object text contains 'internal transcribed spacer' (case-sensitive) and where object text contains 'RNA' (case-sensitive)"
VAR
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    case_sensitive = true
FOR EACH MiscRNA
WHERE CONTAINS(src_field, "internal transcribed spacer", case_sensitive) AND
      CONTAINS(src_field, "RNA", case_sensitive)
DO
    ConvertStringQual(src_field, "comment",  cap_change, strip_name, existing_text);
    RemoveQual(src_field);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_406 "Apply internal transcribed spacer 1 to misc_RNA product (overwrite existing text) where misc_RNA product equals 'internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow 'internal' to be replaced by 'interal', allow '' to be replaced by 'sequence', 'gene', and 'region', allow ', ITS1' to be replaced by ' (ITS)', ' (ITS1)', ', (ITS1)', and 'ITS', allow 'sequence' to be replaced by 'region' and 'gene', allow 'internal transcribed spacer 1, ITS1 sequence' to be replaced by 'internal transcribed spacer-1'"
VAR
    field_name = "data.rna.ext.gen.product"
    new_value = "internal transcribed spacer 1"
    existing_text = "eReplace"
    match1 = "internal transcribed spacer 1, ITS1 sequence"
    match2 = "internal"
    match3 = "sequence"
    match4 = ", ITS1"
    match5 = "optional-, ITS1"
    match6 = "optional-internal transcribed spacer 1"
    match7 = "optional-sequence"
    match8 = "emptystring02"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS(field_name, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7, match8)
DO
    SetStringQual (field_name, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_407 "Apply internal transcribed spacer 2 to misc_RNA product (overwrite existing text) where misc_RNA product equals 'internal transcribed spacer 2, ITS2 sequence' (ignore spaces, ignore punctuation), allow 'internal' to be replaced by 'interal', allow '' to be replaced by 'sequence', 'gene', and 'region', allow ', ITS2' to be replaced by ' (ITS)', ' (ITS2)', ', (ITS2)', and 'ITS', allow 'sequence' to be replaced by 'region' and 'gene', allow 'internal transcribed spacer 2, ITS2 sequence' to be replaced by 'internal transcribed spacer-2'"
VAR
    field_name = "data.rna.ext.gen.product"
    new_value = "internal transcribed spacer 2"
    existing_text = "eReplace"
    match1 = "internal transcribed spacer 2, ITS2 sequence"
    match2 = "internal"
    match3 = "sequence"
    match4 = ", ITS2"
    match5 = "optional-, ITS2"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-sequence"
    match8 = "emptystring02"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS(field_name, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7, match8)
DO
    SetStringQual (field_name, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_408 "Convert rRNA to misc_RNA where object text contains '16S-23S ribosomal RNA intergenic spacer' (case-sensitive), remove original feature"
VAR
    match = "16S-23S ribosomal RNA intergenic spacer"
    case_sensitive = true
FOR EACH rRNA
WHERE CONTAINS("data.rna.ext.name", match, case_sensitive)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_409 "Convert misc_RNA comment to product (ignore new text when existing text is present) where object text equals '16S-23S ribosomal RNA intergenic spacer' (ignore spaces, ignore punctuation), allow '16S-23S ribosomal RNA intergenic spacer' to be replaced by '16S-23S intergenic spacer', '16S-23S spacer', '16S-23S rRNA intergenic spacer', and '16S-23S IGS' and where object text does not contain 'may also' (ignore spaces, ignore punctuation), allow 'may also' to be replaced by 'contains'"
VAR
    src = "comment"
    dest = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    match1 = "16S-23S ribosomal RNA intergenic spacer"
    match2 = "may also"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE NOT ISPRESENT(dest) AND EQUALS(src, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1) 
      AND NOT CONTAINS(src, match2, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match2)
DO
    ConvertStringQual(src, dest, cap_change, strip_name, existing_text);
    RemoveQual(src);
DONE
--------------------------------------------------------------
MACRO AutofixWGS_410 "Edit misc_feature note replace 'Intergenic spacer' (case insensitive) with 'intergenic spacer' where misc_feature note does not contain 'intergenic spacer' (case-sensitive)"
VAR
    find_text = "Intergenic spacer"
    repl_text = "intergenic spacer"
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH MiscFeat
WHERE NOT CONTAINS("comment", repl_text, case_sensitive_constr)
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive_edit);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_411 "Apply 16S-23S ribosomal RNA intergenic spacer to misc_RNA product (overwrite existing text) where object text equals '16S-23S rRNA intergenic spacer' (ignore spaces, ignore punctuation), allow '16S-23S rRNA intergenic spacer' to be replaced by '16S-23S IGS', '16S-23S intergenic spacer', and '16S-23S spacer'"
VAR
    field_name = "data.rna.ext.gen.product"
    new_value = "16S-23S ribosomal RNA intergenic spacer"
    existing_text = "eReplace"
    match = "16S-23S rRNA intergenic spacer"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS(field_name, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual (field_name, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_412 "Set both ends partial for rRNA features only objects on plus strands of nucleotide sequences that are complete on both ends with 5' end exactly 0 from end of sequence with 3' end exactly 0 from end of sequence and where object text equals '16S ribosomal RNA' (ignore spaces, ignore punctuation), allow '16S ribosomal RNA' to be replaced by '16S small subunit ribosomal RNA' and where sequence type is nucleotide and rRNA is present and sequence has exactly 1 feature and sequence is less than 1201 in length"
VAR
    extend = false
    match = "16S ribosomal RNA"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE STRAND() = "plus" AND
      IS_SEQ_NA("location") AND
      NOT ISPARTIALSTART() AND NOT ISPARTIALSTOP() AND
      DISTFROMSTART() = 0 AND DISTFROMSTOP() = 0 AND
      EQUALS("data.rna.ext.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      FEATS_ON_SEQ("all") = 1 AND
      SEQUENCE_FOR_SEQFEAT("inst.length") < 1201
DO
    SetBothEndsPartial("all", extend);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_413 "Set both ends partial for rRNA features only objects on plus strands of nucleotide sequences that are complete on both ends with 5' end exactly 0 from end of sequence with 3' end exactly 0 from end of sequence and where object text equals '18S ribosomal RNA' (case-sensitive), allow '18S ribosomal RNA' to be replaced by '23S ribosomal RNA', '28S ribosomal RNA', '26S ribosomal RNA', '18S small subunit ribosomal RNA', '23S large subunit ribosomal RNA', '26S large subunit ribosomal RNA', '28S large subunit ribosomal RNA', and 'large subunit ribosomal RNA' and where sequence type is nucleotide and rRNA is present and sequence has exactly 1 feature and sequence is less than 1000 in length"
VAR
    extend = false
    match = "18S ribosomal RNA"
    case_sensitive = true
FOR EACH rRNA
WHERE STRAND() = "plus" AND
      IS_SEQ_NA("location") AND
      NOT ISPARTIALSTART() AND NOT ISPARTIALSTOP() AND
      DISTFROMSTART() = 0 AND DISTFROMSTOP() = 0 AND
      EQUALS("data.rna.ext.name", match, case_sensitive, "synonyms.txt", match) AND
      FEATS_ON_SEQ("all") = 1 AND
      SEQUENCE_FOR_SEQFEAT("inst.length") < 1000
DO
    SetBothEndsPartial("all", extend);
DONE
------------------------------------------------------------------------------
MACRO AutofixWGS_414 "Replace selenocysteine stops"
FOR EACH Cdregion
DO
    ReplaceSelenocysteineStops();
DONE
-----------------------------------------------------------------
MACRO AutofixWGS_415 "Perform Autofix for SHOW_HYPOTHETICAL_CDS_HAVING_GENE_NAME Discrepancy Report Test"
FOR EACH TSEntry
Do
    PerformDiscrAutofix("SHOW_HYPOTHETICAL_CDS_HAVING_GENE_NAME");
Done
-----------------------------------------------------------------
MACRO AutofixWGS_416 "Perform Autofix for TEST_BAD_GENE_NAME Discrepancy Report Test"
FOR EACH TSEntry
Do
    PerformDiscrAutofix("BAD_GENE_NAME");
Done
-----------------------------------------------------------------
MACRO AutofixWGS_417 "Remove duplicate features and remove protein products"
VAR
    check_partials = true
    case_sensitive = false
    remove_proteins = true
FOR EACH Seq
DO
    RemoveDuplicateFeatures("any", check_partials, case_sensitive, remove_proteins);
DONE
-----------------------------------------------------------------
MACRO AutofixWGS_418 "Remove Definition Line where sequence type is protein"
FOR EACH Seqdesc
WHERE CHOICETYPE() = "title" AND SEQUENCE_FOR_SEQDESC("inst.mol") = "aa"
DO
    RemoveDescriptor();
DONE
-----------------------------------------------------------------
MACRO AutofixWGS_419 "Instantiate protein titles"
FOR EACH SeqAA
DO
    AddProteinTitles();
DONE
-----------------------------------------------------------------
MACRO AutofixWGS_420 "Convert chromosome to linkage-group (overwrite existing text) where chromosome starts with 'LG' "
VAR
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    match = "LG"
FOR EACH BioSource
DO
    src = Resolve("subtype") WHERE src.subtype = "chromosome" AND STARTS("src.name", match);
    ConvertStringQual("src.name", "linkage-group", cap_change, strip_name, existing_text);
    RemoveModifier(src);
DONE
-----------------------------------------------------------------
MACRO AutofixWGS_421 "Edit structured comment field 'Sequencing Technology' replace 'MiniION' (case insensitive)  with 'MinION'"
VAR
    find_text = %MiniION%
    repl_text = %MinION%
    location = "anywhere"
    case_sensitive = %false%
    is_regex = %false%
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE EQUALS("obj.label.str", "Sequencing Technology", true);
    EditStringQual("obj.data.str", find_text, repl_text, location, case_sensitive, is_regex);
DONE
-----------------------------------------------------------------



