MACRO AutofixGB_001 "Extend 3' end of feature to end of sequence for CDS features only objects that are 3' partial with 3' end no more than 2 from end of sequence and where sequence type is mRNA [cDNA]"
FOR EACH Cdregion
WHERE ISPARTIALSTOP() AND
      DISTFROMSTOP() <= 2 AND
      MOLINFO_FOR_SEQFEAT("biomol") = "mRNA"
DO
    ExtendFeatToSeqStop();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_002 "Extend 5' end of feature to end of sequence for CDS features only objects that are 5' partial with 5' end no more than 2 from end of sequence and where sequence type is mRNA [cDNA]"
FOR EACH Cdregion
WHERE ISPARTIALSTART() AND
      DISTFROMSTART() <= 2 AND
      MOLINFO_FOR_SEQFEAT("biomol") = "mRNA"
DO
    ExtendFeatToSeqStart();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_003 "Extend 3' end of feature to end of sequence for CDS features only objects that are 3' partial with 3' end no more than 2 from end of sequence and where source lineage contains 'Bacteria' (case-sensitive)"
VAR
    case_sensitive = true
FOR EACH Cdregion
WHERE ISPARTIALSTOP() AND
      DISTFROMSTOP() <= 2 AND
      CONTAINS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    ExtendFeatToSeqStop();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_004 "Extend 5' end of feature to end of sequence for CDS features only objects that are 5' partial with 5' end no more than 2 from end of sequence and where source lineage contains 'Bacteria' (case-sensitive)"
VAR
    case_sensitive = true
FOR EACH Cdregion
WHERE ISPARTIALSTART() AND
      DISTFROMSTART() <= 2 AND
      CONTAINS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    ExtendFeatToSeqStart();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_005 "Remove completeness complete where molecule is mRNA and where source lineage does not contain 'Viruses' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive) and where completeness is complete"
VAR
    match = "Viruses"
    case_sensitive = true
FOR EACH MolInfo
WHERE completeness = "complete" AND biomol = "mRNA"
      AND NOT CONTAINS(BIOSOURCE_FOR_MOLINFO("org.orgname.lineage"), match, case_sensitive)
      AND STARTS(BIOSOURCE_FOR_MOLINFO("org.db.db"), "taxon", case_sensitive)
DO
    RemoveQual("completeness");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_006 "Remove topology circular where molecule is mRNA and where source lineage does not contain 'Viruses' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive) and where topology is circular"
VAR
    case_sensitive = true
FOR EACH Seq
WHERE inst.topology = "circular" AND descr..molinfo.biomol = "mRNA" AND
   NOT CONTAINS(BIOSOURCE_FOR_SEQUENCE("org.orgname.lineage"), "Viruses", case_sensitive) AND
   STARTS(BIOSOURCE_FOR_SEQUENCE("org.db.db"), "taxon", case_sensitive)
DO
    RemoveQual("inst.topology");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_007 "Remove technique both where sequence type is protein and where technique is both"
FOR EACH MolInfo
WHERE biomol = "peptide" AND tech = "both"
DO
    RemoveQual("tech");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_008 "Synchronize coding region partials"
FOR EACH Cdregion
DO
    SynchronizeCDSPartials();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_009 "Adjust coding regions for consensus splice sites"
FOR EACH Cdregion
DO
    AdjustCDSConsensusSpliceSites();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_010 "Remove trailing * from complete coding regions"
FOR EACH Cdregion
DO
    TrimStopsFromCompleteCDS();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_011 "Remove CDS db-xref where CDS db-xref starts with 'taxon' (ignore spaces, ignore punctuation), , allow 'taxon' to be replaced by '?'"
VAR
    match = "taxon"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Cdregion
WHERE ISPRESENT("dbxref")
DO
    obj = Resolve("dbxref") WHERE STARTS("obj.db", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_012 "Remove misc_feature db-xref where misc_feature db-xref starts with 'taxon' (ignore spaces, ignore punctuation), allow 'taxon' to be replaced by '?'"
VAR
    match = "taxon"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE ISPRESENT("dbxref")
DO
    obj = Resolve("dbxref") WHERE STARTS("obj.db", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_013 "Remove rRNA db-xref where rRNA db-xref starts with 'taxon' (ignore spaces, ignore punctuation), allow 'taxon' to be replaced by '?'"
VAR
    match = "taxon"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE ISPRESENT("dbxref")
DO
    obj = Resolve("dbxref") WHERE STARTS("obj.db", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_014 "Remove gene db-xref where gene db-xref starts with 'taxon' (ignore spaces, ignore punctuation), allow 'taxon' to be replaced by '?'"
VAR
    match = "taxon"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE ISPRESENT("dbxref")
DO
    obj = Resolve("dbxref") WHERE STARTS("obj.db", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_015 "Remove misc_RNA db-xref where misc_RNA db-xref starts with 'taxon' (ignore spaces, ignore punctuation), allow 'taxon' to be replaced by '?'"
VAR
    match = "taxon"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE ISPRESENT("dbxref")
DO
    obj = Resolve("dbxref") WHERE STARTS("obj.db", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_016 "Remove repeat_region db-xref where repeat_region db-xref starts with 'taxon' (ignore spaces, ignore punctuation), allow 'taxon' to be replaced by '?'"
VAR
    match = "taxon"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region" AND ISPRESENT("dbxref")
DO
    obj = Resolve("dbxref") WHERE STARTS("obj.db", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_017 "Trim junk from primer (forward and reverse) sequences"
VAR
    qual_name_fwd = "pcr-primers..forward..seq"
    qual_name_rev = "pcr-primers..reverse..seq"
FOR EACH BioSource
DO
    TrimJunkFromPrimerSeq(qual_name_fwd);
    TrimJunkFromPrimerSeq(qual_name_rev);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_018 "Remove seg-gaps"
FOR EACH SeqAlign
DO
    RemoveSegGaps();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_019 "Apply Human immunodeficiency virus 1 to taxname (overwrite existing text) where source taxname equals 'Human immunodeficiency virus-1' (ignore spaces, ignore punctuation), allow 'Human immunodeficiency virus-1' to be replaced by 'Human Immunodeficiency Virus-1'"
VAR
    new_value = "Human immunodeficiency virus 1"
    existing_text = "eReplace"
    match = "Human immunodeficiency virus-1"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS("org.taxname", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match)
DO
    SetStringQual("org.taxname", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_020 "Edit taxname replace 'f.sp.' (case insensitive) with 'f. sp.'"
VAR
    qual_name = "org.taxname"
    find_text = "f.sp."
    repl_text = "f. sp."
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_021 "Edit taxname replace ' SP. ' with ' sp. '"
VAR
    qual_name = "org.taxname"
    find_text = " SP. "
    repl_text = " sp. "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_022 "Edit taxname replace 'subsp.' with 'subsp. ' where taxname does not contain 'subsp. '"
VAR
    qual_name = "org.taxname"
    find_text = "subsp."
    repl_text = "subsp. "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT CONTAINS(qual_name, repl_text)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_023 "Edit taxname replace 'ssp.' with 'ssp. ' where taxname does not contain 'ssp. '"
VAR
    qual_name = "org.taxname"
    find_text = "ssp."
    repl_text = "ssp. "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT CONTAINS(qual_name, repl_text)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_024 "Apply Homo sapiens to host (ignore new text when existing text is present) where source taxname starts with 'HIV' (case-sensitive)"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host" 
    new_value = "Homo sapiens"
    existing_text = "eLeaveOld"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.taxname", "HIV", case_sensitive)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier;
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_025 "Apply location proviral (overwrite existing text) where source lineage contains 'Retroviridae' (case-sensitive) and where molecule is genomic and where class is DNA"
VAR
    match = "Retroviridae"
    case_sensitive = true
FOR EACH BioSource
WHERE MOLINFO_FOR_BIOSOURCE("biomol") = "genomic"
      AND SEQUENCE_FOR_SEQDESC("inst.mol") = "dna"
      AND CONTAINS("org.orgname.lineage", match, case_sensitive)
DO
    SetQual ("genome", "proviral");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_026 "Apply Homo sapiens to host (ignore new text when existing text is present) where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host" 
    new_value = "Homo sapiens"
    existing_text = "eLeaveOld"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE STARTS("org.taxname", "Human immunodeficiency virus", case_sensitive, ignore_spaces, ignore_punct)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier;
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_027 "Apply Homo sapiens to host (ignore new text when existing text is present) where source isolation-source equals 'Homo sapiens' (ignore spaces, ignore punctuation), allow 'Homo sapiens' to be replaced by 'human', 'Homo sapien', 'Homosapiens', 'Homo spiens', 'Homo Sapience', 'homosapein', 'homosapien', 'homo_sapien', 'homo_sapiens', 'Homosipian', 'Human Being', 'Human Beings', 'humans', 'Homo sappiens', 'human sapiens', 'human biengs', and 'human bieng', allow 'sapiens' to be replaced by 'sapeins', 'sapein', 'sapens', 'sapins', 'sapin', 'sapen', 'spaeins', 'sapians', 'sapian', 'sapies', 'sapie', and 'sapien' and where source taxname does not equal 'Homo sapiens' (case-sensitive)"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host" 
    new_value = "Homo sapiens"
    existing_text = "eLeaveOld"
    case_sensitiveA = false
    ignore_spaces = true
    ignore_punct = true
    case_sensitiveB = true
FOR EACH BioSource
WHERE EQUALS("subtype", "isolation-source", new_value, case_sensitiveA, ignore_spaces, ignore_punct, "synonyms.txt", new_value) AND
      NOT EQUALS("org.taxname", new_value, case_sensitiveB)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier;
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_028 "Remove isolation-source where source isolation-source equals 'Homo sapiens' (ignore spaces, ignore punctuation), allow 'Homo sapiens' to be replaced by 'human', 'Homo sapien', 'Homosapiens', 'Homo-sapiens', 'Homo spiens', 'Homo Sapience', 'homosapein', 'homosapien', 'homo_sapien', 'homo_sapiens', 'Homosipian', 'Human Being', 'Human Beings', 'humans', 'Homo sappiens', 'human sapiens', 'human biengs', and 'human bieng', allow 'sapiens' to be replaced by 'sapeins', 'sapein', 'sapens', 'sapins', 'sapin', 'sapen', 'spaeins', 'sapians', 'sapian', 'sapies', 'sapie', and 'sapien' and where source host equals 'Homo sapiens' (case-sensitive)"
VAR
    match_text = "Homo sapiens"
    case_sensitiveA = true
    case_sensitiveB = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS("org.orgname.mod", "nat-host", match_text, case_sensitiveA)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                             AND EQUALS("obj.name", match_text, case_sensitiveB, ignore_spaces, ignore_punct, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_029 "Edit publication title replace ' ' with ''"
VAR
    find_text = " "
    repl_text = ""
    location = "at the beginning"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_030 "Fix pub affiliation where where title is all caps and where authors is all caps and where journal is all caps and where issue is all caps and where pages is all caps and where serial number is all caps and where citation is all caps and where affiliation is all caps and where department is all caps and where city is all caps and where state is all caps and where country is all caps and where street is all caps and where email is all caps and where fax is all caps and where phone is all caps and where postal code is all caps"
FOR EACH Pubdesc
DO
    title = PUB_TITLE();
    journal = PUB_JOURNAL();
    issue = PUB_ISSUE();
    pages = PUB_PAGES();
    serial_number = PUB_SERIAL_NUMBER();
    cit = PUB_CIT();
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    email = PUB_AFFIL("email");
    fax = PUB_AFFIL("fax");
    phone = PUB_AFFIL("phone");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(title) AND NOT ISUPPER(title)) OR
                                  (ISPRESENT(PUB_AUTHORS()) AND NOT ISUPPER(PUB_AUTHORS())) OR
                                  (ISPRESENT(journal) AND NOT ISUPPER(journal)) OR
                                  (ISPRESENT(issue) AND NOT ISUPPER(issue)) OR
                                  (ISPRESENT(pages) AND NOT ISUPPER(pages)) OR
                                  (ISPRESENT(serial_number) AND NOT ISUPPER(serial_number)) OR
                                  (ISPRESENT(cit) AND NOT ISUPPER(cit)) OR
                                  (ISPRESENT(affil) AND NOT ISUPPER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISUPPER(div)) OR
                                  (ISPRESENT(city) AND NOT ISUPPER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISUPPER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISUPPER(country)) OR
                                  (ISPRESENT(street) AND NOT ISUPPER(street)) OR
                                  (ISPRESENT(email) AND NOT ISUPPER(email)) OR
                                  (ISPRESENT(fax) AND NOT ISUPPER(fax)) OR
                                  (ISPRESENT(phone) AND NOT ISUPPER(phone)) OR
                                  (ISPRESENT(postalcode) AND NOT ISUPPER(postalcode))) AND
    (ISPRESENT(title) OR ISPRESENT(PUB_AUTHORS()) OR ISPRESENT(journal) OR ISPRESENT(issue) OR
    ISPRESENT(pages) OR ISPRESENT(serial_number) OR ISPRESENT(cit) OR ISPRESENT(affil) OR 
    ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR ISPRESENT(country) OR 
    ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_031 "Fix pub affiliation where where affiliation is all caps and where department is all caps and where city is all caps and where state is all caps and where country is all caps and where street is all caps and where postal code is all caps"
FOR EACH Pubdesc
DO
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(affil) AND NOT ISUPPER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISUPPER(div)) OR
                                  (ISPRESENT(city) AND NOT ISUPPER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISUPPER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISUPPER(country)) OR
                                  (ISPRESENT(street) AND NOT ISUPPER(street)) OR
                                  (ISPRESENT(postalcode) AND NOT ISUPPER(postalcode))) AND
    (ISPRESENT(affil) OR ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR
     ISPRESENT(country) OR ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_032 "Fix pub affiliation where where title is all lowercase and where authors is all lowercase and where journal is all lowercase and where issue is all lowercase and where pages is all lowercase and where serial number is all lowercase and where citation is all lowercase and where affiliation is all lowercase and where department is all lowercase and where city is all lowercase and where state is all lowercase and where country is all lowercase and where street is all lowercase and where email is all lowercase and where fax is all lowercase and where phone is all lowercase and where postal code is all lowercase"
FOR EACH Pubdesc
DO
    title = PUB_TITLE();
    journal = PUB_JOURNAL();
    issue = PUB_ISSUE();
    pages = PUB_PAGES();
    serial_number = PUB_SERIAL_NUMBER();
    cit = PUB_CIT();
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    email = PUB_AFFIL("email");
    fax = PUB_AFFIL("fax");
    phone = PUB_AFFIL("phone");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(title) AND NOT ISLOWER(title)) OR
                                  (ISPRESENT(PUB_AUTHORS()) AND NOT ISLOWER(PUB_AUTHORS())) OR
                                  (ISPRESENT(journal) AND NOT ISLOWER(journal)) OR
                                  (ISPRESENT(issue) AND NOT ISLOWER(issue)) OR
                                  (ISPRESENT(pages) AND NOT ISLOWER(pages)) OR
                                  (ISPRESENT(serial_number) AND NOT ISLOWER(serial_number)) OR
                                  (ISPRESENT(cit) AND NOT ISLOWER(cit)) OR
                                  (ISPRESENT(affil) AND NOT ISLOWER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISLOWER(div)) OR
                                  (ISPRESENT(city) AND NOT ISLOWER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISLOWER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISLOWER(country)) OR
                                  (ISPRESENT(street) AND NOT ISLOWER(street)) OR
                                  (ISPRESENT(email) AND NOT ISLOWER(email)) OR
                                  (ISPRESENT(fax) AND NOT ISLOWER(fax)) OR
                                  (ISPRESENT(phone) AND NOT ISLOWER(phone)) OR
                                  (ISPRESENT(postalcode) AND NOT ISLOWER(postalcode))) AND
    (ISPRESENT(title) OR ISPRESENT(PUB_AUTHORS()) OR ISPRESENT(journal) OR ISPRESENT(issue) OR
    ISPRESENT(pages) OR ISPRESENT(serial_number) OR ISPRESENT(cit) OR ISPRESENT(affil) OR 
    ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR ISPRESENT(country) OR 
    ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_033 "Fix pub affiliation where where affiliation is all lowercase and where department is all lowercase and where city is all lowercase and where state is all lowercase and where country is all lowercase and where street is all lowercase and where phone is all lowercase and where postal code is all lowercase"
FOR EACH Pubdesc
DO
    affil = PUB_AFFIL("affil");
    div = PUB_AFFIL("div");
    city = PUB_AFFIL("city");
    sub = PUB_AFFIL("sub");
    country = PUB_AFFIL("country");
    street = PUB_AFFIL("street");
    postalcode = PUB_AFFIL("postal-code");
    obj = PUB_AFFIL() WHERE NOT ((ISPRESENT(affil) AND NOT ISLOWER(affil)) OR
                                  (ISPRESENT(div) AND NOT ISLOWER(div)) OR
                                  (ISPRESENT(city) AND NOT ISLOWER(city)) OR
                                  (ISPRESENT(sub) AND NOT ISLOWER(sub)) OR
                                  (ISPRESENT(country) AND NOT ISLOWER(country)) OR
                                  (ISPRESENT(street) AND NOT ISLOWER(street)) OR
                                  (ISPRESENT(postalcode) AND NOT ISLOWER(postalcode))) AND
    (ISPRESENT(affil) OR ISPRESENT(div) OR ISPRESENT(city) OR ISPRESENT(sub) OR 
    ISPRESENT(country) OR ISPRESENT(street) OR ISPRESENT(postalcode));
    FixPubCapsAffiliation(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_034 "Fix pub title where where title is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_TITLE() WHERE ISUPPER(obj);
    FixPubCapsTitle(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_035 "Fix pub title where where title is all lowercase"
FOR EACH Pubdesc
DO
    obj = PUB_TITLE() WHERE ISLOWER(obj);
    FixPubCapsTitle(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_036 "Fix pub authors where where authors is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS() WHERE ISUPPER(PUB_AUTHORS());
    FixPubCapsAuthors(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_037 "Fix pub authors where where authors is all lowercase"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS() WHERE ISLOWER(PUB_AUTHORS());
    FixPubCapsAuthors(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_038 "Fix capitalization in author name where name is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS() WHERE ISUPPER(obj);
    FixPubCapsAuthors(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_039 "Fix capitalization in author last names where last name is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_AUTHORS("last") WHERE ISUPPER(obj);
    FixCapsAuthorLastName(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_040 "Fix pub affiliation country"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL();
    FixPubCapsAffilCountry(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_041 "Fix pub affiliation (punctuation only)"
Var
    punct_only = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL();
    FixPubCapsAffiliation(obj, punct_only);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_042 "Remove publication state where state is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("sub") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_043 "Remove publication state where state contains 'Select A State' (ignore spaces, ignore punctuation), allow 'Select A State' to be replaced by 'none', 'N/A', 'Not Applicable', 'NotApplicable', 'Select State/Province', '--- Select One ---', 'N/A = Not Applicable', 'not USA', 'not USA/Canada', 'outside of USA', 'Select if applicable', '(Outside USA)', 'outside USA', 'outside US', 'outside the US', 'Neither U.S. nor Canada', 'Choose a state', '---Select A Canadian Province---', 'Non-US/Non-Canadian', 'Please select region, state or province', 'Select one', 'Please select...', 'Select State/Province', '-- Please Select --', 'Outside US/Canada/Australia', 'Select State', 'Please choose from the following:', 'Non-US/Canada', 'OTHER', and 'Please choose from the following :'"
VAR
    match = "Select A State"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("sub") WHERE CONTAINS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_044 "Remove publication postal code where postal code is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("postal-code") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_045 "Remove publication postal code where postal code equals 'N/A' (ignore spaces, ignore punctuation), allow 'N/A' to be replaced by 'none', 'N.A.', and 'Not Applicable'"
VAR
    match = "N/A"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("postal-code") WHERE EQUALS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_046 "Remove publication affiliation where affiliation is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("affil") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_047 "Remove publication affiliation where affiliation equals 'N/A', allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("affil") WHERE EQUALS(obj, match, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_048 "Remove publication department where department is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("div") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_049 "Remove publication department where department equals 'N/A', allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("div") WHERE EQUALS(obj, match, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_050 "Remove publication street where street is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("street") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_051 "Remove publication street where street equals 'N/A' (ignore spaces, ignore punctuation), allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("street") WHERE EQUALS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_052 "Remove publication city where city is all punctuation"
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("city") WHERE ISPUNCTUATION(obj);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_053 "Remove publication city where city equals 'N/A' (ignore spaces, ignore punctuation), allow 'N/A' to be replaced by 'none', 'Not Applicable', and 'NotApplicable'"
VAR
    match = "N/A"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("city") WHERE EQUALS(obj, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_054 "Edit publication country replace 'Korea, Republic of' with 'Republic of Korea'"
VAR
    find_text = "Korea, Republic of"
    repl_text = "Republic of Korea"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("country");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_055 "Edit publication country replace 'Moldova, Republic of' with 'Republic of Moldova'"
VAR
    find_text = "Moldova, Republic of"
    repl_text = "Republic of Moldova"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("country");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_056 "Edit publication country replace 'Tanzania, Republic of' with 'Republic of Tanzania'"
VAR
    find_text = "Tanzania, Republic of"
    repl_text = "Republic of Tanzania"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("country");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_057 "Edit publication affiliation replace 'Sience' with 'Science'"
VAR
    find_text = "Sience"
    repl_text = "Science"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("affil");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_058 "Edit publication department replace 'Sience' with 'Science'"
VAR
    find_text = "Sience"
    repl_text = "Science"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("div");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_059 "Edit publication street replace 'Sience' with 'Science'"
VAR
    find_text = "Sience"
    repl_text = "Science"
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_AFFIL("street");
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_060 "Fix pub title where where title is all caps"
FOR EACH Pubdesc
DO
    obj = PUB_TITLE() WHERE ISUPPER(obj);
    FixPubCapsTitle(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_061 "Edit publication title replace ' sp' with ' sp..'"
VAR
    find_text = " sp"
    repl_text = " sp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_062 "Edit publication title replace ' sp.' with ' sp..'"
VAR
    find_text = " sp."
    repl_text = " sp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_063 "Edit publication title replace ' spp' with ' spp..'"
VAR
    find_text = " spp"
    repl_text = " spp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_064 "Edit publication title replace ' spp.' with ' spp..'"
VAR
    find_text = " spp."
    repl_text = " spp.."
    location = "at the end"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_065 "Edit publication title replace '#' with ' '"
VAR
    find_text = "#"
    repl_text = " "
    location = "anywhere"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_066 "Edit publication title replace ' ' with ''"
VAR
    find_text = " "
    repl_text = ""
    location = "at the beginning"
    case_sensitive = true
FOR EACH Pubdesc
DO
    obj = PUB_TITLE();
    EditStringQual(obj, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_067 "Remove Publication descriptors where pub is unpublished and title is all punctuation"
FOR EACH Pubdesc
WHERE PUB_CLASS() = "unpublished" AND ISPUNCTUATION(PUB_TITLE())
Do
    RemoveDescriptor();
Done
------------------------------------------------------------------------------
MACRO AutofixGB_068 "Remove Publication descriptors where pub is unpublished and title equals 'none' (ignore spaces, ignore punctuation), allow 'none' to be replaced by 'N/A', 'to be determined', 'not submitted', 'nothing', 'unpublished', 'direct submission', 'direct submit', 'submit', 'in preparation', 'manuscript in preparation', 'N.A.', 'null', 'directed submission', 'unpublished data', 'No', 'title', 'no title', 'GenBank', 'NCBI', 'in prep', 'in preparation for publication', 'NotApplicable', 'Not Applicable', 'under submission', 'under review', 'Direct Submission', 'Direct Submitted', 'dirct submission', 'yet to be published', 'not published', 'no titled', 'no title yet', 'Direct submision', 'submitted directly', 'submited direct', 'direct submited', 'unpublished manuscript', 'sequence submission', 'directed-submission', 'Unpublish', 'unpublication', 'untitled - to update', 'Unpublished sequence', 'Direct submission', 'Unpublished yet', 'Directly submit', 'Unpubilished', 'title for manuscript', 'no reference', 'direction submission', 'direction submittion', 'unpublication', 'Direct submisson', 'non', 'unknown', 'No title yet', 'No title given', 'unpulished', and 'submit directly'"
VAR
    match = "none"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Pubdesc
WHERE PUB_CLASS() = "unpublished" AND 
      EQUALS(PUB_TITLE(), match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
Do
    RemoveDescriptor();
Done
------------------------------------------------------------------------------
MACRO AutofixGB_069 "Remove Publication descriptors where pub is unpublished and title is not present"
FOR EACH Pubdesc
WHERE PUB_CLASS() = "unpublished" AND NOT ISPRESENT(PUB_TITLE())
Do
    RemoveDescriptor();
Done
------------------------------------------------------------------------------
MACRO AutofixGB_070 "Apply Homo sapiens to host (overwrite existing text) where source host equals 'homo sapiens' (ignore spaces, ignore punctuation), allow 'homo sapiens' to be replaced by 'Homo sapien', 'Homosapiens', 'homosepeans', 'Homo-sapiens', 'Homo spiens', 'Homo Sapience', 'homosapein', 'homosapien', 'homo_sapien', 'homo_sapiens', 'Homosipian', 'Human Being', 'Human Beings', 'humans', 'Homo sappiens', 'human sapiens', 'human biengs', and 'human bieng', allow 'sapiens' to be replaced by 'sapeins', 'sapein', 'sapens', 'sapins', 'sapin', 'sapen', 'spaeins', 'sapians', 'sapian', 'sapies', 'sapie', and 'sapien'"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host" 
    new_value = "Homo sapiens"
    match = "homo sapiens"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS(qual_name, modifier, match, case_sensitive, ignore_spaces, ignore_punct, "synonyms.txt", match)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier
       AND EQUALS("obj.subname", match, case_sensitive, ignore_spaces, ignore_punct, "synonyms.txt", match);
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_071 "Apply Homo sapiens to taxname (overwrite existing text) where source taxname equals 'homo sapiens' (ignore spaces, ignore punctuation), allow 'homo sapiens' to be replaced by 'human', 'Homo sapien', 'Homosapiens', 'Homo-sapiens', 'Homo spiens', 'Homo Sapience', 'homosapein', 'homosapien', 'homo_sapien', 'homo_sapiens', 'Homosipian', 'Human Being', 'Human Beings', 'humans', 'Homo sappiens', 'human sapiens', 'human biengs', and 'human bieng', allow 'sapiens' to be replaced by 'sapein', 'sapens', 'sapins', 'sapin', 'sapen', 'spaeins', 'sapians', 'sapian', 'sapies', 'sapie', and 'sapien'"
VAR
    new_value = "Homo sapiens"
    existing_text = "eReplace"
    match = "homo sapiens"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS("org.taxname", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match)
DO
    SetStringQual("org.taxname", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_072 "Apply location mitochondrion (overwrite existing text) where d_loop note equals 'control region' (ignore spaces, ignore punctuation) and where object text does not equal 'mitochondrion' (case-sensitive)"
VAR
    match = "control region"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(FEATURES("d-loop", "comment"), match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetQual("genome", "mitochondrion");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_073 "Apply location mitochondrion (overwrite existing text) where misc_feature note equals 'control region' (ignore spaces) and where object text does not equal 'mitochondrion' (case-sensitive)"
VAR
    match = "control region"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(FEATURES("misc_feature", "comment"), match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetQual("genome", "mitochondrion");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_074 "Apply location mitochondrion (overwrite existing text) where sequence type is nucleotide and d_loop is present and sequence has exactly 1 feature and where object text does not equal 'mitochondrion' (case-sensitive)"
FOR EACH BioSource
WHERE SEQUENCE_FOR_SEQDESC("inst.mol") IN ("dna" ,"rna", "na") AND
      FEATS_ON_SEQ("d-loop") = 1 AND FEATS_ON_SEQ("all") = 1
DO
    SetQual("genome", "mitochondrion");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_075 "Edit isolation-source replace 'faeces' (case insensitive) with 'feces'"
VAR
    find_text = "faeces"
    repl_text = "feces"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "isolation-source";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_076 "Edit isolation-source replace 'faecal' (case insensitive) with 'fecal'"
VAR
    find_text = "faecal"
    repl_text = "fecal"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "isolation-source";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_077 "Edit isolation-source replace 'Faecal sample' (case insensitive) with 'fecal sample'"
VAR
    find_text = "Faecal sample"
    repl_text = "fecal sample"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "isolation-source";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_078 "Edit country replace '`' with '''"
VAR
    find_text = "`"
    repl_text = "'"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_079 "Edit country replace ' :' with ': '"
VAR
    find_text = " :"
    repl_text = ": "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_080 "Apply Virgin Islands to country (overwrite existing text) where source country equals 'US Virgin Islands' (ignore spaces, ignore punctuation), allow 'US Virgin Islands' to be replaced by 'U.S. Virgin Islands' and 'United States Virgin Islands'"
VAR
    qual_name = "subtype"
    modifier = "country" 
    new_value = "Virgin Islands"
    existing_text = "eReplace"
    match_text = "US Virgin Islands"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS("subtype", "country", match_text, case_sensitive, ignore_spaces, ignore_punct,"synonyms.txt", match_text)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier 
       AND EQUALS("obj.name", match_text, case_sensitive, ignore_spaces, ignore_punct,"synonyms.txt", match_text);
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_081 "Edit country replace 'Bosnia-Herzegovina' (case insensitive) with 'Bosnia and Herzegovina'"
VAR
    find_text = "Bosnia-Herzegovina"
    repl_text = "Bosnia and Herzegovina"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_082 "Edit country replace 'French Guyana' (case insensitive) with 'French Guiana'"
VAR
    find_text = "French Guyana"
    repl_text = "French Guiana"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_083 "Edit country replace 'Cote d' Ivoire' (case insensitive) with 'Cote d'Ivoire'"
VAR
    find_text = "Cote d' Ivoire"
    repl_text = "Cote d'Ivoire"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_084 "Edit country replace 'Coted'Ivoire' (case insensitive) with 'Cote d'Ivoire'"
VAR
    find_text = "Coted'Ivoire"
    repl_text = "Cote d'Ivoire"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_085 "Edit country replace 'Cote d Ivoire' (case insensitive) with 'Cote d'Ivoire'"
VAR
    find_text = "Cote d Ivoire"
    repl_text = "Cote d'Ivoire"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_086 "Edit country replace 'Guinea Bissau' (case insensitive) with 'Guinea-Bissau'"
VAR
    find_text = "Guinea Bissau"
    repl_text = "Guinea-Bissau"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_087 "Edit country replace 'Guinea_Bissau' (case insensitive) with 'Guinea-Bissau'"
VAR
    find_text = "Guinea_Bissau"
    repl_text = "Guinea-Bissau"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_088 "Edit country replace 'GuineaBissau' (case insensitive) with 'Guinea-Bissau'"
VAR
    find_text = "GuineaBissau"
    repl_text = "Guinea-Bissau"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_089 "Edit country replace 'P. R. China' (case insensitive) with 'China' where source country equals 'P. R. China' (ignore spaces, ignore punctuation)"
VAR
    find_text = "P. R. China"
    repl_text = "China"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_090 "Edit country replace 'PR China' (case insensitive) with 'China' where source country equals 'PR China' (ignore spaces)"
VAR
    find_text = "PR China"
    repl_text = "China"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive, ignore_spaces);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_091 "Edit country replace 'Scotland' (case insensitive) with 'United Kingdom: Scotland' where source country equals 'Scotland' (ignore punctuation)"
VAR
    find_text = "Scotland"
    repl_text = "United Kingdom: Scotland"
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = false
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_092 "Edit country replace 'Wales' (case insensitive) with 'United Kingdom: Wales' where source country equals 'Wales' (ignore punctuation)"
VAR
    find_text = "Wales"
    repl_text = "United Kingdom: Wales"
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = false
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_093 "Edit country replace 'Democratic People's Republic of Korea' (case insensitive) with 'North Korea' where source country equals 'Democratic People's Republic of Korea' (ignore spaces, ignore punctuation)"
VAR
    find_text = "Democratic People's Republic of Korea"
    repl_text = "North Korea"
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_094 "Edit country replace 'Republic of Korea' (case insensitive) with 'South Korea' where source country equals 'Republic of Korea' (ignore spaces, ignore punctuation)"
VAR
    find_text = "Republic of Korea"
    repl_text = "South Korea"
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_095 "Edit country replace 'Russian Federation' (case insensitive) with 'Russia' where source country equals 'Russian Federation' (ignore spaces, ignore punctuation)"
VAR
    find_text = "Russian Federation"
    repl_text = "Russia"
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "country" AND EQUALS("o.name", find_text, case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_096 "Apply Democratic Republic of the Congo to country (overwrite existing text) where source country equals 'DR Congo' (ignore spaces, ignore punctuation), allow 'DR Congo' to be replaced by 'Congo', 'D.R. Congo', 'DRCongo', 'D.R.Congo', 'Democratic Republic of Congo', 'Democratic Republic Congo', and 'Congo Democratic Republic'"
VAR
    qual_name = "subtype"
    modifier = "country" 
    new_value = "Democratic Republic of the Congo"
    existing_text = "eReplace"
    match = "DR Congo"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
WHERE EQUALS(qual_name, modifier, match, case_sensitive, ignore_spaces, ignore_punct,"synonyms.txt", match)
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier
       AND EQUALS("obj.name", match, case_sensitive, ignore_spaces, ignore_punct,"synonyms.txt", match);
    SetModifier(obj, qual_name, modifier, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_097 "Fix source country qualifier capitalization"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "country";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_098 "Fix capitalization in sex source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "sex";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_099 "Fix capitalization in host source qualifier"
For each BioSource
Do
    o = Resolve("org.orgname.mod") Where o.subtype = "nat-host";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_100 "Fix capitalization in isolation-source source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "isolation-source";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_101 "Fix capitalization in dev-stage source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "dev-stage";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_102 "Fix capitalization in tissue-type source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "tissue-type";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_103 "Fix capitalization in lab-host source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "lab-host";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_104 "Fix capitalization in cell-type source qualifier"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "cell-type";
    FixSourceQualCaps(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_105 "Convert any standard-name to any note (append separated by semicolon)"
VAR
    cap_change = "none"
    strip_name = false
    existing_text = "eAppend"
    delimiter = ";"
FOR EACH SeqFeat
WHERE ISPRESENT("qual", "standard_name")
DO
    obj = Resolve("qual") where obj.qual = "standard_name";
    ConvertStringQual("obj.val", "comment", cap_change, strip_name, existing_text, delimiter);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_106 "Fix collection-date format"
For each BioSource
Do
    o = Resolve("subtype") Where o.subtype = "collection-date";
    FixFormat(o);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_107 "Edit segment replace 'segment-' (case insensitive) with ''"
VAR
    find_text = "segment-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_108 "Edit segment replace 'segment_' (case insensitive) with ''"
VAR
    find_text = "segment_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_109 "Edit segment replace 'segment:' (case insensitive) with ''"
VAR
    find_text = "segment:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_110 "Edit segment replace 'segment' (case insensitive) with ''"
VAR
    find_text = "segment"
    repl_text = ""
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "segment";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_111 "Edit strain replace 'strain-' (case insensitive) with ''"
VAR
    find_text = "strain-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_112 "Edit strain replace 'strain_' (case insensitive) with ''"
VAR
    find_text = "strain_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_113 "Edit strain replace 'strain:' (case insensitive) with ''"
VAR
    find_text = "strain:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_114 "Edit strain replace 'strain' (case insensitive) with '' where source strain does not contain 'strains' (ignore spaces, ignore punctuation)"
VAR
    find_text = "strain"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain"
                    AND NOT CONTAINS("o.subname", "strains", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_115 "Edit strain replace ' strain' (case insensitive) with '' where source strain does not contain 'strains' (ignore spaces, ignore punctuation)"
VAR
    find_text = " strain"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" 
                 AND NOT CONTAINS("o.subname", "strains", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_116 "Edit clone replace 'clone-' (case insensitive) with ''"
VAR
    find_text = "clone-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_117 "Edit clone replace 'clone_' (case insensitive) with ''"
VAR
    find_text = "clone_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_118 "Edit clone replace 'clone:' (case insensitive) with ''"
VAR
    find_text = "clone:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_119 "Edit clone replace 'clone' (case insensitive) with ''"
VAR
    find_text = "clone"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_120 "Edit clone replace 'clone' (case insensitive) with ''"
VAR
    find_text = "clone"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "clone";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_121 "Edit isolate replace 'isolate-' (case insensitive) with ''"
VAR
    find_text = "isolate-"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_122 "Edit isolate replace 'isolate_' (case insensitive) with ''"
VAR
    find_text = "isolate_"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_123 "Edit isolate replace 'isolate:' (case insensitive) with ''"
VAR
    find_text = "isolate:"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_124 "Edit isolate replace 'isolate' (case insensitive) with '' where source isolate does not contain 'isolated' (ignore spaces, ignore punctuation)"
VAR
    find_text = "isolate"
    repl_text = ""
    location = "at the beginning"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND
                                   NOT CONTAINS("o.subname", "isolated", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_125 "Edit isolate replace 'isolate' (case insensitive) with '' where source isolate does not contain 'isolated' (ignore spaces, ignore punctuation)"
VAR
    find_text = "isolate"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND
                                   NOT CONTAINS("o.subname", "isolated", case_sensitive, ignore_spaces, ignore_punct);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_126 "Remove location nucleomorph where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "nucleomorph" AND 
      STARTS("org.db.db", "taxon", case_sensitive) AND
      ISPRESENT("org.orgname.div") AND
      ISPRESENT(match_field) AND
      NOT CONTAINS(match_field, match_text1, case_sensitive) AND
      NOT CONTAINS(match_field, match_text2, case_sensitive)
Do
    RemoveQual("genome");
Done
------------------------------------------------------------------------------
MACRO AutofixGB_127 "Remove note-orgmod where source note-orgmod equals 'Organelle: nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "Organelle: nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_128 "Remove note-orgmod where source note-orgmod equals 'nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_129 "Remove note-subsrc where source note-subsrc equals 'Organelle: nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "Organelle: nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_130 "Remove note-subsrc where source note-subsrc equals 'nucleomorph' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Chlorarachniophyceae' (case-sensitive) and where source lineage does not contain 'Cryptophyta' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text1 = "Chlorarachniophyceae"
    match_text2 = "Cryptophyta"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text1, case_sensitive) AND
              NOT CONTAINS(match_field, match_text2, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "nucleomorph";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_131 "Remove location macronuclear where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "macronuclear" AND 
      STARTS("org.db.db", "taxon", case_sensitive) AND
      ISPRESENT("org.orgname.div") AND
      ISPRESENT(match_field) AND
      NOT CONTAINS(match_field, match_text, case_sensitive)
Do
    RemoveQual("genome");
Done
------------------------------------------------------------------------------
MACRO AutofixGB_132 "Remove note-orgmod where source note-orgmod equals 'Organelle: macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "Organelle: macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_133 "Remove note-orgmod where source note-orgmod equals 'macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "other" AND obj.subname = "macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_134 "Remove note-subsrc where source note-subsrc equals 'Organelle: macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "Organelle: macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_135 "Remove note-subsrc where source note-subsrc equals 'macronuclear' and where source dbxref starts with 'taxon:' (case-sensitive) and where source division is present and where source lineage is present and where source lineage does not contain 'Ciliophora' (case-sensitive)"
VAR
    match_field = "org.orgname.lineage"
    match_text = "Ciliophora"
    case_sensitive = true
FOR EACH BioSource
WHERE STARTS("org.db.db", "taxon", case_sensitive) AND
              ISPRESENT("org.orgname.div") AND
              ISPRESENT(match_field) AND
              NOT CONTAINS(match_field, match_text, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "other" AND obj.name = "macronuclear";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_136 "Fix spelling"
FOR EACH TSEntry
DO
    FixSpelling();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_137 "Fix lat-lon format"
FOR EACH BioSource
DO
    obj = Resolve("subtype") Where obj.subtype = "lat-lon";
    FixFormat(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_138 "Remove All where object text all characters are punctuation"
FOR EACH BioSource
DO
   objs = ResolveBsrcQuals() WHERE ISPUNCTUATION(objs);
   RemoveQual(objs);
   sub = Resolve("subtype") WHERE ISPUNCTUATION("sub.name");
   RemoveModifier(sub);
   orgmod = Resolve("org.orgname.mod") WHERE ISPUNCTUATION("orgmod.subname");
   RemoveModifier(orgmod);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_139 "Apply tandem to repeat_region rpt-type (append separated by semicolon) where repeat_region satellite-type equals 'microsatellite' (case-sensitive) and where repeat_region rpt-type does not contain 'tandem' (case-sensitive)"
VAR
    new_value = "tandem"
    existing_text = "eAppend"
    delimiter = ";"
    case_sensitive = true
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region" AND
    STARTS("qual", "satellite", "microsatellite", case_sensitive) AND
    NOT CONTAINS("qual", "rpt_type", new_value, case_sensitive)
DO   
    obj = Resolve("qual") WHERE obj.qual = "rpt_type";
    SetGBQualifier(obj, "qual", "rpt_type", new_value, existing_text, delimiter);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_140 "Apply tandem to repeat_region rpt-type (append separated by semicolon) where repeat_region satellite-type equals 'minisatellite' (case-sensitive) and where repeat_region rpt-type does not contain 'tandem' (case-sensitive)"
VAR
    new_value = "tandem"
    existing_text = "eAppend"
    delimiter = ";"
    case_sensitive = true
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region" AND
    STARTS("qual", "satellite", "minisatellite", case_sensitive) AND
    NOT CONTAINS("qual", "rpt_type", new_value, case_sensitive)
DO   
    obj = Resolve("qual") WHERE obj.qual = "rpt_type";
    SetGBQualifier(obj, "qual", "rpt_type", new_value, existing_text, delimiter);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_141 "Apply tandem to repeat_region rpt-type (append separated by semicolon) where repeat_region satellite-type equals 'satellite' (case-sensitive) and where repeat_region rpt-type does not contain 'tandem' (case-sensitive)"
VAR
    new_value = "tandem"
    existing_text = "eAppend"
    delimiter = ";"
    case_sensitive = true
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region" AND
    STARTS("qual", "satellite", "satellite", case_sensitive) AND
    NOT CONTAINS("qual", "rpt_type", new_value, case_sensitive)
DO   
    obj = Resolve("qual") WHERE obj.qual = "rpt_type";
    SetGBQualifier(obj, "qual", "rpt_type", new_value, existing_text, delimiter);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_142 "Remove repeat_region satellite-name where repeat_region satellite-name equals 'SSR' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region"
DO
    obj = Resolve("qual") WHERE obj.qual = "satellite" AND EQUALS(SATELLITE_NAME(), "SSR", case_sensitive, ignore_spaces, ignore_punctuation);
    RemoveSubField(obj, "satellite-name");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_143 "Remove repeat_region satellite-name where repeat_region satellite-name equals 'microsatellite' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region"
DO
    obj = Resolve("qual") WHERE obj.qual = "satellite" AND EQUALS(SATELLITE_NAME(), "microsatellite", case_sensitive, ignore_spaces, ignore_punctuation);
    RemoveSubField(obj, "satellite-name");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_144 "Edit CDS note replace '[intronless gene]' with '' where source lineage starts with 'Bacteria' (case-sensitive)"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Bacteria", case_sensitive)
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_145 "Edit CDS note replace '[intronless gene]' with '' where source lineage starts with 'Viruses' (case-sensitive)"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Viruses", case_sensitive)
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_146 "Edit CDS note replace '[intronless gene]' with '' where source lineage starts with 'Archaea' (case-sensitive)"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.orgname.lineage"), "Archaea", case_sensitive)
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_147 "Edit CDS note replace '[intronless gene]' with '' where sequence type is mRNA [cDNA]"
VAR
    find_text = "[intronless gene]"
    repl_text = ""
    location = "anywhere"
    case_sensitive = true
FOR EACH Cdregion
WHERE MOLINFO_FOR_SEQFEAT("biomol") = "mRNA"
DO
    EditStringQual("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_148 "Remove germline where source division is present and where source lineage does not contain 'Craniata' (case-sensitive)"
VAR
    match_text = "Craniata"
    case_sensitive = true
FOR EACH BioSource
WHERE ISPRESENT("org.orgname.div") AND NOT CONTAINS("org.orgname.lineage", match_text, case_sensitive)
DO
    obj = Resolve("subtype") WHERE obj.subtype = "germline";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_149 "Remove metagenomic"
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "metagenomic";
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_150 "Remove 5'UTR note where 5'UTR note equals '5'UTR' (ignore spaces, ignore punctuation), allow '5'UTR' to be replaced by '5' UTR', 'UTR', '5`UTR', and '5` UTR'"
VAR
    field_name = "comment"
    match_text = "5'UTR"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "5'UTR" AND
    EQUALS(field_name, match_text, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_text)
DO   
    RemoveQual(field_name);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_151 "Remove 3'UTR note where 3'UTR note equals '3' UTR' (ignore spaces, ignore punctuation), allow '3' UTR' to be replaced by '3'UTR', 'UTR', '3` UTR', and '3`UTR'"
VAR
    field_name = "comment"
    match_text = "3'UTR"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "3'UTR" AND
    EQUALS(field_name, match_text, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_text)
DO   
    RemoveQual(field_name);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_152 "Edit strain replace 'ATCC:' with 'ATCC '"
VAR
    find_text = "ATCC:"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_153 "Edit cell-line replace 'ATCC:' with 'ATCC '"
VAR
    find_text = "ATCC:"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "cell-line";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_154 "Edit tissue-type replace 'ATCC:' with 'ATCC '"
VAR
    find_text = "ATCC:"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "tissue-type";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_155 "Edit strain replace 'CBS:' with 'CBS '"
VAR
    find_text = "CBS:"
    repl_text = "CBS "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_156 "Edit strain replace 'DSMZ:' with 'DSMZ '"
VAR
    find_text = "DSMZ:"
    repl_text = "DSMZ "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_157 "Edit strain replace 'DSM:' with 'DSM '"
VAR
    find_text = "DSM:"
    repl_text = "DSM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_158 "Edit strain replace 'JCM:' with 'JCM '"
VAR
    find_text = "JCM:"
    repl_text = "JCM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_159 "Edit strain replace 'NBRC:' with 'NBRC '"
VAR
    find_text = "NBRC:"
    repl_text = "NBRC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_160 "Edit strain replace 'LMG:' with 'LMG '"
VAR
    find_text = "LMG:"
    repl_text = "LMG "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_161 "Edit strain replace 'CCUG:' with 'CCUG '"
VAR
    find_text = "CCUG:"
    repl_text = "CCUG "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_162 "Edit strain replace 'KCTC:' with 'KCTC '"
VAR
    find_text = "KCTC:"
    repl_text = "KCTC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_163 "Edit strain replace 'DSM' with 'DSMZ ' where source taxid is present and where source lineage contains 'Viruses' (case-sensitive) and where source strain does not equal 'DSM' and where source strain does not contain 'DSMZ'"
VAR
    find_text = "DSM"
    repl_text = "DSMZ "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
WHERE EQUALS("org.db.db", "taxon") AND CONTAINS("org.orgname.lineage", "Viruses", case_sensitive)
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", "DSMZ") AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_164 "Edit strain replace 'DSMZ' with 'DSM ' where source taxid is present and where source lineage does not contain 'Viruses' (case-sensitive) and where source strain does not equal 'DSMZ'"
VAR
    find_text = "DSMZ"
    repl_text = "DSM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
WHERE EQUALS("org.db.db", "taxon") AND NOT CONTAINS("org.orgname.lineage", "Viruses", case_sensitive)
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_165 "Edit culture-collection replace 'DSM' with 'DSMZ ' where source taxid is present and where source lineage contains 'Viruses' (case-sensitive) and where source culture-collection does not equal 'DSM' and where source culture-collection does not contain 'DSMZ'"
VAR
    find_text = "DSM"
    repl_text = "DSMZ "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
WHERE EQUALS("org.db.db", "taxon") AND CONTAINS("org.orgname.lineage", "Viruses", case_sensitive)
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "culture-collection" AND
                                   NOT CONTAINS("o.subname", "DSMZ") AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_166 "Edit culture-collection replace 'DSMZ' with 'DSM ' where source taxid is present and where source lineage does not contain 'Viruses' (case-sensitive) and where source culture-collection does not equal 'DSMZ'"
VAR
    find_text = "DSMZ"
    repl_text = "DSM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
WHERE EQUALS("org.db.db", "taxon") AND NOT CONTAINS("org.orgname.lineage", "Viruses", case_sensitive)
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "culture-collection" AND NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_167 "Edit strain replace 'DSMZ' with 'DSMZ ' where source strain does not contain 'DSMZ ' (case-sensitive) and where source strain does not equal 'DSMZ'"
VAR
    find_text = "DSMZ"
    repl_text = "DSMZ "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_168 "Edit strain replace 'DSM' with 'DSM ' where source strain does not contain 'DSM ' (case-sensitive) and where source strain does not equal 'DSM' and where source strain does not contain 'DSMZ' (case-sensitive)"
VAR
    find_text = "DSM"
    repl_text = "DSM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text) AND
                                   NOT CONTAINS("o.subname", "DSMZ", case_sensitive);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_169 "Edit strain replace 'ATCC' with 'ATCC ' where source strain does not contain 'ATCC ' (case-sensitive) and where source strain does not equal 'ATCC'"
VAR
    find_text = "ATCC"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_170 "Edit cell-line replace 'ATCC' with 'ATCC ' where source cell-line does not contain 'ATCC ' (case-sensitive) and where source cell-line does not equal 'ATCC'"
VAR
    find_text = "ATCC"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "cell-line" AND
                                   NOT CONTAINS("o.name", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.name", find_text);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_171 "Edit tissue-type replace 'ATCC' with 'ATCC ' where source tissue-type does not contain 'ATCC ' (case-sensitive) and where source tissue-type does not equal 'ATCC'"
VAR
    find_text = "ATCC"
    repl_text = "ATCC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "tissue-type" AND
                                   NOT CONTAINS("o.name", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.name", find_text);
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_172 "Edit strain replace 'CBS' with 'CBS ' where source strain does not contain 'CBS ' (case-sensitive) and where source strain does not equal 'CBS'"
VAR
    find_text = "CBS"
    repl_text = "CBS "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_173 "Edit strain replace 'JCM' with 'JCM ' where source strain does not contain 'JCM ' (case-sensitive) and where source strain does not equal 'JCM'"
VAR
    find_text = "JCM"
    repl_text = "JCM "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_174 "Edit strain replace 'NBRC' with 'NBRC ' where source strain does not contain 'NBRC ' (case-sensitive) and where source strain does not equal 'NBRC'"
VAR
    find_text = "NBRC"
    repl_text = "NBRC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_175 "Edit strain replace 'LMG' with 'LMG ' where source strain does not contain 'LMG ' (case-sensitive) and where source strain does not equal 'LMG'"
VAR
    find_text = "LMG"
    repl_text = "LMG "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_176 "Edit strain replace 'CCUG' with 'CCUG ' where source strain does not contain 'CCUG ' (case-sensitive) and where source strain does not equal 'CCUG'"
VAR
    find_text = "CCUG"
    repl_text = "CCUG "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_177 "Edit strain replace 'KCTC' with 'KCTC ' where source strain does not contain 'KCTC ' (case-sensitive) and where source strain does not equal 'KCTC'"
VAR
    find_text = "KCTC"
    repl_text = "KCTC "
    location = "at the beginning"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain" AND
                                   NOT CONTAINS("o.subname", repl_text, case_sensitive) AND
                                   NOT EQUALS("o.subname", find_text);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_178 "Parse text starting with 'CBS' replace 'CBS' with 'CBS:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'CBS' and where source strain does not contain ',' (case-sensitive) and where source strain does not contain ';' (case-sensitive) and where source strain does not contain 'ATCC' (ignore spaces, ignore punctuation), allow 'ATCC' to be replaced by 'DSM', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'KCTC' and where source strain starts with 'CBS' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym01-ATCC"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "CBS"
    repl_text = "CBS:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "ATCC", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_179 "Parse text starting with 'ATCC' replace 'ATCC' with 'ATCC:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'ATCC' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'DSM', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'KCTC' and where source strain starts with 'ATCC' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym01-CBS"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "ATCC"
    repl_text = "ATCC:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_180 "Parse text starting with 'JCM' replace 'JCM' with 'JCM:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'JCM' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'DSM', 'NBRC', 'LMG', 'CCUG', 'KCTC', and 'ATCC' and where source strain starts with 'JCM' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym02-CBS"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "JCM"
    repl_text = "JCM:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_181 "Parse text starting with 'NBRC' replace 'NBRC' with 'NBRC:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'NBRC' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'DSM', 'JCM', 'LMG', 'CCUG', 'KCTC', and 'ATCC' and where source strain starts with 'NBRC' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym03-CBS"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "NBRC"
    repl_text = "NBRC:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_182 "Parse text starting with 'LMG' replace 'LMG' with 'LMG:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'LMG' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'DSM', 'JCM', 'NBRC', 'CCUG', 'KCTC', and 'ATCC' and where source strain starts with 'LMG' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym04-CBS"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "LMG"
    repl_text = "LMG:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_183 "Parse text starting with 'CCUG' replace 'CCUG' with 'CCUG:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'CCUG' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'DSM', 'JCM', 'NBRC', 'LMG', 'KCTC', and 'ATCC' and where source strain starts with 'CCUG' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym05-CBS"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "CCUG"
    repl_text = "CCUG:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_184 "Parse text starting with 'KCTC' replace 'KCTC' with 'KCTC:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'KCTC' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'DSM', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'ATCC' and where source strain starts with 'KCTC' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym06-CBS"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "KCTC"
    repl_text = "KCTC:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_185 "Parse text starting with 'DSMZ' replace 'DSMZ' with 'DSM:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'DSM', allow 'DSM' to be replaced by 'DSMZ' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'CBS' (ignore spaces, ignore punctuation), allow 'CBS' to be replaced by 'ATCC', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'KCTC' and where source strain starts with 'DSMZ' (ignore spaces, ignore punctuation), allow 'DSMZ' to be replaced by 'DSM' and where source taxid is present and where source lineage does not contain 'Viruses' (case-sensitive)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match1 = "synonym02-DSM"
    match2 = "synonym07-CBS"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "DSMZ"
    repl_text = "DSM:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE EQUALS("org.db.db", "taxon") AND NOT CONTAINS("org.orgname.lineage", "Viruses", case_sensitive_edit) AND
      NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", "DSM", "synonyms.txt", match1) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "CBS", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", "DSMZ");
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_186 "Parse text starting with 'DSM' replace 'DSM' with 'DSM:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'DSM' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'ATCC' (ignore spaces, ignore punctuation), allow 'ATCC' to be replaced by 'CBS', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'KCTC' and where source strain starts with 'DSM' (ignore spaces, ignore punctuation) and where source taxid is present and where source lineage does not contain 'Viruses' (case-sensitive)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym02-ATCC"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "DSM"
    repl_text = "DSM:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE EQUALS("org.db.db", "taxon") AND NOT CONTAINS("org.orgname.lineage", "Viruses", case_sensitive_edit) AND
      NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "ATCC", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_187 "Parse text starting with 'DSMZ' replace 'DSMZ' with 'DSMZ:' from strain to culture-collection(ignore new text when existing text is present) where source strain does not equal 'DSMZ' and where source strain does not contain ';' (case-sensitive) and where source strain does not contain ',' (case-sensitive) and where source strain does not contain 'ATCC' (ignore spaces, ignore punctuation), allow 'ATCC' to be replaced by 'CBS', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'KCTC' and where source strain starts with 'DSMZ' (ignore spaces, ignore punctuation) and where source taxid is present and where source lineage contains 'Viruses' (case-sensitive)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym02-ATCC"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "DSMZ"
    repl_text = "DSMZ:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE EQUALS("org.db.db", "taxon") AND CONTAINS("org.orgname.lineage", "Viruses", case_sensitive_edit) AND
      NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "strain" AND
                   NOT EQUALS("src.subname", find_text) AND
                   NOT CONTAINS("src.subname", ",") AND
                   NOT CONTAINS("src.subname", ";") AND
                   NOT CONTAINS("src.subname", "ATCC", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.subname", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.subname", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_188 "Parse text starting with 'ATCC' replace 'ATCC' with 'ATCC:' from cell-line to culture-collection(ignore new text when existing text is present) where source cell-line does not equal 'ATCC' and where source cell-line does not contain ';' (case-sensitive) and where source cell-line does not contain ',' (case-sensitive) and where source cell-line does not contain 'DSM' (ignore spaces, ignore punctuation), allow 'DSM' to be replaced by 'CBS', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'KCTC' and where source cell-line starts with 'ATCC' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym01-DSM"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "ATCC"
    repl_text = "ATCC:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("subtype") WHERE src.subtype = "cell-line" AND
                   NOT EQUALS("src.name", find_text) AND
                   NOT CONTAINS("src.name", ",") AND
                   NOT CONTAINS("src.name", ";") AND
                   NOT CONTAINS("src.name", "DSM", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.name", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.name", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_189 "Parse text starting with 'ATCC' replace 'ATCC' with 'ATCC:' from tissue-type to culture-collection(ignore new text when existing text is present) where source tissue-type does not equal 'ATCC' and where source tissue-type does not contain ';' (case-sensitive) and where source tissue-type does not contain ',' (case-sensitive) and where source tissue-type does not contain 'DSM' (ignore spaces, ignore punctuation), allow 'DSM' to be replaced by 'CBS', 'JCM', 'NBRC', 'LMG', 'CCUG', and 'KCTC' and where source tissue-type starts with 'ATCC' (ignore spaces, ignore punctuation)"
VAR
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
    match = "synonym01-DSM"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
VAR
    cap_change = "none"
    existing_text = "eReplace"
VAR
    find_text = "ATCC"
    repl_text = "ATCC:"
    location = "at the beginning"
    case_sensitive_edit = true
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "culture-collection")
DO
    src = Resolve("subtype") WHERE src.subtype = "tissue-type" AND
                   NOT EQUALS("src.name", find_text) AND
                   NOT CONTAINS("src.name", ",") AND
                   NOT CONTAINS("src.name", ";") AND
                   NOT CONTAINS("src.name", "DSM", case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
                   STARTS("src.name", find_text, case_sensitive, ignore_spaces, ignore_punctuation);
    text = ParsedText("src.name", find_text, include_left, "", include_right, case_sens_parse, whole_word);
    AddParsedText(text, "culture-collection", cap_change, existing_text);
    edit_obj = Resolve("org.orgname.mod") Where edit_obj.subtype = "culture-collection";
    EditStringQual("edit_obj.subname", find_text, repl_text, location, case_sensitive_edit );
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_190 "Fix i in primer (forward and reverse) sequences"
VAR
    qual_name_fwd = "pcr-primers..forward..seq"
    qual_name_rev = "pcr-primers..reverse..seq"
FOR EACH BioSource
DO
    FixIInPrimerSeq(qual_name_fwd);
    FixIInPrimerSeq(qual_name_rev);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_191 "Fix USA and state abbreviations in publications"
FOR EACH Pubdesc
DO
    FixUSAAndStateAbbreviations();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_192 "Remove lineage source notes"
FOR EACH BioSource
DO
    RemoveLineageSourceNotes();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_193 "Convert clone to isolate (ignore new text when existing text is present) where source clone starts with 'DGGE'"
VAR
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "isolate")
DO
    src = Resolve("subtype") WHERE src.subtype = "clone" AND STARTS("src.name", "DGGE");
    ConvertStringQual("src.name", "isolate", cap_change, strip_name, existing_text);
    RemoveModifier(src);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_194 "Convert clone to isolate (ignore new text when existing text is present) where source clone starts with 'TGGE'"
VAR
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
FOR EACH BioSource
WHERE NOT ISPRESENT("org.orgname.mod", "isolate")
DO
    src = Resolve("subtype") WHERE src.subtype = "clone" AND STARTS("src.name", "TGGE");
    ConvertStringQual("src.name", "isolate", cap_change, strip_name, existing_text);
    RemoveModifier(src);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_195 "Edit isolate replace 'GGE_gel_band_' with 'GGE gel band '"
VAR
    find_text = "GGE_gel_band_"
    repl_text = "GGE gel band "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_196 "Edit isolate replace 'GGE_gel_band' with 'GGE gel band'"
VAR
    find_text = "GGE_gel_band"
    repl_text = "GGE gel band"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_197 "Edit isolate replace 'GGEgelband' with 'GGE gel band'"
VAR
    find_text = "GGEgelband"
    repl_text = "GGE gel band"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_198 "Edit isolate replace 'GGEband' with 'GGE gel band' where source isolate does not contain 'gel'"
VAR
    find_text = "GGEband"
    repl_text = "GGE gel band"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT CONTAINS("org.orgname.mod", "isolate", "gel")
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_199 "Edit isolate replace 'GGE-band' with 'GGE gel band' where source isolate does not contain 'gel'"
VAR
    find_text = "GGE-band"
    repl_text = "GGE gel band"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT CONTAINS("org.orgname.mod", "isolate", "gel")
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_200 "Edit isolate replace 'GGE-gel band' with 'GGE gel band'"
VAR
    find_text = "GGE-gel band"
    repl_text = "GGE gel band"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_201 "Edit isolate replace 'GGE_gel_' with 'GGE gel band ' where source isolate does not contain 'band'"
VAR
    find_text = "GGE_gel_"
    repl_text = "GGE gel band "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT CONTAINS("org.orgname.mod", "isolate", "band")
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_202 "Edit isolate replace 'GGE_gel' with 'GGE gel band' where source isolate does not contain 'band'"
VAR
    find_text = "GGE_gel"
    repl_text = "GGE gel band"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND NOT CONTAINS("o.subname", "band");
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_203 "Edit isolate replace 'GGE_band_' with 'GGE gel band ' where source isolate does not contain 'gel'"
VAR
    find_text = "GGE_band_"
    repl_text = "GGE gel band "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND NOT CONTAINS("o.subname", "gel");
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_204 "Edit isolate replace 'GGE_band' with 'GGE gel band' where source isolate does not contain 'gel'"
VAR
    find_text = "GGE_band"
    repl_text = "GGE gel band"
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND NOT CONTAINS("o.subname", "gel");
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_205 "Edit isolate replace 'dgge gel band' (case insensitive) with 'DGGE gel band' where source isolate does not contain 'DGGE gel band' (case-sensitive)"
VAR
    find_text = "dgge gel band"
    repl_text = "DGGE gel band"
    location = "anywhere"
    case_sensitive_action = false
    case_sensitive_constr = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND NOT CONTAINS("o.subname", repl_text, case_sensitive_constr);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive_action);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_206 "Edit isolate replace 'tgge gel band' (case insensitive) with 'TGGE gel band' where source isolate does not contain 'TGGE gel band' (case-sensitive)"
VAR
    find_text = "tgge gel band"
    repl_text = "TGGE gel band"
    location = "anywhere"
    case_sensitive_action = false
    case_sensitive_constr = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND NOT CONTAINS("o.subname", repl_text, case_sensitive_constr);
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive_action);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_207 "Edit isolate replace 'DGGE band' (case insensitive) with 'DGGE gel band'"
VAR
    find_text = "DGGE band"
    repl_text = "DGGE gel band"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_208 "Edit isolate replace 'TGGE band' (case insensitive) with 'TGGE gel band'"
VAR
    find_text = "TGGE band"
    repl_text = "TGGE gel band"
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_209 "Edit isolate replace 'DGGE' (case insensitive) with 'DGGE gel band' where source isolate does not contain 'gel', allow 'gel' to be replaced by 'band' and 'gel band'"
VAR
    find_text = "DGGE"
    repl_text = "DGGE gel band"
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND NOT CONTAINS("o.subname", "gel", "synonyms.txt", "gel");
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_210 "Edit isolate replace 'TGGE' (case insensitive) with 'TGGE gel band' where source isolate does not contain 'gel band' (case-sensitive), allow 'gel band' to be replaced by 'gel' and 'band'"
VAR
    find_text = "TGGE"
    repl_text = "TGGE gel band"
    location = "at the beginning"
    case_sensitive = false
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate" AND NOT CONTAINS("o.subname", "gel", "synonyms.txt", "gel");
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_211 "Edit isolate replace 'GGE gel band' with 'GGE gel band '"
VAR
    find_text = "GGE gel band"
    repl_text = "GGE gel band "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "isolate";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_212 "Fix capitalization in common Mus musculus strains"
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "strain";
    FixMouseStrains(o);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_213 "Edit taxname replace ' sp' with ' sp.' where source dbxref does not start with 'taxon:'"
VAR
    find_text = " sp"
    repl_text = " sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon")
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_214 "Edit taxname replace ' spp' with ' sp.' where source dbxref does not start with 'taxon:'"
VAR
    find_text = " spp"
    repl_text = " sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon")
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_215 "Edit taxname replace ' spp.' with ' sp.' where source dbxref does not start with 'taxon:'"
VAR
    find_text = " spp."
    repl_text = " sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon")
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_216 "Edit taxname replace ' sp ' with ' sp. ' where source dbxref does not start with 'taxon:' (case-sensitive)"
VAR
    find_text = " sp "
    repl_text = " sp. "
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
WHERE NOT STARTS("org.db.db", "taxon:", case_sensitive)
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_217 "Edit host replace ' sp' with ' sp.'"
VAR
    find_text = " sp"
    repl_text = " sp."
    location = "at the end"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("org.orgname.mod") WHERE o.subtype = "nat-host";
    EditStringQual ("o.subname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_218 "Edit CDS product replace 'seqeunce' with 'sequence'"
VAR
    find_text = "seqeunce"
    repl_text = "sequence"
    location = "anywhere"
    case_sensitive = true
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_219 "Edit mRNA product replace 'seqeunce' with 'sequence'"
VAR
    find_text = "seqeunce"
    repl_text = "sequence"
    location = "anywhere"
    case_sensitive = true
FOR EACH mRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_220 "Edit misc_RNA product replace 'seqeunce' with 'sequence'"
VAR
    find_text = "seqeunce"
    repl_text = "sequence"
    location = "anywhere"
    case_sensitive = true
FOR EACH MiscRNA
DO
    EditStringQual ("data.rna.ext.gen.product", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_221 "Edit misc_RNA note replace 'seqeunce' with 'sequence'"
VAR
    find_text = "seqeunce"
    repl_text = "sequence"
    location = "anywhere"
    case_sensitive = true
FOR EACH MiscRNA
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_222 "Edit rRNA product replace 'seqeunce' with 'sequence'"
VAR
    find_text = "seqeunce"
    repl_text = "sequence"
    location = "anywhere"
    case_sensitive = true
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_223 "Edit rRNA note replace 'seqeunce' with 'sequence'"
VAR
    find_text = "seqeunce"
    repl_text = "sequence"
    location = "anywhere"
    case_sensitive = true
FOR EACH rRNA
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_224 "Edit misc_feature note replace 'Intergenic spacer' (case insensitive) with 'intergenic spacer' where misc_feature note does not contain 'intergenic spacer' (case-sensitive)"
VAR
    find_text = "Intergenic spacer"
    repl_text = "intergenic spacer"
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH MiscFeat
WHERE NOT CONTAINS("comment", repl_text, case_sensitive_constr)
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive_edit);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_225 "Edit misc_feature note replace 'intergeneric' (case insensitive) with 'intergenic'"
VAR
    find_text = "intergeneric"
    repl_text = "intergenic"
    location = "anywhere"
    case_sensitive = false
FOR EACH MiscFeat
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_226 "Edit gene locus replace ' gene' (case insensitive) with '' where gene locus does not contain 'recombination' (ignore spaces), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where gene locus does not contain 'triple' (ignore spaces), allow 'triple' to be replaced by 'block'"
VAR
    find_text = " gene"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    qual_name = "data.gene.locus"
FOR EACH Gene
WHERE NOT CONTAINS(qual_name, "recombination", case_sensitive, ignore_space, "synonyms.txt", "recombination") AND
      NOT CONTAINS(qual_name, "triple", case_sensitive, ignore_space, "synonyms.txt", "triple")
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_227 "Edit gene locus replace ' gene, partial cds' (case insensitive) with '' where gene locus does not contain 'recombination' (ignore spaces), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where gene locus does not contain 'triple' (ignore spaces), allow 'triple' to be replaced by 'block'"
VAR
    find_text = " gene, partial cds"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    qual_name = "data.gene.locus"
FOR EACH Gene
WHERE NOT CONTAINS(qual_name, "recombination", case_sensitive, ignore_space, "synonyms.txt", "recombination") AND
      NOT CONTAINS(qual_name, "triple", case_sensitive, ignore_space, "synonyms.txt", "triple")
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_228 "Edit protein name replace ', partial CDS' (case insensitive) with ''"
VAR
    find_text = ", partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_229 "Edit protein name replace '; partial CDS' (case insensitive) with ''"
VAR
    find_text = "; partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_230 "Edit protein name replace 'partial CDS' (case insensitive) with ''"
VAR
    find_text = "partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_231 "Edit protein name replace 'gene, partial CDS' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    find_text = "gene, partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_232 "Edit protein name replace 'gene partial CDS' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    find_text = "gene partial CDS"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_233 "Edit protein name replace 'gene, partial protein' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    find_text = "gene, partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_234 "Edit protein name replace 'gene partial protein' (case insensitive) with '' where protein name does not contain 'recombination' (ignore spaces, ignore punctuation), allow 'recombination' to be replaced by 'recombinatin', 'recombinaton', and 'recombonation' and where protein name does not contain 'activating' (ignore spaces, ignore punctuation) and where protein name does not contain 'triple' (ignore spaces, ignore punctuation)"
VAR
    find_text = "gene partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE NOT CONTAINS(o, "recombination", case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", "recombination") AND
          NOT CONTAINS(o, "activating", case_sensitive, ignore_space, ignore_punctuation) AND
          NOT CONTAINS(o, "triple", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_235 "Edit protein name replace ', partial protein' (case insensitive) with ''"
VAR
    find_text = ", partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_236 "Edit protein name replace '; partial protein' (case insensitive) with ''"
VAR
    find_text = "; partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_237 "Edit protein name replace ' partial protein' (case insensitive) with ''"
VAR
    find_text = " partial protein"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_238 "Edit protein name replace ', partial' (case insensitive) with ''"
VAR
    find_text = ", partial"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_239 "Edit protein name replace '; partial' (case insensitive) with ''"
VAR
    find_text = "; partial"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_240 "Edit protein name replace ' partial' (case insensitive) with ''"
VAR
    find_text = " partial"
    repl_text = ""
    location = "at the end"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_241 "Edit protein name replace 'oxydase' (case insensitive) with 'oxidase'"
VAR
    find_text = "oxydase"
    repl_text = "oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_242 "Edit gene locus replace 'oxydase' (case insensitive) with 'oxidase'"
VAR
    find_text = "oxydase"
    repl_text = "oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Gene
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_243 "Edit protein name replace 'oxiydase' (case insensitive) with 'oxidase'"
VAR
    find_text = "oxiydase"
    repl_text = "oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_244 "Edit gene locus replace 'oxiydase' (case insensitive) with 'oxidase'"
VAR
    find_text = "oxiydase"
    repl_text = "oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Gene
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_245 "Edit protein name replace 'oxigenase' (case insensitive) with 'oxygenase'"
VAR
    find_text = "oxigenase"
    repl_text = "oxygenase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_246 "Edit protein name replace 'cytochorme' (case insensitive) with 'cytochrome'"
VAR
    find_text = "cytochorme"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_247 "Edit protein name replace 'cytocrorme' (case insensitive) with 'cytochrome'"
VAR
    find_text = "cytocrorme"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_248 "Edit protein name replace 'citochrome' (case insensitive) with 'cytochrome'"
VAR
    find_text = "citochrome"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_249 "Edit protein name replace 'cytochome' (case insensitive) with 'cytochrome'"
VAR
    find_text = "cytochome"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_250 "Edit protein name replace 'citocromo' (case insensitive) with 'cytochrome'"
VAR
    find_text = "citocromo"
    repl_text = "cytochrome"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_251 "Edit protein name replace 'cytochrom ' (case insensitive) with 'cytochrome '"
VAR
    find_text = "cytochrom "
    repl_text = "cytochrome "
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_252 "Edit protein name replace 'polymeerase' (case insensitive) with 'polymerase'"
VAR
    find_text = "polymeerase"
    repl_text = "polymerase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_253 "Edit protein name replace 'subunite ' (case insensitive) with 'subunit '"
VAR
    find_text = "subunite"
    repl_text = "subunit "
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_254 "Edit rRNA product replace 'ribossomal' (case insensitive) with 'ribosomal'"
VAR
    find_text = "ribossomal"
    repl_text = "ribosomal"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_255 "Edit rRNA product replace 'ribosmal' (case insensitive) with 'ribosomal'"
VAR
    find_text = "ribosmal"
    repl_text = "ribosomal"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_256 "Edit rRNA product replace 'robosmal' (case insensitive) with 'ribosomal'"
VAR
    find_text = "robosmal"
    repl_text = "ribosomal"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_257 "Remove organism names from protein names"
For each Protein
Do
    FixProteinFormat();
Done
------------------------------------------------------------------------------
MACRO AutofixGB_258 "Apply cytochrome b to CDS product (overwrite existing text) where CDS product equals 'cytochrome b gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'region', 'cytb', 'cyt b', 'partial sequence', 'complete sequence', '(cytb)', and '(cyt b)'"
VAR
    new_value = "cytochrome b"
    existing_text = "eReplace"
    match1 = "cytochrome b gene"
    match2 = "gene"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_259 "Apply cytb to gene locus (overwrite existing text) where gene locus equals 'cytochrome b (cytb)' (ignore spaces, ignore punctuation), allow 'cytochrome b (cytb)' to be replaced by 'cytochrome b (cytb) gene' and where protein name contains 'cytochrome b' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cyt b"
    existing_text = "eReplace"
    match = "cytochrome b (cytb)"
    match_prot = "cytochrome b"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
      CONTAINS(RELATED_FEATURE("protein", "data.prot.name"), match_prot, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_260 "Apply cytochrome b to CDS product (overwrite existing text) where CDS product equals 'cytochrome b gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'region', 'cytb', 'cyt b', 'partial sequence', 'complete sequence', '(cytb)', and '(cyt b)', allow 'cytochrome b gene' to be replaced by 'cytochrome b (cytb) gene' and where gene locus contains 'cytb'"
VAR
    new_value = "cytochrome b"
    existing_text = "eReplace"
    match1 = "cytochrome b gene"
    match2 = "gene"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE CONTAINS(RELATED_FEATURE("gene", "data.gene.locus"), "cytb")
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_261 "Apply cytochrome b to protein name (overwrite existing text) where protein name equals 'cytb' (ignore spaces, ignore punctuation) and where gene locus equals '(cytb)' (ignore spaces, ignore punctuation) and where protein description equals 'cytochrome b' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cytochrome b"
    existing_text = "eReplace"
    match = "cytb"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "(cytb)", case_sensitive, ignore_spaces, ignore_punctuation) AND
      EQUALS("data.prot.desc", new_value, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_262 "Apply cytochrome b to protein name (overwrite existing text) where protein name equals 'cytb' (ignore spaces, ignore punctuation) and where gene locus equals '(cytb)' (ignore spaces, ignore punctuation) and where CDS comment equals 'cytochrome b' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cytochrome b"
    existing_text = "eReplace"
    match = "cytb"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "(cytb)", case_sensitive, ignore_spaces, ignore_punctuation) AND
      EQUALS(RELATED_FEATURE("cds", "comment"), new_value, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_263 "Apply maturase K to CDS product (overwrite existing text) where CDS product equals 'maturase K gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'partial', 'complete', 'region', 'sequence', 'matK', 'mat k', 'partial sequence', 'complete sequence', '(matK)', and '(mat K)'"
VAR
    new_value = "maturase K"
    existing_text = "eReplace"
    match1 = "maturase K gene"
    match2 = "gene"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_264 "Apply maturase K to CDS product (overwrite existing text) where protein name equals 'maturase' (ignore spaces, ignore punctuation) and where gene locus equals 'matK' (ignore spaces, ignore punctuation)"
VAR
    new_value = "maturase K"
    existing_text = "eReplace"
    match = "maturase"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "matK", case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_265 "Edit protein name replace 'cytochrome oxidase c subunit 1' (case insensitive) with 'cytochrome c oxidase subunit 1'"
VAR
    find_text = "cytochrome oxidase c subunit 1"
    repl_text = "cytochrome c oxidase subunit 1"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_266 "Edit protein name replace 'cytochrome oxidase c subunit I' (case insensitive) with 'cytochrome c oxidase subunit I'"
VAR
    find_text = "cytochrome oxidase c subunit I"
    repl_text = "cytochrome c oxidase subunit I"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_267 "Edit protein name replace 'cytochrome c oxidae' (case insensitive) with 'cytochrome c oxidase'"
VAR
    find_text = "cytochrome c oxidae"
    repl_text = "cytochrome c oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_268 "Edit protein name replace 'cytochrome oxidae' (case insensitive) with 'cytochrome oxidase'"
VAR
    find_text = "cytochrome oxidae"
    repl_text = "cytochrome oxidase"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_269 "Edit protein name replace 'cytochrom c oxidase subunit 1' (case insensitive) with 'cytochrome c oxidase subunit 1'"
VAR
    find_text = "cytochrom c oxidase subunit 1"
    repl_text = "cytochrome c oxidase subunit 1"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_270 "Edit protein name replace 'cytochrom oxidase subunit 1' (case insensitive) with 'cytochrome oxidase subunit 1'"
VAR
    find_text = "cytochrom oxidase subunit 1"
    repl_text = "cytochrome oxidase subunit 1"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_271 "Apply cytochrome oxidase subunit 1 to protein name (overwrite existing text) where gene locus equals 'COI' (ignore spaces, ignore punctuation) and where protein name equals 'COI' (ignore spaces, ignore punctuation) and where protein description contains 'cytochrome oxidase I' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cytochrome oxidase subunit 1"
    existing_text = "eReplace"
    match = "COI"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      CONTAINS("data.prot.desc", "cytochrome oxidase I", case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_272 "Apply cytochrome oxidase subunit 1 to protein name (overwrite existing text) where gene locus equals 'COI' (ignore spaces, ignore punctuation) and where protein name equals 'COI' (ignore spaces, ignore punctuation) and where CDS comment contains 'cytochrome oxidase I' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cytochrome oxidase subunit 1"
    existing_text = "eReplace"
    match = "COI"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      CONTAINS(RELATED_FEATURE("cds", "comment"), "cytochrome oxidase I", case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_273 "Apply cytochrome oxidase subunit 1 to protein name (overwrite existing text) where gene locus equals 'COI' (ignore spaces, ignore punctuation) and where protein name equals 'COI' (ignore spaces, ignore punctuation) and where gene description contains 'cytochrome oxidase I' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cytochrome oxidase subunit 1"
    existing_text = "eReplace"
    match = "COI"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      CONTAINS(RELATED_FEATURE("gene", "data.gene.desc"), "cytochrome oxidase I", case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_274 "Apply cytochrome oxidase subunit 1 to protein name (overwrite existing text) where gene locus equals 'COI' (ignore spaces, ignore punctuation) and where protein name equals 'COI' (ignore spaces, ignore punctuation) and where gene comment contains 'cytochrome oxidase I' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cytochrome oxidase subunit 1"
    existing_text = "eReplace"
    match = "COI"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      CONTAINS(RELATED_FEATURE("gene", "comment"), "cytochrome oxidase I", case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_275 "Apply cytochrome c oxidase subunit 1 to protein name (overwrite existing text) where gene locus equals 'Cox1' (ignore spaces, ignore punctuation) and where protein name equals 'cytochrome c oxidase' (ignore spaces, ignore punctuation)"
VAR
    new_value = "cytochrome c oxidase subunit 1"
    existing_text = "eReplace"
    match = "cytochrome c oxidase"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "Cox1", case_sensitive, ignore_spaces, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_276 "Apply cytochrome c oxidase subunit 1 to protein name (overwrite existing text) where gene locus equals 'cytochrome oxidase C subunit I' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase C subunit I' to be replaced by 'cytochrome C oxidase subunit I' and where protein name equals 'cytochrome oxidase c' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase c' to be replaced by 'cytochrome c oxidase'"
VAR
    new_value = "cytochrome c oxidase subunit 1"
    existing_text = "eReplace"
    match_gene = "cytochrome oxidase C subunit I"
    match_protein = "cytochrome oxidase c"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match_gene, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_gene)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match_protein, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_protein);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_277 "Apply translation elongation factor 1-alpha to protein name (overwrite existing text) where protein name equals 'Translation elongation factor 1-alpha' (ignore spaces, ignore punctuation), allow 'Translation elongation factor 1-alpha' to be replaced by 'Translation elongation factor 1-alpha partial sequence', 'Translation elongation factor 1-alpha partial protein', 'Translation elongation factor 1-alpha partial', 'Translation elongation factor 1-alpha, partial sequence', 'Translation elongation factor 1-alpha, partial protein', and 'Translation elongation factor 1-alpha, partial'"
VAR
    new_value = "translation elongation factor 1-alpha"
    existing_text = "eReplace"
    match = "Translation elongation factor 1-alpha"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_278 "Swap protein name with gene locus where protein name equals 'cox1' (ignore spaces, ignore punctuation), allow 'cox1' to be replaced by 'coxI', 'CO1', and 'COI' and where gene locus equals 'cytochrome oxidase subunit I' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase subunit I' to be replaced by 'cytochrome c oxidase subunit I', 'cytochrome c oxidase subunit one', 'cytochrome oxidase subunit one', 'cytochrome c oxidase subunit I', and 'cytochrome oxidase subunit I'"
VAR
   match_protein = "cox1"
   match_gene = "cytochrome oxidase subunit I"
   case_sensitive = false
   ignore_space = true
   ignore_punctuation = true
   update_mrna = false
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match_gene, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match_gene)
DO
   src_obj = Resolve("data.prot.name") WHERE EQUALS(src_obj, match_protein, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match_protein);
   SwapFeatureQual(src_obj, "gene", "data.gene.locus", update_mrna);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_279 "Swap protein name with CDS comment where protein name equals 'COI' (ignore spaces, ignore punctuation) and where CDS comment equals 'cytochrome oxidase subunit I' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase subunit I' to be replaced by 'cytochrome c oxidase subunit I', 'cytochrome c oxidase subunit one', 'cytochrome oxidase subunit one', 'cytochrome c oxidase subunit I', and 'cytochrome oxidase subunit I'"
VAR
   match_protein = "COI"
   match_cds = "cytochrome oxidase subunit I"
   case_sensitive = false
   ignore_space = true
   ignore_punctuation = true
   update_mrna = false
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("CDS", "comment"), match_cds, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match_cds)
DO
   src_obj = Resolve("data.prot.name") WHERE EQUALS(src_obj, match_protein, case_sensitive, ignore_space, ignore_punctuation);
   SwapFeatureQual(src_obj, "CDS", "comment", update_mrna);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_280 "Edit protein name replace 'Cytochrome Oxidase unit ' (case insensitive) with 'cytochrome oxidase subunit ' where protein name does not contain 'subunit' (case-sensitive)"
VAR
    find_text = "Cytochrome Oxidase unit "
    repl_text = "cytochrome oxidase subunit "
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE NOT CONTAINS(o, "subunit", case_sensitive_constr);
    EditStringQual (o, find_text, repl_text, location, case_sensitive_edit);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_281 "Edit protein name replace 'Cytochrome c Oxidase unit ' (case insensitive) with 'cytochrome c oxidase subunit ' where protein name does not contain 'subunit' (case-sensitive)"
VAR
    find_text = "Cytochrome c Oxidase unit "
    repl_text = "cytochrome c oxidase subunit "
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE NOT CONTAINS(o, "subunit", case_sensitive_constr);
    EditStringQual (o, find_text, repl_text, location, case_sensitive_edit);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_282 "Apply cytochrome c oxidase subunit I to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit I gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome c oxidase subunit I gene' to be replaced by 'cytochrome c oxidase I', 'cytochrome c oxidase I gene', 'cytochrome c subunit I', and 'cytochrome c oxidase subunit I gene protein', allow 'I' to be replaced by 'one', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit I"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit I gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "I"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_283 "Apply cytochrome c oxidase subunit II to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit II gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome c oxidase subunit II gene' to be replaced by 'cytochrome c oxidase II gene', 'cytochrome c oxidase II', 'cytochrome c subunit II', and 'cytochrome c oxidase subunit II protein', allow 'II' to be replaced by 'two', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit II"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit II gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "II"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_284 "Apply cytochrome oxidase subunit I to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit I gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit I gene' to be replaced by 'cytochrome oxidase I gene', 'cytochrome oxidase I', and 'cytochrome subunit I', allow 'I' to be replaced by 'one', allow ' I' to be replaced by ' i', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit I"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit I gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "I"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name")
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_285 "Apply cytochrome oxidase subunit II to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit II gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit II gene' to be replaced by 'cytochrome oxidase II gene', 'cytochrome oxidase II', and 'cytochrome subunit II', allow 'II' to be replaced by 'two', allow 'II' to be replaced by 'ii', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit II"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit II gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "II"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_286 "Apply cytochrome oxidase subunit III to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit III gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit III gene' to be replaced by 'cytochrome oxidase III gene', 'cytochrome oxidase III', and 'cytochrome subunit III', allow 'III' to be replaced by 'three' and 'iii', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit III"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit III gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "III"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_287 "Apply cytochrome c oxidase subunit 1 to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit 1 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome c oxidase subunit 1 gene' to be replaced by 'cytochrome c oxidase 1 gene', 'cytochrome c oxidase 1', and 'cytochrome c subunit 1', allow '1' to be replaced by 'one', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit 1"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit 1 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "1"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_288 "Apply cytochrome oxidase subunit 1 to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit 1 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'sequence', 'partial', 'complete', 'partial sequence', 'complete sequence', 'region', and 'protein', allow 'cytochrome oxidase subunit 1 gene' to be replaced by 'cytochrome oxidase 1', 'cytochrome oxidase 1 gene', and 'cytochrome subunit 1', allow '1' to be replaced by 'one', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit 1"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit 1 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "1"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_289 "Apply COI to gene locus (overwrite existing text) where gene locus equals 'cytochrome oxidase subunit 1 (COI)' (case-sensitive, ignore spaces, ignore punctuation) and where protein name equals 'cytochrome oxidase subunit 1 (COI)', allow 'cytochrome oxidase subunit 1 (COI)' to be replaced by 'cytochrome oxidase subunit 1'"
VAR
    new_value = "COI"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit 1 (COI)"
    case_sensitive = true
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, "synonyms.txt", match)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_290 "Edit protein name replace 'cytochrome oxidase subunit 1 (COI)' (case insensitive) with 'cytochrome oxidase subunit 1' where gene locus equals 'COI' (ignore spaces, ignore punctuation)"
VAR
    find_text = "cytochrome oxidase subunit 1 (COI)"
    repl_text = "cytochrome oxidase subunit 1"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "COI", case_sensitive, ignore_space, ignore_punct)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_291 "Apply COI to gene locus (overwrite existing text) where gene locus equals 'cytochrome oxidase subunit I (COI)' (ignore spaces, ignore punctuation) and where protein name equals 'cytochrome oxidase subunit I (COI)' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase subunit I (COI)' to be replaced by 'cytochrome oxidase subunit I'"
VAR
    new_value = "COI"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit I (COI)"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_292 "Apply COI to gene locus (overwrite existing text) where gene locus equals 'cytochrome oxidase I (COI)' (ignore spaces, ignore punctuation) and where protein name equals 'cytochrome oxidase I (COI)' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase I (COI)' to be replaced by 'cytochrome oxidase subunit I (COI)'"
VAR
    new_value = "COI"
    existing_text = "eReplace"
    match = "cytochrome oxidase I (COI)"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation) AND
      EQUALS(RELATED_FEATURE("protein", "data.prot.name"), match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_293 "Apply cytochrome oxidase subunit I to protein name (overwrite existing text) where gene locus contains 'COI' (case-sensitive) and where protein name equals 'cytochrome oxidase I (COI)', allow 'cytochrome oxidase I (COI)' to be replaced by 'cytochrome oxidase subunit I (COI)'"
VAR
    new_value = "cytochrome oxidase subunit I"
    existing_text = "eReplace"
    case_sensitive = true
    match = "cytochrome oxidase I (COI)"
FOR EACH Protein
WHERE CONTAINS(RELATED_FEATURE("gene", "data.gene.locus"), "COI", case_sensitive)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_294 "Apply cytochrome oxidase subunit I to protein name (overwrite existing text) where gene locus contains 'COI' (case-sensitive) and where protein name equals 'cytochrome oxidase I (COI)'"
VAR
    new_value = "cytochrome oxidase subunit I"
    existing_text = "eReplace"
    case_sensitive = true
    match = "cytochrome oxidase I (COI)"
FOR EACH Protein
WHERE CONTAINS(RELATED_FEATURE("gene", "data.gene.locus"), "COI", case_sensitive)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_295 "Apply cytochrome oxidase subunit III to protein name (overwrite existing text) where gene locus contains 'COIII' (case-sensitive) and where protein name equals 'cytochrome oxidase subunit III (COIII) gene' (ignore spaces, ignore punctuation), allow 'cytochrome oxidase subunit III (COIII) gene' to be replaced by 'cytochrome oxidase subunit 3 (COIII) gene', 'cytochrome oxidase subunit 3 (COIII)', and 'cytochrome oxidase subunit III (COIII)'"
VAR
    new_value = "cytochrome oxidase subunit III"
    existing_text = "eReplace"
    case_sensitive_constr1 = true
VAR
    match = "cytochrome oxidase subunit III (COIII) gene"
    case_sensitive_constr2 = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE CONTAINS(RELATED_FEATURE("gene", "data.gene.locus"), "COIII", case_sensitive_constr1)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive_constr2, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_296 "Apply COI to gene locus (overwrite existing text) where gene locus equals 'mt DNA COI' (ignore spaces, ignore punctuation), allow 'mt DNA COI' to be replaced by 'mtCOI', 'mt COI', and 'mitochondrial COI'"
VAR
    new_value = "COI"
    existing_text = "eReplace"
    match = "mt DNA COI"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_297 "Apply cytochrome c oxidase subunit 2 to CDS product (overwrite existing text) where CDS product equals 'cytochrome c oxidase subunit 2 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'partial', 'complete', 'sequence', 'region', 'partial sequence', 'complete sequence', and 'protein', allow 'cytochrome c oxidase subunit 2 gene' to be replaced by 'cytochrome c oxidase 2 gene', 'cytochrome c oxidase 2', and 'cytochrome c subunit 2', allow '2' to be replaced by 'two', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome c oxidase subunit 2"
    existing_text = "eReplace"
    match = "cytochrome c oxidase subunit 2 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "2"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_298 "Apply cytochrome oxidase subunit 2 to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit 2 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'partial', 'complete', 'sequence', 'region', 'partial sequence', 'complete sequence', and 'protein', allow 'cytochrome oxidase subunit 2 gene' to be replaced by 'cytochrome oxidase 2 gene', 'cytochrome oxidase 2', and 'cytochrome subunit 2', allow '2' to be replaced by 'two', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit 2"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit 2 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "2"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_299 "Apply cytochrome oxidase subunit 3 to CDS product (overwrite existing text) where CDS product equals 'cytochrome oxidase subunit 3 gene' (ignore spaces, ignore punctuation), allow 'oxidase' to be replaced by 'oxydase', allow 'gene' to be replaced by 'partial', 'complete', 'sequence', 'region', 'partial sequence', 'complete sequence', and 'protein', allow 'cytochrome oxidase subunit 3 gene' to be replaced by 'cytochrome oxidase 3 gene', 'cytochrome oxidase 3', and 'cytochrome subunit 3', allow '3' to be replaced by 'three', allow 'oxidase subunit' to be replaced by 'subunit'"
VAR
    new_value = "cytochrome oxidase subunit 3"
    existing_text = "eReplace"
    match = "cytochrome oxidase subunit 3 gene"
    match1 = "oxidase"
    match2 = "gene"
    match3 = "3"
    match4 = "oxidase subunit"
    match5 = "optional-subunit"
    match6 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3, match4, match5, match6);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_300 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'complete sequence', 'region', 'complete', 'partial', 'sequence', 'rbcL', 'partial sequence', 'protein', and 'subunit', allow 'large subunit gene' to be replaced by 'lsu' and 'large'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit gene"
    match1 = "gene"
    match2 = "large subunit gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_301 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'complete sequence', 'region', 'complete', 'partial', 'sequence', 'rbcL', 'partial sequence', 'protein', and 'subunit', allow 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' to be replaced by 'ribulose-1,5-bisphosphate carboxylase/oxygenase' and 'ribulose 1,5-bisphosphate carboxylase oxygenase' and where gene locus equals 'rbcl gene' (ignore spaces, ignore punctuation), allow 'rbcl gene' to be replaced by 'rbcl', allow 'gene' to be replaced by 'sequence', 'protein', 'partial sequence', 'partial protein', and 'partial gene'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase gene"
    match1 = "gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    match_gene = "rbcl gene"
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match_gene, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_gene)
DO
    o = Resolve("data.prot.name") WHERE 
    EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1) OR
    EQUALS(o, "ribulose-1,5-bisphosphate carboxylase/oxygenase rbcL", case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_302 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'complete sequence', 'region', 'complete', 'partial', 'sequence', 'rbcS', 'partial sequence', 'protein', and 'subunit', allow 'ribulose-1,5-bisphosphate carboxylase/oxygenase gene' to be replaced by 'ribulose-1,5-bisphosphate carboxylase/oxygenase' and 'ribulose 1,5-bisphosphate carboxylase oxygenase' and where gene locus equals 'rbcs gene' (ignore spaces, ignore punctuation), allow 'rbcs gene' to be replaced by 'rbcs', allow 'gene' to be replaced by 'sequence', 'protein', 'partial gene', 'partial sequence', and 'partial protein'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase gene"
    match1 = "gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
VAR
    match_gene = "rbcs gene"
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), match_gene, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match_gene)
DO
    o = Resolve("data.prot.name") WHERE 
    EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1) OR
    EQUALS(o, "ribulose-1,5-bisphosphate carboxylase/oxygenase rbcS", case_sensitive, ignore_spaces, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_303 "Apply ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit to CDS product (overwrite existing text) where CDS product equals 'ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'partial', 'complete', 'partial sequence', 'region', 'sequence', 'rbcS', 'complete sequence', and 'protein'"
VAR
    new_value = "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit"
    existing_text = "eReplace"
    match = "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit gene"
    match1 = "gene"
    match2 = "optional-subunit"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match, match1, match2, match3);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_304 "Apply MHC class I antigen to protein name (overwrite existing text) where object text equals 'MHC CLASS I ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class I antigen"
    existing_text = "eReplace"
    match = "MHC CLASS I ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_305 "Apply MHC class I antigen to mRNA product (overwrite existing text) where object text equals 'MHC CLASS I ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class I antigen"
    existing_text = "eReplace"
    match = "MHC CLASS I ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_306 "Apply MHC class II antigen to protein name (overwrite existing text) where object text equals 'MHC CLASS II ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class II antigen"
    existing_text = "eReplace"
    match = "MHC CLASS II ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_307 "Apply MHC class II antigen to mRNA product (overwrite existing text) where object text equals 'MHC CLASS II ANTIGEN gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'protein'"
VAR
    new_value = "MHC class II antigen"
    existing_text = "eReplace"
    match = "MHC CLASS II ANTIGEN gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_308 "Apply ND1 to gene locus (overwrite existing text) where gene locus equals 'NADH dehydrogenase subunit 1 gene (ND1)' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'mitochondrial sequence', and 'mtDNA' and where protein name contains 'NADH dehydrogenase subunit 1' (ignore spaces, ignore punctuation)"
VAR
    new_value = "ND1"
    existing_text = "eReplace"
    match = "NADH dehydrogenase subunit 1 gene (ND1)"
    prot = "NADH dehydrogenase subunit 1"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
      CONTAINS(RELATED_FEATURE("protein", "data.prot.name"), prot, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_309 "Edit protein name replace 'NADH dehydrogenase subunit 1 (ND1)' (case insensitive) with 'NADH dehydrogenase subunit 1' where gene locus equals 'ND1' (ignore spaces, ignore punctuation) and where protein name equals 'NADH dehydrogenase subunit 1 (ND1)' (ignore spaces, ignore punctuation), allow 'NADH dehydrogenase subunit 1 (ND1)' to be replaced by 'NADH dehydrogenase subunit 1 (ND1) gene', 'NADH dehydrogenase subunit 1 (ND1) sequence', 'NADH dehydrogenase subunit 1 (ND1) partial sequence', and 'NADH dehydrogenase subunit 1 (ND1) partial protein'"
VAR
    find_text = "NADH dehydrogenase subunit 1 (ND1)"
    repl_text = "NADH dehydrogenase subunit 1"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND1", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, find_text, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", find_text);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_310 "Apply ND2 to gene locus (overwrite existing text) where gene locus equals 'NADH dehydrogenase subunit 2 gene (ND2)' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'mitochondrial sequence', and 'mtDNA' and where protein name contains 'NADH dehydrogenase subunit 2' (ignore spaces, ignore punctuation)"
VAR
    new_value = "ND2"
    existing_text = "eReplace"
    match = "NADH dehydrogenase subunit 2 gene (ND2)"
    prot = "NADH dehydrogenase subunit 2"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
      CONTAINS(RELATED_FEATURE("protein", "data.prot.name"), prot, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_311 "Edit protein name replace 'NADH dehydrogenase subunit 2 (ND2)' (case insensitive) with 'NADH dehydrogenase subunit 2' where gene locus equals 'ND2' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 2 (ND2)"
    repl_text = "NADH dehydrogenase subunit 2"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND2", case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name");
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_312 "Apply ND3 to gene locus (overwrite existing text) where gene locus equals 'NADH dehydrogenase subunit 3 gene (ND3)' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'mitochondrial sequence', and 'mtDNA' and where protein name contains 'NADH dehydrogenase subunit 3' (ignore spaces, ignore punctuation)"
VAR
    new_value = "ND3"
    existing_text = "eReplace"
    match = "NADH dehydrogenase subunit 3 gene (ND3)"
    prot = "NADH dehydrogenase subunit 3"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
      CONTAINS(RELATED_FEATURE("protein", "data.prot.name"), prot, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_313 "Edit protein name replace 'NADH dehydrogenase subunit 3 (ND3)' (case insensitive) with 'NADH dehydrogenase subunit 3' where gene locus equals 'ND3' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 3 (ND3)"
    repl_text = "NADH dehydrogenase subunit 3"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND3", case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_314 "Apply ND4 to gene locus (overwrite existing text) where gene locus equals 'NADH dehydrogenase subunit 4 gene (ND4)' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'mitochondrial sequence', and 'mtDNA' and where protein name contains 'NADH dehydrogenase subunit 4' (ignore spaces, ignore punctuation)"
VAR
    new_value = "ND4"
    existing_text = "eReplace"
    match = "NADH dehydrogenase subunit 4 gene (ND4)"
    prot = "NADH dehydrogenase subunit 4"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
      CONTAINS(RELATED_FEATURE("protein", "data.prot.name"), prot, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_315 "Edit protein name replace 'NADH dehydrogenase subunit 4 (ND4)' (case insensitive) with 'NADH dehydrogenase subunit 4' where gene locus equals 'ND4' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 4 (ND4)"
    repl_text = "NADH dehydrogenase subunit 4"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND4", case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_316 "Apply ND5 to gene locus (overwrite existing text) where gene locus equals 'NADH dehydrogenase subunit 5 gene (ND5)' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'mitochondrial sequence', and 'mtDNA' and where protein name contains 'NADH dehydrogenase subunit 5' (ignore spaces, ignore punctuation)"
VAR
    new_value = "ND5"
    existing_text = "eReplace"
    match = "NADH dehydrogenase subunit 5 gene (ND5)"
    prot = "NADH dehydrogenase subunit 5"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
      CONTAINS(RELATED_FEATURE("protein", "data.prot.name"), prot, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_317 "Edit protein name replace 'NADH dehydrogenase subunit 5 (ND5)' (case insensitive) with 'NADH dehydrogenase subunit 5' where gene locus equals 'ND5' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 5 (ND5)"
    repl_text = "NADH dehydrogenase subunit 5"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND5", case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_318 "Apply ND6 to gene locus (overwrite existing text) where gene locus equals 'NADH dehydrogenase subunit 6 gene (ND6)' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'mitochondrial sequence', and 'mtDNA' and where protein name contains 'NADH dehydrogenase subunit 6' (ignore spaces, ignore punctuation)"
VAR
    new_value = "ND6"
    existing_text = "eReplace"
    match = "NADH dehydrogenase subunit 6 gene (ND6)"
    prot = "NADH dehydrogenase subunit 6"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match) AND
      CONTAINS(RELATED_FEATURE("protein", "data.prot.name"), prot, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_319 "Edit gene locus replace 'NADH dehydrogenase subunit 6 (ND6)' (case insensitive) with 'ND6' where protein name equals 'NADH dehydrogenase subunit 6 (ND6)' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 6 (ND6)"
    repl_text = "ND6"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS(RELATED_FEATURE("protein", "data.prot.name"), find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual ("data.gene.locus", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_320 "Edit protein name replace 'NADH dehydrogenase subunit 6 (ND6)' (case insensitive) with 'NADH dehydrogenase subunit 6' where gene locus equals 'ND6' (ignore spaces, ignore punctuation)"
VAR
    find_text = "NADH dehydrogenase subunit 6 (ND6)"
    repl_text = "NADH dehydrogenase subunit 6"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS(RELATED_FEATURE("gene", "data.gene.locus"), "ND6", case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_321 "Apply NADH dehydrogenase subunit 1 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 1 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 1 gene' to be replaced by 'NADH dehydrogenase 1 gene' and 'NADH dehydrogenase 1', allow '1' to be replaced by 'one'"
VAR
    new_value = "NADH dehydrogenase subunit 1"
    match1 = "NADH dehydrogenase subunit 1 gene"
    match2 = "gene"
    match3 = "1"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_322 "Apply NADH dehydrogenase subunit 2 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 2 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 2 gene' to be replaced by 'NADH dehydrogenase 2 gene' and 'NADH dehydrogenase 2', allow '2' to be replaced by 'two'"
VAR
    new_value = "NADH dehydrogenase subunit 2"
    match1 = "NADH dehydrogenase subunit 2 gene"
    match2 = "gene"
    match3 = "2"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_323 "Apply NADH dehydrogenase subunit 3 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 3 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 3 gene' to be replaced by 'NADH dehydrogenase 3 gene' and 'NADH dehydrogenase 3', allow '3' to be replaced by 'three'"
VAR
    new_value = "NADH dehydrogenase subunit 3"
    match1 = "NADH dehydrogenase subunit 3 gene"
    match2 = "gene"
    match3 = "3"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_324 "Apply NADH dehydrogenase subunit 4 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 4 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 4 gene' to be replaced by 'NADH dehydrogenase 4 gene' and 'NADH dehydrogenase 4', allow '4' to be replaced by 'four'"
VAR
    new_value = "NADH dehydrogenase subunit 4"
    match1 = "NADH dehydrogenase subunit 4 gene"
    match2 = "gene"
    match3 = "4"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_325 "Apply NADH dehydrogenase subunit 5 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 5 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 5 gene' to be replaced by 'NADH dehydrogenase 5 gene' and 'NADH dehydrogenase 5', allow '5' to be replaced by 'five'"
VAR
    new_value = "NADH dehydrogenase subunit 5"
    match1 = "NADH dehydrogenase subunit 5 gene"
    match2 = "gene"
    match3 = "5"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_326 "Apply NADH dehydrogenase subunit 6 to protein name (overwrite existing text) where object text equals 'NADH dehydrogenase subunit 6 gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'NADH dehydrogenase subunit 6 gene' to be replaced by 'NADH dehydrogenase 6 gene' and 'NADH dehydrogenase 6', allow '6' to be replaced by 'six'"
VAR
    new_value = "NADH dehydrogenase subunit 6"
    match1 = "NADH dehydrogenase subunit 6 gene"
    match2 = "gene"
    match3 = "6"
    match4 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4);
    SetStringQual (obj, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_327 "Apply actin to protein name (overwrite existing text) where object text equals 'Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "actin"
    match = "Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_328 "Apply alpha-actin to protein name (overwrite existing text) where object text equals 'alpha Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "alpha-actin"
    match = "alpha Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_329 "Apply actin to mRNA product (overwrite existing text) where object text equals 'Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "actin"
    existing_text = "eReplace"
    match = "Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_330 "Apply alpha-actin to mRNA product (overwrite existing text) where object text equals 'alpha Actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein'"
VAR
    new_value = "alpha-actin"
    existing_text = "eReplace"
    match = "alpha Actin gene"
    match1 = "gene"
    match2 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_331 "Apply hypothetical protein to protein name (overwrite existing text) where object text equals 'Hypothetical protein gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', and 'gene sequence', allow 'Hypothetical protein gene' to be replaced by 'Hypothetical'"
VAR
    new_value = "hypothetical protein"
    match = "Hypothetical protein gene"
    match1 = "gene"
    match2 = "optional-gene"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match, match1, match2);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_332 "Apply flagellin A to protein name (overwrite existing text) where protein name equals 'Flagellin A' (ignore spaces, ignore punctuation)"
VAR
    new_value = "flagellin A"
    match = "Flagellin A"
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_333 "Convert protein name to protein name (overwrite existing text) where protein name equals 'Inclusion body protein', allow 'Inclusion body protein' to be replaced by 'Reverse Transcriptase', 'Glucose-6-phosphate dehydrogenase', 'Phosphoribosylaminoimidazole carboxylase', 'Transkelotase', 'Envelope glycoprotein precursor', 'Fusion protein', 'Core protein', 'large Surface protein', 'Rhodopsin', 'Brain Derived Neurotrophic Factor', 'Oocyte maturation factor', 'Phosducin', 'Prolactin receptor', 'Spike protein', 'Histone protein', 'Nucleocapsid protein', 'Adenylate Kinase', 'Alcohol dehydrogenase', 'Glucosephosphate isomerase', 'Malate Dehydrogenase', 'Hemagglutinin', 'Large protein', 'Matrix protein', 'Phosphoprotein', 'Nucleolin', 'Cell Division Cycle 42', 'Heat Shock Protein 90', 'Growth Hormone', 'Elongation Factor 1 alpha', and 'Attachment protein'" 
VAR
    match = "Inclusion body protein"
    cap_change = "tolower"
    strip_name = false
    existing_text = "eReplace"
FOR EACH Protein
WHERE EQUALS("data.prot.name", match, "synonyms.txt", match)
DO
    src = Resolve("data.prot.name") WHERE EQUALS(src, match, "synonyms.txt", match);
    dest = Resolve("data.prot.name") WHERE EQUALS(dest, match, "synonyms.txt", match);
    ConvertStringQual (src, dest, cap_change, strip_name, existing_text);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_334 "Edit protein name replace 'Histone H3' (case insensitive) with 'histone H3' where protein name equals 'Histone H3' (ignore spaces, ignore punctuation)"
VAR
    find_text = "Histone H3"
    repl_text = "histone H3"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, find_text, case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (obj, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_335 "Edit protein name replace 'DNA Gyrase, subunit B' (case insensitive) with 'DNA gyrase subunit B' where protein name equals 'DNA Gyrase, subunit B' (ignore spaces, ignore punctuation)"
VAR
    find_text = "DNA Gyrase, subunit B"
    repl_text = "DNA gyrase subunit B"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, find_text, case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (obj, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_336 "Edit protein name replace 'RNA polymerase, beta subunit' (case insensitive) with 'RNA polymerase beta subunit' where protein name equals 'RNA polymerase, beta subunit' (ignore spaces, ignore punctuation)"
VAR
    find_text = "RNA polymerase, beta subunit"
    repl_text = "RNA polymerase beta subunit"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, find_text, case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (obj, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_337 "Edit protein name replace 'Recombinase A' (case insensitive) with 'recombinase A' where protein name equals 'Recombinase A' (ignore spaces, ignore punctuation)"
VAR
    find_text = "Recombinase A"
    repl_text = "recombinase A"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
WHERE EQUALS("data.prot.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    obj = Resolve("data.prot.name") WHERE EQUALS(obj, find_text, case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (obj, find_text, repl_text, location, case_sensitive);
    UpdatemRNAProduct();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_338 "Edit protein name replace 'Putative' (case insensitive) with 'putative'"
VAR
    find_text = "Putative"
    repl_text = "putative"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_339 "Apply putative to protein name (prefix separated by space) where object text ends with ', putative' (ignore spaces, ignore punctuation) and where object text does not start with 'putative' (ignore spaces), allow 'putative' to be replaced by 'hypothetical'"
VAR
    new_value = "putative"
    existing_text = "ePrepend"
    delimiter = " "
    match = ", putative"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation_constr1 = true
    ignore_punctuation_constr2 = false
FOR EACH Protein
DO
    o = Resolve("data.prot.name") 
    WHERE ENDS(o, match, case_sensitive, ignore_space, ignore_punctuation_constr1) AND
          NOT STARTS(o, "putative", case_sensitive, ignore_space, ignore_punctuation_constr2, "synonyms.txt", "putative");
    SetStringQual (o, new_value, existing_text, delimiter);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_340 "Edit protein name replace ', putative' (case insensitive) with '' where object text starts with 'putative' (ignore spaces, ignore punctuation)"
VAR
    find_text = ", putative"
    repl_text = " "
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE STARTS(o, "putative", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_341 "Edit protein name replace ' putative' (case insensitive) with '' where object text starts with 'putative' (ignore spaces, ignore punctuation)"
VAR
    find_text = " putative"
    repl_text = " "
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE STARTS(o, "putative", case_sensitive, ignore_space, ignore_punctuation);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_342 "Edit protein name replace 'Polymerase' (case insensitive) with 'polymerase' where protein name contains 'Polymerase sequence' (ignore spaces, ignore punctuation), allow 'Polymerase sequence' to be replaced by 'Polymerase', 'Polymerase gene', and 'Polymerase protein'"
VAR
    find_text = "Polymerase"
    repl_text = "polymerase"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    match = "Polymerase sequence"
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE CONTAINS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    EditStringQual (o, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_343 "Apply beta-tubulin to protein name (overwrite existing text) where object text equals 'beta-tubulin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-tubulin' to be replaced by 'beta tubulin'"
VAR
    new_value = "beta-tubulin"
    existing_text = "eReplace"
    match = "beta-tubulin gene"
    match1 = "gene"
    match2 = "beta-tubulin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_344 "Apply beta-tubulin to mRNA product (overwrite existing text) where object text equals 'beta-tubulin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-tubulin' to be replaced by 'beta tubulin'"
VAR
    new_value = "beta-tubulin"
    existing_text = "eReplace"
    match = "beta-tubulin gene"
    match1 = "gene"
    match2 = "beta-tubulin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_345 "Apply beta-actin to protein name (overwrite existing text) where object text equals 'beta-actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-actin' to be replaced by 'beta actin' and 'beta_actin'"
VAR
    new_value = "beta-actin"
    existing_text = "eReplace"
    match = "beta-actin gene"
    match1 = "gene"
    match2 = "beta-actin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_346 "Apply beta-actin to mRNA product (overwrite existing text) where object text equals 'beta-actin gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence', 'partial sequence', 'complete sequence', 'partial', 'complete', 'gene sequence', and 'protein', allow 'beta-actin' to be replaced by 'beta actin' and 'beta_actin'"
VAR
    new_value = "beta-actin"
    existing_text = "eReplace"
    match = "beta-actin gene"
    match1 = "gene"
    match2 = "beta-actin"
    match3 = "optional-gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH mRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_347 "Apply 16S-23S ribosomal RNA intergenic spacer to misc_RNA product (overwrite existing text) where misc_RNA product equals '16S/23S intergenic spacer' (ignore spaces, ignore punctuation), allow '16S/23S intergenic spacer' to be replaced by '16S-23S intergenic spacer', '16S/23S RNA intergenic spacer', '16S-23S RNA intergenic spacer', '16S/23S rRNA intergenic spacer', '16S-23S rRNA intergenic spacer', '16S/23S RRNA IGS', '16S-23S RRNA IGS', '16S/23S IGS', and '16S-23S IGS'"
VAR
    qual_name = "data.rna.ext.gen.product"
    new_value = "16S-23S ribosomal RNA intergenic spacer"
    existing_text = "eReplace"
    match = "16S/23S intergenic spacer"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS(qual_name, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual (qual_name, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_348 "Convert gene to rRNA where sequence type is nucleotide and gene is present and sequence has exactly 1 feature and where gene locus equals '16S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow '' to be replaced by 'partial sequence', 'complete sequence', 'complete', 'partial', 'gene', 'sequence', and 'region', allow 'RNA' to be replaced by 'DNA', allow 'ribosomal' to be replaced by 'r', allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow ' ribosomal RNA gene' to be replaced by 'rDNA', 'rRNA', 'RNA', 'RNA gene', and 'rRNA gene', remove original feature"
VAR
    match1 = "16S ribosomal RNA gene"
    match2 = "16S"
    match3 = "ribosomal RNA gene"
    match4 = "ribosomal"
    match5 = "RNA"
    match6 = "optional-gene"
    match7 = "optional-ribosomal RNA"
    match8 = "optional-RNA"
    match9 = "emptystring01"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na")
      AND FEATS_ON_SEQ("any") = 1
      AND EQUALS("data.gene.locus", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7, match8, match9)
DO
    ConvertFeature("rRNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_349 "Convert misc_feature to rRNA where misc_feature note equals '16S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow '' to be replaced by 'partial sequence', 'complete sequence', 'complete', 'partial', 'gene', 'sequence', and 'region', allow 'RNA' to be replaced by 'DNA', allow 'ribosomal' to be replaced by 'r', allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow ' ribosomal RNA gene' to be replaced by 'rDNA', 'rRNA', 'RNA', 'RNA gene', and 'rRNA gene', remove original feature"
VAR
    match1 = "16S ribosomal RNA gene"
    match2 = "RNA"
    match3 = "ribosomal"
    match4 = "16S"
    match5 = "ribosomal RNA gene"
    match6 = "optional-gene"
    match7 = "optional-ribosomal RNA"
    match8 = "optional-RNA"
    match9 = "emptystring01"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE EQUALS("comment", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3, match4, match5, match6, match7, match8, match9)
DO
    ConvertFeature("rRNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_350 "Convert misc_RNA to rRNA where misc_RNA product equals '16S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow '' to be replaced by 'partial sequence', 'complete sequence', 'complete', 'partial', 'gene', 'sequence', and 'region', allow 'RNA' to be replaced by 'DNA', allow 'ribosomal' to be replaced by 'r', allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow ' ribosomal RNA gene' to be replaced by 'rDNA', 'rRNA', 'RNA', 'RNA gene', and 'rRNA gene', remove original feature"
VAR
    match1 = "16S ribosomal RNA gene"
    match2 = "RNA"
    match3 = "ribosomal"
    match4 = "16S"
    match5 = "ribosomal RNA gene"
    match6 = "optional-gene"
    match7 = "optional-ribosomal RNA"
    match8 = "optional-RNA"
    match9 = "emptystring01"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS("data.rna.ext.gen.product", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3, match4, match5, match6, match7, match8, match9)
DO
    ConvertFeature("rRNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_351 "Convert gene to rRNA where sequence type is nucleotide and gene is present and sequence has exactly 1 feature and where gene product equals '16S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow '' to be replaced by 'partial sequence', 'complete sequence', 'complete', 'partial', 'gene', 'sequence', and 'region', allow 'RNA' to be replaced by 'DNA', allow 'ribosomal' to be replaced by 'r', allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow ' ribosomal RNA gene' to be replaced by 'rDNA', 'rRNA', 'RNA', 'RNA gene', and 'rRNA gene', remove original feature"
VAR
    match1 = "16S ribosomal RNA gene"
    match2 = "16S"
    match3 = "ribosomal RNA gene"
    match4 = "ribosomal"
    match5 = "RNA"
    match6 = "optional-gene"
    match7 = "optional-ribosomal RNA"
    match8 = "optional-RNA"
    match9 = "emptystring01"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na")
      AND FEATS_ON_SEQ("any") = 1
      AND EQUALS("qual", "product", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match3, match4, match5, match6, match7, match8, match9)
DO
    ConvertFeature("rRNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_352 "Convert gene to rRNA where sequence type is nucleotide and gene is present and sequence has exactly 1 feature and where gene product equals '12S' (ignore spaces, ignore punctuation), allow '12S' to be replaced by '5.8S', '16S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', remove original feature"
VAR
    match = "12S"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na")
      AND FEATS_ON_SEQ("any") = 1
      AND EQUALS("qual", "product", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    ConvertFeature("rRNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_353 "Remove rRNA product where rRNA product equals 'genomic DNA' (ignore spaces, ignore punctuation)"
VAR
    match = "genomic DNA"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_space, ignore_punct)
DO
    RemoveQual("data.rna.ext.name");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_354 "Convert gene to rRNA where sequence type is nucleotide and gene is present and sequence has less than 3 features and sequence is less than 1001 in length and where gene locus equals '16S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow '' to be replaced by 'partial sequence', 'complete sequence', 'complete', 'partial', 'gene', 'sequence', and 'region', allow 'RNA' to be replaced by 'DNA', allow 'ribosomal' to be replaced by 'r', allow '16' to be replaced by '5.8', '12', '18', '23', '26', '28', 'small subunit', and 'large subunit', allow ' ribosomal RNA gene' to be replaced by 'rDNA', 'rRNA', 'RNA', 'RNA gene', 'rRNA gene', 'rRNA partial gene', and 'rRNA partial sequence', allow '16S ribosomal RNA gene' to be replaced by 'gene 16S rRNA', remove original feature"
VAR
    match1 = "16S ribosomal RNA gene"
    match2 = "16S"
    match3 = "ribosomal RNA gene"
    match4 = "ribosomal"
    match5 = "RNA"
    match6 = "optional-gene"
    match7 = "optional-ribosomal RNA"
    match8 = "optional-RNA"
    match9 = "emptystring01"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na")
      AND FEATS_ON_SEQ("any") < 3
      AND SEQUENCE_FOR_SEQFEAT("inst.length") < 1001
      AND EQUALS("data.gene.locus", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7, match8, match9)
DO
    ConvertFeature("rRNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_355 "Convert gene to rRNA where sequence type is nucleotide and gene is present and sequence has less than 3 features and sequence is less than 1001 in length and where gene locus equals '16S' (ignore spaces, ignore punctuation), allow '16' to be replaced by '5.8', '12', '18', '23', '26', '28', 'small subunit', and 'large subunit', remove original feature"
VAR
    match = "16S"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH Gene
WHERE SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na")
      AND FEATS_ON_SEQ("any") < 3
      AND SEQUENCE_FOR_SEQFEAT("inst.length") < 1001
      AND EQUALS("data.gene.locus", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    ConvertFeature("rRNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_356 "Edit rRNA product replace 'S RIBOSOMAL RNA' (case insensitive) with 'S ribosomal RNA' where object text does not end with 'S ribosomal RNA' (case-sensitive)"
VAR
    find_text = "S RIBOSOMAL RNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
    case_sensitive_constr = true
FOR EACH rRNA
WHERE NOT ENDS("data.rna.ext.name", repl_text, case_sensitive_constr)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_357 "Edit rRNA product replace 'Sr RNA' (case insensitive) with 'S ribosomal RNA' where object text does not end with 'S ribosomal RNA' (case-sensitive)"
VAR
    find_text = "Sr RNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
    case_sensitive_constr = true
FOR EACH rRNA
WHERE NOT ENDS("data.rna.ext.name", repl_text, case_sensitive_constr)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_358 "Edit rRNA product replace 'S r RNA' (case insensitive) with 'S ribosomal RNA'"
VAR
    find_text = "S r RNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_359 "Edit rRNA product replace 'S r DNA' (case insensitive) with 'S ribosomal RNA'"
VAR
    find_text = "S r DNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_360 "Edit rRNA product replace 'Sr DNA' (case insensitive) with 'S ribosomal RNA'"
VAR
    find_text = "Sr DNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_361 "Edit rRNA product replace 'Large subunit ribosomal RNA' (case insensitive) with 'large subunit ribosomal RNA'"
VAR
    find_text = "Large subunit ribosomal RNA"
    repl_text = "large subunit ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_362 "Edit rRNA product replace 'Small subunit ribosomal RNA' (case insensitive) with 'small subunit ribosomal RNA'"
VAR
    find_text = "Small subunit ribosomal RNA"
    repl_text = "small subunit ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_363 "Edit rRNA product replace 'ribosomal RNA gene' (case insensitive) with 'ribosomal RNA' where object text contains 'ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'ribosomal RNA gene' to be replaced by 'ribosomal RNA gene sequence'"
VAR
    find_text = "ribosomal RNA gene"
    repl_text = "ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE CONTAINS("data.rna.ext.name", find_text, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", find_text)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_364 "Apply large subunit ribosomal RNA to rRNA product (overwrite existing text) where object text equals 'LSU ribosomal RNA' (ignore spaces, ignore punctuation), allow 'LSU ribosomal RNA' to be replaced by 'large subunit (LSU) ribosomal RNA'"
VAR
    new_value = "large subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "LSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_365 "Edit rRNA product replace 'rRNA gene' (case insensitive) with 'ribosomal RNA'"
VAR
    find_text = "rRNA gene"
    repl_text = "ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_366 "Edit rRNA product replace '-rRNA' (case insensitive) with ' ribosomal RNA' where rRNA product does not equal 's-rRNA' (ignore spaces, ignore punctuation) and where rRNA product does not equal 'l-rRNA' (ignore spaces, ignore punctuation)"
VAR
    find_text = "-rRNA"
    repl_text = " ribosomal RNA"
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE NOT EQUALS("data.rna.ext.name", "s-rRNA", case_sensitive, ignore_space, ignore_punctuation) AND
      NOT EQUALS("data.rna.ext.name", "l-rRNA", case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_367 "Edit rRNA product replace ' S RIBOSOMAL RNA' (case insensitive) with 'S ribosomal RNA'"
VAR
    find_text = " S RIBOSOMAL RNA"
    repl_text = "S ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_368 "Edit rRNA product replace 'Subunit Ribosomal RNA' (case insensitive) with 'subunit ribosomal RNA' where object text does not end with 'subunit ribosomal RNA' (case-sensitive)"
VAR
    find_text = "Subunit Ribosomal RNA"
    repl_text = "subunit ribosomal RNA"
    location = "anywhere"
    case_sensitive_edit = false
    case_sensitive_constr = true
FOR EACH rRNA
WHERE NOT ENDS("data.rna.ext.name", repl_text, case_sensitive_constr)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive_edit);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_369 "Edit rRNA product replace 'RDNA Gene sequence' (case insensitive) with 'ribosomal RNA'"
VAR
    find_text = "RDNA Gene sequence"
    repl_text = "ribosomal RNA"
    location = "anywhere"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_370 "Apply small subunit ribosomal RNA to rRNA product (overwrite existing text) where object text equals 'SSU ribosomal RNA' (ignore spaces, ignore punctuation), allow 'SSU ribosomal RNA' to be replaced by 'small subunit (SSU) ribosomal RNA'"
VAR
    new_value = "small subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "SSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_371 "Edit rRNA product replace 'S SSU ribosomal RNA' (case insensitive) with 'S small subunit ribosomal RNA'"
VAR
    find_text = "S SSU ribosomal RNA"
    repl_text = "S small subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_372 "Edit rRNA product replace 'SSU' (case insensitive) with 'small subunit ribosomal RNA' where object text equals 'SSU' (ignore spaces, ignore punctuation)"
VAR
    find_text = "SSU"
    repl_text = "small subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_373 "Edit rRNA product replace 'LSU' (case insensitive) with 'large subunit ribosomal RNA' where object text equals 'LSU' (ignore spaces, ignore punctuation)"
VAR
    find_text = "LSU"
    repl_text = "large subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", find_text, case_sensitive, ignore_space, ignore_punctuation)
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_374 "Edit rRNA product replace 'S LSU ribosomal RNA' (case insensitive) with 'S large subunit ribosomal RNA'"
VAR
    find_text = "S LSU ribosomal RNA"
    repl_text = "S large subunit ribosomal RNA"
    location = "at the end"
    case_sensitive = false
FOR EACH rRNA
DO
    EditStringQual ("data.rna.ext.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_375 "Apply 5.8S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '5.8S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '5.8S ribosomal RNA gene' to be replaced by '5.8SrDNA', '5.8SrRNA', '5.8SrDNA gene', '5.8SrRNA gene', '5.8SrDNA gene sequence', '5.8SrRNA gene sequence', '5.8SrDNA gene sequence region', '5.8SrRNA gene sequence region', '5.8S rDNA gene', '5.8S rRNA gene', and '5.8S gene', allow '5.8S ribosomal RNA gene' to be replaced by 'gene 5.8S rRNA' and 'gene 5.8S ribosomal RNA'"
VAR
    new_value = "5.8S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "5.8S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_376 "Apply 12S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '12S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '12S ribosomal RNA gene' to be replaced by '12SrDNA', '12SrRNA', '12SrDNA gene', '12SrRNA gene', '12SrDNA gene sequence', '12SrRNA gene sequence', '12SrDNA gene sequence region', '12SrRNA gene sequence region', '12S rDNA gene', and '12S rRNA gene', allow '12S ribosomal RNA gene' to be replaced by 'gene 12S rRNA', 'gene 12S ribosomal RNA', and '12S gene'"
VAR
    new_value = "12S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "12S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_377 "Apply 16S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '16S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '16S ribosomal RNA gene' to be replaced by '16SrDNA', '16SrRNA', '16SrDNA gene', '16SrRNA gene', '16SrDNA gene sequence', '16SrRNA gene sequence', '16SrDNA gene sequence region', '16SrRNA gene sequence region', '16S rDNA gene', and '16S rRNA gene', allow '16S ribosomal RNA gene' to be replaced by 'gene 16S rRNA', 'gene 16S ribosomal RNA', and '16S gene'"
VAR
    new_value = "16S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "16S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_378 "Apply 18S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '18S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '18S ribosomal RNA gene' to be replaced by '18SrDNA', '18SrRNA', '18SrDNA gene', '18SrRNA gene', '18SrDNA gene sequence', '18SrRNA gene sequence', '18SrDNA gene sequence region', '18SrRNA gene sequence region', '18S rDNA gene', and '18S rRNA gene', allow '18S ribosomal RNA gene' to be replaced by 'gene 18S rRNA', 'gene 18S ribosomal RNA', and '18S gene'"
VAR
    new_value = "18S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "18S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_379 "Apply 23S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '23S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '23S ribosomal RNA gene' to be replaced by '23SrDNA', '23SrRNA', '23SrDNA gene', '23SrRNA gene', '23SrDNA gene sequence', '23SrRNA gene sequence', '23SrDNA gene sequence region', '23SrRNA gene sequence region', '23S rDNA gene', and '23S rRNA gene', allow '23S ribosomal RNA gene' to be replaced by 'gene 23S rRNA', 'gene 23S ribosomal RNA', and '23S gene'"
VAR
    new_value = "23S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "23S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_380 "Apply 26S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '26S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '26S ribosomal RNA gene' to be replaced by '26SrDNA', '26SrRNA', '26SrDNA gene', '26SrRNA gene', '26SrDNA gene sequence', '26SrRNA gene sequence', '26SrDNA gene sequence region', '26SrRNA gene sequence region', '26S rDNA gene', and '26S rRNA gene', allow '26S ribosomal RNA gene' to be replaced by 'gene 26S rRNA', 'gene 26S ribosomal RNA', and '26S gene'"
VAR
    new_value = "26S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "26S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_381 "Apply 28S ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals '28S ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow '28S ribosomal RNA gene' to be replaced by '28SrDNA', '28SrRNA', '28SrDNA gene', '28SrRNA gene', '28SrDNA gene sequence', '28SrRNA gene sequence', '28SrDNA gene sequence region', '28SrRNA gene sequence region', '28S rDNA gene', and '28S rRNA gene', allow '28S ribosomal RNA gene' to be replaced by 'gene 28S rRNA', 'gene 28S ribosomal RNA', and '28S gene'"
VAR
    new_value = "28S ribosomal RNA"
    existing_text = "eReplace"
    match1 = "28S ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_382 "Apply small subunit ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals 'small subunit ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow 'small subunit ribosomal RNA gene' to be replaced by 'SSUrDNA', 'SSUrRNA', 'SSUrDNA gene', 'SSUrRNA gene', 'SSUrDNA gene sequence', 'SSUrRNA gene sequence', 'SSUrDNA gene sequence region', 'SSUrRNA gene sequence region', 'SSU rDNA gene', and 'SSU rRNA gene', allow 'SSU ribosomal RNA gene' to be replaced by 'gene SSU rRNA', 'gene SSU ribosomal RNA', and 'SSU gene'"
VAR
    new_value = "small subunit ribosomal RNA"
    existing_text = "eReplace"
    match1 = "small subunit ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_383 "Apply large subunit ribosomal RNA to rRNA product (overwrite existing text) where rRNA product equals 'large subunit ribosomal RNA gene' (ignore spaces, ignore punctuation), allow 'RNA' to be replaced by 'DNA', allow 'ribosomal RNA gene' to be replaced by 'ribosomal DNA', 'rDNA', 'RDNA', 'RDAN', 'RNA', 'DNA', 'ribosomal', and 'RNA gene', allow 'gene' to be replaced by 'sequence', 'region', 'gene sequence', 'sequence region', 'gene sequence region', 'partial sequence', 'partial gene sequence', and 'partial', allow 'large subunit ribosomal RNA gene' to be replaced by 'LSUrDNA', 'LSUrRNA', 'LSUrDNA gene', 'LSUrRNA gene', 'LSUrDNA gene sequence', 'LSUrRNA gene sequence', 'LSUrDNA gene sequence region', 'LSUrRNA gene sequence region', 'LSU rDNA gene', and 'LSU rRNA gene', allow 'LSU ribosomal RNA gene' to be replaced by 'gene LSU rRNA', 'gene LSU ribosomal RNA', and 'LSU gene'"
VAR
    new_value = "large subunit ribosomal RNA"
    existing_text = "eReplace"
    match1 = "large subunit ribosomal RNA gene"
    match2 = "ribosomal RNA gene"
    match3 = "RNA"
    match4 = "gene"
    match5 = "optional-ribosomal RNA gene"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_384 "Apply 18S small subunit ribosomal RNA to rRNA product (overwrite existing text) where object text contains '18S SSU ribosomal RNA' (ignore spaces, ignore punctuation), allow '18S SSU ribosomal RNA' to be replaced by '18S small subunit SSU ribosomal RNA', '18S small subunit (SSU) ribosomal RNA', and 'small subunit (SSU) 18S ribosomal RNA'"
VAR
    new_value = "18S small subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "18S SSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE CONTAINS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_385 "Apply 28S large subunit ribosomal RNA to rRNA product (overwrite existing text) where object text contains '28S LSU ribosomal RNA' (ignore spaces, ignore punctuation), allow '28S LSU ribosomal RNA' to be replaced by '28S large subunit LSU ribosomal RNA', '28S large subunit (LSU) ribosomal RNA', and 'large subunit (LSU) 28S ribosomal RNA'"
VAR
    new_value = "28S large subunit ribosomal RNA"
    existing_text = "eReplace"
    match = "28S LSU ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("data.rna.ext.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual ("data.rna.ext.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_386 "Edit Any RNA product replace 'spaser' (case insensitive) with 'spacer'"
VAR
    find_text = "spaser"
    repl_text = "spacer"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    objA = Resolve("data.rna.ext.name");
    EditStringQual (objA, find_text, repl_text, location, case_sensitive);
    objB = Resolve("data.rna.ext.gen.product");
    EditStringQual(objB, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_387 "Edit Any RNA product replace 'intrenal' (case insensitive) with 'internal'"
VAR
    find_text = "intrenal"
    repl_text = "internal"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    objA = Resolve("data.rna.ext.name");
    EditStringQual (objA, find_text, repl_text, location, case_sensitive);
    objB = Resolve("data.rna.ext.gen.product");
    EditStringQual(objB, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_388 "Edit Any RNA product replace 'trascribed' (case insensitive) with 'transcribed'"
VAR
    find_text = "trascribed"
    repl_text = "transcribed"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    objA = Resolve("data.rna.ext.name");
    EditStringQual (objA, find_text, repl_text, location, case_sensitive);
    objB = Resolve("data.rna.ext.gen.product");
    EditStringQual(objB, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_389 "Edit Any RNA comment replace 'spaser' (case insensitive) with 'spacer'"
VAR
    find_text = "spaser"
    repl_text = "spacer"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_390 "Edit Any RNA comment replace 'intrenal' (case insensitive) with 'internal'"
VAR
    find_text = "intrenal"
    repl_text = "internal"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_391 "Edit Any RNA comment replace 'trascribed' (case insensitive) with 'transcribed'"
VAR
    find_text = "trascribed"
    repl_text = "transcribed"
    location = "anywhere"
    case_sensitive = false
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "rna"
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_392 "Convert rRNA to misc_RNA where object text contains 'internal transcribed' (ignore spaces, ignore punctuation) and where object text contains 'ribosomal RNA' (ignore spaces, ignore punctuation) and where object text contains 'contains' (ignore spaces, ignore punctuation), remove original feature"
VAR
    product = "data.rna.ext.name"
    match1 = "internal transcribed"
    match2 = "ribosomal RNA"
    match3 = "contains"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE CONTAINS(product, match1, case_sensitive, ignore_spaces, ignore_punctuation)
      AND CONTAINS(product, match2, case_sensitive, ignore_spaces, ignore_punctuation)
      AND CONTAINS(product, match3, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_393 "Parse entire text from rRNA comment to product(ignore new text when existing text is present) where rRNA comment equals '16S ribosomal RNA' (ignore spaces, ignore punctuation), allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit'"
VAR
    cap_change = "none"
    existing_text = "eReplace"
    match = "16S ribosomal RNA"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE NOT ISPRESENT("data.rna.ext.name") AND 
      EQUALS("comment", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", "16S")
DO
    ParseStringQual("comment", "data.rna.ext.name", cap_change, existing_text);
    RemoveQual("comment");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_394 "Convert misc_RNA product to comment (ignore new text when existing text is present) where object text contains 'internal transcribed' (ignore spaces, ignore punctuation) and where object text contains 'ribosomal' (ignore spaces, ignore punctuation) and where object text contains 'contains' (ignore spaces, ignore punctuation)"
VAR
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE NOT ISPRESENT("comment") AND
      CONTAINS(src_field, "internal transcribed", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS(src_field, "ribosomal", case_sensitive, ignore_space, ignore_punctuation) AND
      CONTAINS(src_field, "contains", case_sensitive, ignore_space, ignore_punctuation)
DO
    ConvertStringQual(src_field, "comment",  cap_change, strip_name, existing_text);
    RemoveQual(src_field);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_395 "Convert misc_RNA product to comment (overwrite existing text) where misc_RNA product equals '18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence' (case-sensitive)"
VAR
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    match = "18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence"
    case_sensitive = true
FOR EACH MiscRNA
WHERE EQUALS(src_field, match, case_sensitive)
DO
    ConvertStringQual(src_field, "comment",  cap_change, strip_name, existing_text);
    RemoveQual(src_field);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_396 "Convert gene to misc_RNA where object text contains '18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence' (case-sensitive) and where sequence type is nucleotide and sequence has exactly 1 feature, remove original feature"
VAR
    match = "18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence"
    case_sensitive = true
FOR EACH Gene
WHERE CONTAINS("data.gene.locus", match, case_sensitive)
      AND SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na")
      AND FEATS_ON_SEQ("any") = 1
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_397 "Remove gene locus where gene locus equals 'genomic DNA' (case-sensitive) and where misc_RNA comment equals '18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence' (case-sensitive)"
VAR
    field = "data.gene.locus"
    match1 = "genomic DNA"
    case_sensitive = true
    match2 = "18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence"
FOR EACH Gene
WHERE EQUALS(field, match1, case_sensitive) 
      AND EQUALS(RELATED_FEATURE("misc_RNA", "comment"), match2, case_sensitive)
DO
    RemoveQual(field);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_398 "Edit misc_RNA comment replace '18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence' (case insensitive) with 'contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA'"
VAR
    find_text = "18S ribosomal RNA gene, partial sequence; internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence"
    repl_text = "contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA"
    location = "at the beginning"
    case_sensitive = false
FOR EACH MiscRNA
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_399 "Convert misc_RNA note to misc_RNA product (append separated by semicolon) where object text equals 'internal transcribed spacer 1, ITS1 sequence' (case-sensitive), allow 'internal transcribed spacer 1, ITS1 sequence' to be replaced by 'internal transcribed spacer 1, ITS1', 'internal transcribed spacer 1', 'internal transcribed spacer 1, ITS', 'internal transcribed spacer 1, ITS1 sequence', 'internal transcribed spacer 1, ITS1 region', 'ITS1', 'internal transcribed spacer 1, sequence', and 'internal transcribed spacer 1, region'"
VAR
    src = "comment"
    dest = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eAppend"
    delimiter = ";"
    match = "internal transcribed spacer 1, ITS1 sequence"
    case_sensitive = true
FOR EACH MiscRNA
WHERE EQUALS(src, match, case_sensitive, "synonyms.txt", match)
DO
    ConvertStringQual(src, dest, cap_change, strip_name, existing_text, delimiter);
    RemoveQual(src);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_400 "Convert misc_RNA note to misc_RNA product (append separated by semicolon) where object text equals 'internal transcribed spacer 2, ITS2 sequence' (case-sensitive), allow 'internal transcribed spacer 2, ITS2 sequence' to be replaced by 'internal transcribed spacer 2, ITS2', 'internal transcribed spacer 2', 'internal transcribed spacer 2, ITS', 'internal transcribed spacer 2, ITS2 sequence', 'internal transcribed spacer 2, ITS2 region', 'ITS2', 'internal transcribed spacer 2, sequence', and 'internal transcribed spacer 2, region'"
VAR
    src = "comment"
    dest = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eAppend"
    delimiter = ";"
    match = "internal transcribed spacer 2, ITS2 sequence"
    case_sensitive = true
FOR EACH MiscRNA
WHERE EQUALS(src, match, case_sensitive, "synonyms.txt", match)
DO
    ConvertStringQual(src, dest, cap_change, strip_name, existing_text, delimiter);
    RemoveQual(src);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_401 "Convert rRNA to misc_RNA where rRNA product equals 'Internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'ITS1' to be replaced by 'ITS', allow 'sequence' to be replaced by 'region', 'gene', and 'RNA', allow 'Internal transcribed spacer 1, ITS1 sequence' to be replaced by 'ITS1', 'ITS2', 'internal transcribed spacer 1', 'internal transcribed spacer 2', 'internal transcribed spacer 1 (ITS)', 'internal transcribed spacer 2 (ITS)', 'internal transcribed spacer 1 (ITS1)', 'internal transcribed spacer 2 (ITS2)', 'internal transcribed spacer 1, (ITS1)', 'internal transcribed spacer 2, (ITS2)', 'internal transcribed spacer 1, ITS1', and 'internal transcribed spacer 2, ITS2', remove original feature"
VAR
    product = "data.rna.ext.name"
    match1 = "internal transcribed spacer 1, ITS1 sequence"
    match2 = "internal transcribed spacer 2, ITS2 sequence"
    match3 = "ITS1"
    match4 = "ITS2"
    match5 = "internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 1"
    match7 = "optional-internal transcribed spacer 2"
    match8 = "sequence"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS(product, match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match3, match5, match7, match8) OR
      EQUALS(product, match2, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match4, match6, match7, match8)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_402 "Convert rRNA to misc_RNA where rRNA note equals 'Internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'ITS1' to be replaced by 'ITS', allow 'sequence' to be replaced by 'region', 'gene', and 'RNA', allow 'Internal transcribed spacer 1, ITS1 sequence' to be replaced by 'ITS1', 'ITS2', 'internal transcribed spacer 1', 'internal transcribed spacer 2', 'internal transcribed spacer 1 (ITS)', 'internal transcribed spacer 2 (ITS)', 'internal transcribed spacer 1 (ITS1)', 'internal transcribed spacer 2 (ITS2)', 'Internal transcribed spacer 1, ITS1', and 'Internal transcribed spacer 2, ITS2', remove original feature"
VAR
    match1 = "internal transcribed spacer 1, ITS1 sequence"
    match2 = "internal transcribed spacer 2, ITS2 sequence"
    match3 = "ITS1"
    match4 = "ITS2"
    match5 = "internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 1"
    match7 = "optional-internal transcribed spacer 2"
    match8 = "sequence"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE EQUALS("comment", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match3, match5, match7, match8) OR
      EQUALS("comment", match2, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match2, match4, match6, match7, match8)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_403 "Convert region to misc_RNA where region note equals 'Region: Internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'ITS1' to be replaced by 'ITS', allow 'sequence' to be replaced by 'region', 'gene', and 'RNA', remove original feature"
VAR
    match1 = "Region: Internal transcribed spacer 1, ITS1 sequence"
    match2 = "sequence"
    match3 = "ITS1"
    match4 = "internal transcribed spacer 1"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "region" 
      AND EQUALS("comment", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_404 "Convert region to misc_RNA where region name equals 'Internal transcribed spacer 1, ITS1' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow ', ITS1' to be replaced by ' (ITS1)' and ' (ITS)', allow 'Internal transcribed spacer 1, ITS1' to be replaced by 'Internal transcribed spacer 1' and 'Internal transcribed spacer 2', allow '' to be replaced by 'sequence', 'gene', 'partial', and 'complete', remove original feature"
VAR
    match1 = "Internal transcribed spacer 1, ITS1"
    match2 = ", ITS1"
    match3 = "internal transcribed spacer 1"
    match4 = "optional-Region"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-, ITS1"
    match8 = "emptystring02"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH SeqFeat
WHERE CHOICETYPE("data") = "region" 
      AND EQUALS("data.region", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match8)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_405 "Convert misc_feature to misc_RNA where misc_feature note equals 'Region: Internal transcribed spacer 1, ITS1' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'Region: Internal transcribed spacer 1, ITS1' to be replaced by 'Region: Internal transcribed spacer 1', allow ', ITS1' to be replaced by ', (ITS)', ', (ITS1)', and ' (ITS1)', remove original feature"
VAR
    match1 = "Region: Internal transcribed spacer 1, ITS1"
    match2 = ", ITS1"
    match3 = "internal transcribed spacer 1"
    match4 = "optional-Region"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-, ITS1"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE EQUALS("comment", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_406 "Convert misc_feature to misc_RNA where misc_feature product equals 'Region: Internal transcribed spacer 1, ITS1' (ignore spaces, ignore punctuation), allow '1' to be replaced by '2', allow 'Region: Internal transcribed spacer 1, ITS1' to be replaced by 'Region: Internal transcribed spacer 1', allow ', ITS1' to be replaced by ', (ITS)', ', (ITS1)', and ' (ITS1)', remove original feature"
VAR
    match1 = "Region: Internal transcribed spacer 1, ITS1"
    match2 = ", ITS1"
    match3 = "internal transcribed spacer 1"
    match4 = "optional-Region"
    match5 = "optional-internal transcribed spacer 1"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-, ITS1"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE EQUALS("qual", "product", match1, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_407 "Convert misc_feature to misc_RNA where misc_feature note contains 'internal transcribed spacer' (ignore spaces, ignore punctuation) and where object text contains 'RNA' (case-sensitive), remove original feature"
VAR
    match1 = "internal transcribed spacer"
    match2 = "RNA"
    case_sensitive1 = false
    ignore_spaces = true
    ignore_punctuation = true
    case_sensitive2 = true
FOR EACH MiscFeat
WHERE CONTAINS("comment", match1, case_sensitive1, ignore_spaces, ignore_punctuation)
      AND CONTAINS("comment", match2, case_sensitive2)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_408 "Convert misc_RNA product to misc_RNA note (overwrite existing text) where object text contains 'internal transcribed spacer' (case-sensitive) and where object text contains 'RNA' (case-sensitive)"
VAR
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    case_sensitive = true
FOR EACH MiscRNA
WHERE CONTAINS(src_field, "internal transcribed spacer", case_sensitive) AND
      CONTAINS(src_field, "RNA", case_sensitive)
DO
    ConvertStringQual(src_field, "comment",  cap_change, strip_name, existing_text);
    RemoveQual(src_field);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_409 "Parse text starting with 'ITS1', up to ';' from misc_RNA product to comment(append separated by semicolon) where misc_RNA product equals 'ITS1; internal transcribed spacer 1' (ignore spaces, ignore punctuation)"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
    rmv_from_parsed = true
    rmv_left = false
    rmv_right = true
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    existing_text = "eAppend"
    delimiter = ";"
VAR
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH MiscRNA
WHERE EQUALS(src_field, "ITS1; internal transcribed spacer 1", case_sensitive, ignore_space, ignore_punct)
DO
    text = ParsedText(src_field, "ITS1", include_left, ";", include_right, case_sens_parse, whole_word, rmv_from_parsed, rmv_left, rmv_right);
    AddParsedText(text, "comment", cap_change, existing_text, delimiter);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_410 "Parse text starting with 'ITS2', up to ';' from misc_RNA product to comment(append separated by semicolon) where misc_RNA product equals 'ITS2; internal transcribed spacer 2' (ignore spaces, ignore punctuation)"
VAR
    include_left = true
    include_right = false
    case_sens_parse = true
    whole_word = false
    rmv_from_parsed = true
    rmv_left = false
    rmv_right = true
    src_field = "data.rna.ext.gen.product"
    cap_change = "none"
    existing_text = "eAppend"
    delimiter = ";"
VAR
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH MiscRNA
WHERE EQUALS(src_field, "ITS2; internal transcribed spacer 2", case_sensitive, ignore_space, ignore_punct)
DO
    text = ParsedText(src_field, "ITS2", include_left, ";", include_right, case_sens_parse, whole_word, rmv_from_parsed, rmv_left, rmv_right);
    AddParsedText(text, "comment", cap_change, existing_text, delimiter);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_411 "Apply internal transcribed spacer 1 to misc_RNA product (overwrite existing text) where misc_RNA product equals 'internal transcribed spacer 1, ITS1 sequence' (ignore spaces, ignore punctuation), allow 'internal' to be replaced by 'interal', allow '' to be replaced by 'sequence', 'gene', and 'region', allow ', ITS1' to be replaced by ' (ITS)', ' (ITS1)', ', (ITS1)', and 'ITS', allow 'sequence' to be replaced by 'region' and 'gene', allow 'internal transcribed spacer 1, ITS1 sequence' to be replaced by 'internal transcribed spacer-1'"
VAR
    field_name = "data.rna.ext.gen.product"
    new_value = "internal transcribed spacer 1"
    existing_text = "eReplace"
    match1 = "internal transcribed spacer 1, ITS1 sequence"
    match2 = "internal"
    match3 = "sequence"
    match4 = ", ITS1"
    match5 = "optional-, ITS1"
    match6 = "optional-internal transcribed spacer 1"
    match7 = "optional-sequence"
    match8 = "emptystring02"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS(field_name, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7, match8)
DO
    SetStringQual (field_name, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_412 "Apply internal transcribed spacer 2 to misc_RNA product (overwrite existing text) where misc_RNA product equals 'internal transcribed spacer 2, ITS2 sequence' (ignore spaces, ignore punctuation), allow 'internal' to be replaced by 'interal', allow '' to be replaced by 'sequence', 'gene', and 'region', allow ', ITS2' to be replaced by ' (ITS)', ' (ITS2)', ', (ITS2)', and 'ITS', allow 'sequence' to be replaced by 'region' and 'gene', allow 'internal transcribed spacer 2, ITS2 sequence' to be replaced by 'internal transcribed spacer-2'"
VAR
    field_name = "data.rna.ext.gen.product"
    new_value = "internal transcribed spacer 2"
    existing_text = "eReplace"
    match1 = "internal transcribed spacer 2, ITS2 sequence"
    match2 = "internal"
    match3 = "sequence"
    match4 = ", ITS2"
    match5 = "optional-, ITS2"
    match6 = "optional-internal transcribed spacer 2"
    match7 = "optional-sequence"
    match8 = "emptystring02"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS(field_name, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1, match2, match3, match4, match5, match6, match7, match8)
DO
    SetStringQual (field_name, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_413 "Apply molecule genomic (overwrite existing text) where sequence type is Ribosomal RNA and where rRNA product equals '5.8S ribosomal RNA' (case-sensitive), allow '5.8S' to be replaced by '12S', '16S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal'"
VAR
    match1 = "5.8S ribosomal RNA"
    case_sensitive = true
    match2 = "5.8S"
    match3 = "ribosomal"
FOR EACH MolInfo
WHERE biomol = "rRNA" AND
   EQUALS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    SetQual("biomol", "genomic");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_414 "Apply molecule genomic (overwrite existing text) where sequence type is mRNA [cDNA] and where rRNA product equals '5.8S ribosomal RNA' (case-sensitive), allow '5.8S' to be replaced by '12S', '16S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal'"
VAR
    match1 = "5.8S ribosomal RNA"
    case_sensitive = true
    match2 = "5.8S"
    match3 = "ribosomal"
FOR EACH MolInfo
WHERE biomol = "mRNA" AND
   EQUALS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    SetQual("biomol", "genomic");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_415 "Apply class DNA (overwrite existing text) where sequence type is Genomic RNA and where rRNA product equals '5.8S ribosomal RNA' (case-sensitive), allow '5.8S' to be replaced by '12S', '16S', '23S', '26S', '28S', 'small subunit', 'large subunit', and '18S', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal'"
VAR
    match1 = "5.8S ribosomal RNA"
    case_sensitive = true
    match2 = "5.8S"
    match3 = "ribosomal"
FOR EACH SeqNa
WHERE inst.mol = "rna" AND descr..molinfo.biomol = "genomic" AND
   EQUALS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    SetQual("inst.mol", "dna");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_416 "Apply class DNA (overwrite existing text) where sequence type is mRNA [cDNA] and where rRNA product equals '5.8S ribosomal RNA' (case-sensitive), allow '5.8S' to be replaced by '12S', '16S', '23S', '26S', '28S', 'small subunit', 'large subunit', and '18S', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal'"
VAR
    match1 = "5.8S ribosomal RNA"
    case_sensitive = true
    match2 = "5.8S"
    match3 = "ribosomal"
FOR EACH SeqNa
WHERE descr..molinfo.biomol = "mRNA" AND
   EQUALS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    SetQual("inst.mol", "dna");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_417 "Apply strand (overwrite existing text) where sequence type is DNA and where rRNA product equals '5.8S ribosomal RNA' (case-sensitive), allow '5.8S' to be replaced by '12S', '16S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal' and where strand is not double"
VAR
    match1 = "5.8S ribosomal RNA"
    case_sensitive = true
    match2 = "5.8S"
    match3 = "ribosomal"
FOR EACH SeqNa
WHERE NOT inst.strand = "ds" AND inst.mol = "dna" AND
   EQUALS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    RemoveQual("inst.strand");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_418 "Apply molecule genomic (overwrite existing text) where sequence type is Ribosomal RNA and where misc_RNA product equals 'internal transcribed spacer 1' (case-sensitive), allow '1' to be replaced by '2'"
VAR
    match = "internal transcribed spacer 1"
    case_sensitive = true
FOR EACH MolInfo
WHERE biomol = "rRNA" AND EQUALS(FEATURES("misc_RNA", "data.rna.ext.gen.product"), match, case_sensitive, "synonyms.txt", match)
DO
    SetQual("biomol", "genomic");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_419 "Apply class DNA (overwrite existing text) where sequence type is Genomic RNA and where misc_RNA product equals 'internal transcribed spacer 1' (case-sensitive), allow '1' to be replaced by '2'"
VAR
    match = "internal transcribed spacer 1"
    case_sensitive = true
FOR EACH SeqNa
WHERE inst.mol = "rna" AND descr..molinfo.biomol = "genomic" AND
    EQUALS(FEATURES("misc_RNA", "data.rna.ext.gen.product"), match, case_sensitive, "synonyms.txt", match)
DO
    SetQual("inst.mol", "dna");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_420 "Apply strand (overwrite existing text) where sequence type is DNA and where misc_RNA product equals 'internal transcribed spacer 1' (case-sensitive), allow '1' to be replaced by '2' and where strand is not double"
VAR
    match = "internal transcribed spacer 1"
    case_sensitive = true
FOR EACH SeqNa
WHERE NOT inst.strand = "ds" AND inst.mol = "dna" AND
    EQUALS(FEATURES("misc_RNA", "data.rna.ext.gen.product"), match, case_sensitive, "synonyms.txt", match)
DO
    RemoveQual("inst.strand");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_421 "Apply molecule genomic (overwrite existing text) where sequence type is Ribosomal RNA and where misc_RNA comment equals 'contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA' (case-sensitive)"
VAR
    match = "contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA"
    case_sensitive = true
FOR EACH MolInfo
WHERE biomol = "rRNA" AND
   EQUALS(FEATURES("misc_RNA", "comment"), match, case_sensitive)
DO
    SetQual("biomol", "genomic");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_422 "Apply class DNA (overwrite existing text) where sequence type is Genomic RNA and where misc_RNA comment equals 'contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA' (case-sensitive)"
VAR
    match = "contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA"
    case_sensitive = true
FOR EACH SeqNa
WHERE inst.mol = "rna" AND descr..molinfo.biomol = "genomic" AND
   EQUALS(FEATURES("misc_RNA", "comment"), match, case_sensitive)
DO
    SetQual("inst.mol", "dna");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_423 "Apply strand   (overwrite existing text) where sequence type is DNA and where misc_RNA comment equals 'contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA' (case-sensitive) and where strand is not double"
VAR
    match = "contains 18S ribosomal RNA, internal transcribed spacer 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA"
    case_sensitive = true
FOR EACH SeqNa
WHERE NOT inst.strand = "ds" AND inst.mol = "dna" AND
   EQUALS(FEATURES("misc_RNA", "comment"), match, case_sensitive)
DO
    RemoveQual("inst.strand");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_424 "Remove location extrachromosomal where rRNA product contains '16S ribosomal RNA' (case-sensitive), allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal'"
VAR
    match1 = "16S ribosomal RNA"
    case_sensitive = true
    match2 = "16S"
    match3 = "ribosomal"
FOR EACH BioSource
WHERE genome = "extrachrom" AND
   CONTAINS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    RemoveQual("genome");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_425 "Remove All Notes where rRNA product contains '16S ribosomal RNA' (case-sensitive), allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal' and where object text equals 'extrachromosomal' (case-sensitive)"
VAR
    match1 = "16S ribosomal RNA"
    case_sensitive = true
    match2 = "16S"
    match3 = "ribosomal"
    match4 = "extrachromosomal"
FOR EACH BioSource
WHERE CONTAINS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    orgmod_obj = Resolve("org.orgname.mod") 
        WHERE orgmod_obj.subtype = "other" AND EQUALS("orgmod_obj.subname", match4, case_sensitive);
    RemoveModifier(orgmod_obj);
    subsrc_obj = Resolve("subtype") 
        WHERE subsrc_obj.subtype = "other" AND EQUALS("subsrc_obj.name", match4, case_sensitive); 
    RemoveModifier(subsrc_obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_426 "Change to molecule genomic and class DNA where molecule other-genetic and where rRNA product equals '16S ribosomal RNA' (case-sensitive), allow '16S' to be replaced by '5.8S', '12S', '18S', '23S', '26S', '28S', 'small subunit', and 'large subunit', allow 'ribosomal' to be replaced by 'small subunit ribosomal' and 'large subunit ribosomal'"
VAR
    match1 = "16S ribosomal RNA"
    case_sensitive = true
    match2 = "16S"
    match3 = "ribosomal"
FOR EACH MolInfo
WHERE biomol = "other-genetic" AND EQUALS(FEATURES("rRNA", "data.rna.ext.name"), match1, case_sensitive, "synonyms.txt", match2, match3)
DO
    SetQual("biomol", "genomic");
    ChangeSeqInst("mol", "dna");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_427 "Convert rRNA to misc_RNA where object text contains '16S-23S ribosomal RNA intergenic spacer' (case-sensitive), remove original feature"
VAR
    match = "16S-23S ribosomal RNA intergenic spacer"
    case_sensitive = true
FOR EACH rRNA
WHERE CONTAINS("data.rna.ext.name", match, case_sensitive)
DO
    ConvertFeature("misc_RNA");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_428 "Convert misc_RNA comment to product (ignore new text when existing text is present) where object text equals '16S-23S ribosomal RNA intergenic spacer' (ignore spaces, ignore punctuation), allow '16S-23S ribosomal RNA intergenic spacer' to be replaced by '16S-23S intergenic spacer', '16S-23S spacer', '16S-23S rRNA intergenic spacer', and '16S-23S IGS' and where object text does not contain 'may also' (ignore spaces, ignore punctuation), allow 'may also' to be replaced by 'contains'"
VAR
    src = "comment"
    dest = "data.rna.ext.gen.product"
    cap_change = "none"
    strip_name = false
    existing_text = "eReplace"
    match1 = "16S-23S ribosomal RNA intergenic spacer"
    match2 = "may also"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE NOT ISPRESENT(dest) AND EQUALS(src, match1, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match1) 
      AND NOT CONTAINS(src, match2, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match2)
DO
    ConvertStringQual(src, dest, cap_change, strip_name, existing_text);
    RemoveQual(src);
DONE
--------------------------------------------------------------
MACRO AutofixGB_429 "Apply 16S-23S ribosomal RNA intergenic spacer to misc_RNA product (overwrite existing text) where object text equals '16S-23S rRNA intergenic spacer' (ignore spaces, ignore punctuation), allow '16S-23S rRNA intergenic spacer' to be replaced by '16S-23S IGS', '16S-23S intergenic spacer', and '16S-23S spacer'"
VAR
    field_name = "data.rna.ext.gen.product"
    new_value = "16S-23S ribosomal RNA intergenic spacer"
    existing_text = "eReplace"
    match = "16S-23S rRNA intergenic spacer"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscRNA
WHERE EQUALS(field_name, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match)
DO
    SetStringQual (field_name, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_430 "Edit protein name replace 'recombination activating gene' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination activating gene"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_431 "Edit protein name replace 'recombination-activating gene' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination-activating gene"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_432 "Edit protein name replace 'recombination-activating protein' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination-activating protein"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_433 "Edit protein name replace 'recombination activating protein, partial gene' (case insensitive) with 'recombination activating protein'"
VAR
    find_text = "recombination activating protein, partial gene"
    repl_text = "recombination activating protein"
    location = "anywhere"
    case_sensitive = false
FOR EACH Protein
DO
    EditStringQual ("data.prot.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_434 "Apply gag to gene locus (overwrite existing text) where gene locus equals 'GAG gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "gag"
    existing_text = "eReplace"
    match = "GAG gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_435 "Apply pol to gene locus (overwrite existing text) where gene locus equals 'POL gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "pol"
    existing_text = "eReplace"
    match = "POL gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_436 "Apply vif to gene locus (overwrite existing text) where gene locus equals 'VIF gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vif"
    existing_text = "eReplace"
    match = "VIF gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_437 "Apply vpr to gene locus (overwrite existing text) where gene locus equals 'VPR gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpr"
    existing_text = "eReplace"
    match = "VPR gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_438 "Apply tat to gene locus (overwrite existing text) where gene locus equals 'TAT gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "tat"
    existing_text = "eReplace"
    match = "TAT gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_439 "Apply rev to gene locus (overwrite existing text) where gene locus equals 'REV gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "rev"
    existing_text = "eReplace"
    match = "REV gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_440 "Apply vpu to gene locus (overwrite existing text) where gene locus equals 'VPU gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpu"
    existing_text = "eReplace"
    match = "VPU gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_441 "Apply env to gene locus (overwrite existing text) where gene locus equals 'ENV gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "env"
    existing_text = "eReplace"
    match = "ENV gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_442 "Apply nef to gene locus (overwrite existing text) where gene locus equals 'NEF gene' (ignore spaces, ignore punctuation), allow 'gene' to be replaced by 'sequence' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "nef"
    existing_text = "eReplace"
    match = "NEF gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    start_match = "Human immunodeficiency virus"
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), start_match, case_sensitive, ignore_space, ignore_punctuation)
DO
    SetStringQual ("data.gene.locus", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_443 "Apply gag protein to CDS product (overwrite existing text) where CDS product equals 'gag sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'gag' to be replaced by 'Gag protein', allow 'gag sequence' to be replaced by 'gag' and 'Gag protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "gag protein"
    existing_text = "eReplace"
    match = "gag sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_444 "Apply pol protein to CDS product (overwrite existing text) where CDS product equals 'pol sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'pol' to be replaced by 'Pol protein', allow 'pol sequence' to be replaced by 'pol' and 'pol protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "pol protein"
    existing_text = "eReplace"
    match = "pol sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_445 "Apply vif protein to CDS product (overwrite existing text) where CDS product equals 'vif sequence' (ignore spaces, ignore punctuation), allow '' to be replaced by 'sequence' and 'gene', allow 'vif' to be replaced by 'Vif protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vif protein"
    existing_text = "eReplace"
    match = "vif sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_446 "Apply vpr protein to CDS product (overwrite existing text) where CDS product equals 'vpr sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'vpr' to be replaced by 'Vpr protein', allow 'vpr sequence' to be replaced by 'vpr' and 'Vpr protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpr protein"
    existing_text = "eReplace"
    match = "vpr sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_447 "Apply tat protein to CDS product (overwrite existing text) where CDS product equals 'tat sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'tat' to be replaced by 'Tat protein', allow 'tat sequence' to be replaced by 'tat' and 'Tat protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "tat protein"
    existing_text = "eReplace"
    match = "tat sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_448 "Apply rev protein to CDS product (overwrite existing text) where CDS product equals 'rev sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'rev' to be replaced by 'Rev protein', allow 'rev sequence' to be replaced by 'rev' and 'Rev protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "rev protein"
    existing_text = "eReplace"
    match = "rev sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_449 "Apply vpu protein to CDS product (overwrite existing text) where CDS product equals 'vpu sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'vpu' to be replaced by 'Vpu protein', allow 'vpu sequence' to be replaced by 'vpu' and 'Vpu protein' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "vpu protein"
    existing_text = "eReplace"
    match = "vpu sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_450 "Apply envelope glycoprotein to CDS product (overwrite existing text) where CDS product equals 'env sequence' (ignore spaces, ignore punctuation), allow 'env' to be replaced by 'envelope', allow 'sequence' to be replaced by 'gene', allow 'env sequence' to be replaced by 'Env protein', 'Env glycoprotein', and 'Env' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "envelope glycoprotein"
    existing_text = "eReplace"
    match = "env sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_451 "Apply nef protein to CDS product (overwrite existing text) where CDS product equals 'nef sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'nef sequence' to be replaced by 'Nef protein' and 'nef' and where source taxname starts with 'Human immunodeficiency virus' (ignore spaces, ignore punctuation)"
VAR
    new_value = "nef protein"
    existing_text = "eReplace"
    match = "nef sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
    taxname = "Human immunodeficiency virus"
FOR EACH Protein
WHERE STARTS(BIOSOURCE_FOR_SEQFEAT("org.taxname"), taxname, case_sensitive, ignore_space, ignore_punctuation)
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_452 "Apply envelope protein to CDS product (overwrite existing text) where CDS product equals 'Envelope protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Envelope protein sequence' to be replaced by 'Envelope protein'"
VAR
    new_value = "envelope protein"
    existing_text = "eReplace"
    match = "Envelope protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_453 "Apply polyprotein to protein name (overwrite existing text) where object text equals 'Polyprotein gene' (ignore spaces, ignore punctuation), allow 'Polyprotein gene' to be replaced by 'Polyprotein', 'polyprotein sequence', 'polyprotein cds', 'poliprotein', 'pollyprotein', and 'polliprotein'"
VAR
    new_value = "polyprotein"
    existing_text = "eReplace"
    match = "Polyprotein gene"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_454 "Apply glycoprotein to CDS product (overwrite existing text) where CDS product equals 'Glycoprotein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Glycoprotein sequence' to be replaced by 'Glycoprotein'"
VAR
    new_value = "glycoprotein"
    existing_text = "eReplace"
    match = "Glycoprotein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_455 "Apply nucleoprotein to CDS product (overwrite existing text) where CDS product equals 'Nucleoprotein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Nucleoprotein sequence' to be replaced by 'Nucleoprotein'"
VAR
    new_value = "nucleoprotein"
    existing_text = "eReplace"
    match = "Nucleoprotein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_456 "Apply coat protein to CDS product (overwrite existing text) where CDS product equals 'Coat protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Coat protein sequence' to be replaced by 'Coat protein'"
VAR
    new_value = "coat protein"
    existing_text = "eReplace"
    match = "Coat protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_457 "Apply capsid protein to CDS product (overwrite existing text) where CDS product equals 'Capsid protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Capsid protein sequence' to be replaced by 'capside protein', 'capside protein sequence', and 'Capsid protein'"
VAR
    new_value = "capsid protein"
    existing_text = "eReplace"
    match = "Capsid protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_458 "Apply movement protein to CDS product (overwrite existing text) where CDS product equals 'movement protein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'movement protein sequence' to be replaced by 'Movement protein'"
VAR
    new_value = "movement protein"
    existing_text = "eReplace"
    match = "movement protein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_459 "Apply envelope glycoprotein to CDS product (overwrite existing text) where CDS product equals 'Envelope glycoprotein sequence' (ignore spaces, ignore punctuation), allow 'sequence' to be replaced by 'gene', allow 'Envelope glycoprotein sequence' to be replaced by 'Envelope glycoprotein protein' and 'Envelope glycoprotein'"
VAR
    new_value = "envelope glycoprotein"
    existing_text = "eReplace"
    match = "Envelope glycoprotein sequence"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_460 "Apply nonstructural protein to protein name (overwrite existing text) where object text equals 'Nonstructural protein' (ignore spaces, ignore punctuation)"
VAR
    new_value = "nonstructural protein"
    existing_text = "eReplace"
    match = "Nonstructural protein"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_461 "Apply RNA-dependent RNA polymerase to protein name (overwrite existing text) where object text equals 'RNA-Dependent RNA polymerase' (ignore spaces, ignore punctuation)"
VAR
    new_value = "RNA-dependent RNA polymerase"
    existing_text = "eReplace"
    match = "RNA-Dependent RNA polymerase"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive, ignore_space, ignore_punctuation);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_462 "Remove CDS codon-start where CDS codon-start equals 'atg'"
FOR EACH Cdregion
WHERE ISPRESENT("qual")
DO
    obj = Resolve("qual") WHERE obj.qual = "codon_start" AND obj.val = "atg";
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_463 "Edit intron number replace 'intron' (case insensitive) with ''"
VAR
    find_text = "intron"
    repl_text = ""
    location = "anywhere"
    case_sensitive = false
FOR EACH ImpFeat
WHERE data.imp.key = "intron"
DO
    obj = Resolve("qual") where obj.qual = "number";
    EditStringQual ("obj.val", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_464 "Edit exon number replace 'exon' (case insensitive) with ''"
VAR
    find_text = "exon"
    repl_text = ""
    location = "anywhere"
    case_sensitive = false
FOR EACH ImpFeat
WHERE data.imp.key = "exon"
DO
    obj = Resolve("qual") where obj.qual = "number";
    EditStringQual ("obj.val", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_465 "Apply Gallus gallus to host (overwrite existing text) where source host equals 'Gallus domesticus (chicken)' (ignore spaces, ignore punctuation), allow 'Gallus domesticus (chicken)' to be replaced by 'Gallus gallus domesticus'"
VAR
    qual_name = "org.orgname.mod"
    modifier = "nat-host"
    new_value = "Gallus gallus"
    existing_text = "eReplace"
    match = "Gallus domesticus (chicken)"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve(qual_name) WHERE obj.subtype = modifier
                                     AND EQUALS("obj.subname", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.subname", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_466 "Remove location plastid where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "plastid" AND
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_467 "Remove location chloroplast where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chloroplast" AND
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_468 "Remove location chromoplast where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chromoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_469 "Remove location leucoplast where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "leucoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_470 "Remove location proplastid where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "proplastid" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_471 "Remove location plastid where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea" 
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "plastid" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_472 "Remove location chloroplast where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chloroplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_473 "Remove location chromoplast where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "chromoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_474 "Remove location leucoplast where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "leucoplast" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_475 "Remove location proplastid where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "proplastid" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_476 "Remove location mitochondrion where source lineage contains 'Bacteria' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Bacteria"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "mitochondrion" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_477 "Remove location mitochondrion where source lineage contains 'Archaea' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Archaea"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "mitochondrion" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_478 "Remove location extrachromosomal where source lineage contains 'Viruses' (case-sensitive) and where source dbxref starts with 'taxon:' (case-sensitive)"
VAR
    qual_name = "genome"
    match_text = "Viruses"
    case_sensitive = true
FOR EACH BioSource
WHERE genome = "extrachromosomal" AND 
      CONTAINS("org.orgname.lineage", match_text, case_sensitive) AND
      STARTS("org.db.db", "taxon", case_sensitive)
Do
    RemoveQual(qual_name);
Done
------------------------------------------------------------------------------
MACRO AutofixGB_479 "Remove identified-by where source identified-by equals 'unknown' (ignore spaces, ignore punctuation), allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', 'same laboratory', 'laboratory', 'lab', 'our laboratory', 'n.a.', 'not available', 'many methods', 'molecular typing method', 'biochemical tests', 'biochemical testing', 'biochemical test', 'bacteria', 'PCR, Sequencing, and Cloning', 'PCR, Sequencing, Cloning', 'molecular methods', '16S', 'Sanger', 'Sanger sequencing', 'sanger-sequencing', 'sequence', 'sequencing', 'Author', 'authors', 'student', 'students', 'self', 'me', 'myself', 'Rose Rainbolt', and 'Carlos Cutrer'"
VAR
    match_text = "unknown"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "identified-by" 
                             AND EQUALS("obj.name", match_text, case_sensitive, ignore_spaces, ignore_punct, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_480 "Remove collected-by where source collected-by equals 'unknown' (ignore spaces, ignore punctuation), allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', 'same laboratory', 'laboratory', 'lab', 'our laboratory', 'n.a.', 'not available', 'many methods', 'molecular typing method', 'biochemical tests', 'biochemical testing', 'biochemical test', 'bacteria', 'PCR, Sequencing, and Cloning', 'PCR, Sequencing, Cloning', 'molecular methods', '16S', 'Sanger', 'Sanger sequencing', 'sanger-sequencing', 'sequence', 'sequencing', 'Author', 'authors', 'student', 'students', 'self', 'me', 'myself', 'Rose Rainbolt', and 'Carlos Cutrer'"
VAR
    match_text = "unknown"
    case_sensitive = false
    ignore_spaces = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "collected-by" 
                             AND EQUALS("obj.name", match_text, case_sensitive, ignore_spaces, ignore_punct, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_481 "Remove lat-lon where object text equals 'unknown', allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', 'n.a.', and 'not available'"
VAR
    match_text = "unknown"
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "lat-lon" 
                             AND EQUALS("obj.name", match_text, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_482 "Remove country where object text equals 'unknown', allow 'unknown' to be replaced by 'N/A', 'none', 'not applicable', 'not aplicable', and 'not available'"
VAR
    match_text = "unknown"
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "country" 
                             AND EQUALS("obj.name", match_text, "synonyms.txt", match_text);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_483 "Edit collected-by replace ':' with ','"
VAR
    find_text = ":"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "collected-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_484 "Edit identified-by replace ':' with ','"
VAR
    find_text = ":"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "identified-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_485 "Edit collected-by replace '/' with ','"
VAR
    find_text = "/"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "collected-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_486 "Edit identified-by replace '/' with ','"
VAR
    find_text = "/"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "identified-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_487 "Edit collected-by replace ';' with ','"
VAR
    find_text = ";"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "collected-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_488 "Edit identified-by replace ';' with ','"
VAR
    find_text = ";"
    repl_text = ","
    location = "anywhere"
    case_sensitive = true
FOR EACH BioSource
DO
    o = Resolve("subtype") WHERE o.subtype = "identified-by";
    EditStringQual ("o.name", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_489 "Move middle name to first name"
FOR EACH Pubdesc
DO
    MoveMiddleToFirstName();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_490 "Edit misc_feature note replace 'Control region' (case insensitive) with 'control region' where object text equals 'Control region' (ignore punctuation)"
VAR
    find_text = "Control region"
    repl_text = "control region"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = false
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE EQUALS("comment", find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual ("comment", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_491 "Convert repeat_region rpt-family to repeat_region satellite (ignore new text when existing text is present) where repeat_region rpt-family contains 'microsatellite'"
VAR
    strip_name = false
    cap_change = "none"
    existing_text = "eReplace"
FOR EACH ImpFeat
WHERE data.imp.key = "repeat_region" AND NOT ISPRESENT("qual", "satellite")
DO   
    o = Resolve("qual") WHERE o.qual = "rpt_family" AND CONTAINS("o.val", "microsatellite");
    ConvertStringQual("o.val", "satellite", cap_change, strip_name, existing_text);
    RemoveQual(o);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_492 "Convert gene to misc_feature where object text equals 'D-loop' (ignore spaces, ignore punctuation) and where sequence type is nucleotide and gene is present and sequence has exactly 1 feature, remove original feature"
VAR
    match = "D-loop"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH Gene
WHERE EQUALS("data.gene.locus", match, case_sensitive, ignore_space, ignore_punctuation) AND
      SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na") AND
      FEATS_ON_SEQ("any") = 1
DO
    ConvertFeature("misc_feature");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_493 "Convert misc_feature to d_loop where object text equals 'D-loop' (ignore spaces, ignore punctuation) and where sequence type is nucleotide and misc_feature is present and sequence has exactly 1 feature, remove original feature"
VAR
    match = "D-loop"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH MiscFeat
WHERE EQUALS("comment", match, case_sensitive, ignore_space, ignore_punctuation) AND
      SEQUENCE_FOR_SEQFEAT("inst.mol") IN ("dna" ,"rna", "na") AND
      FEATS_ON_SEQ("any") = 1
DO
    ConvertFeature("d_loop");
    RemoveFeature();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_494 "Remove d_loop note where d_loop note equals 'D-loop' (ignore spaces, ignore punctuation)"
VAR
    field_name = "comment"
    match_text = "D-loop"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH ImpFeat
WHERE data.imp.key = "D-loop" AND
    EQUALS(field_name, match_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO   
    RemoveQual(field_name);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_495 "Apply hemagglutinin to protein name (overwrite existing text) where protein name equals 'haemagglutinin' (case-sensitive)"
VAR
    new_value = "hemagglutinin"
    existing_text = "eReplace"
    match = "haemagglutinin"
    case_sensitive = true
FOR EACH Protein
DO
    o = Resolve("data.prot.name") WHERE EQUALS(o, match, case_sensitive);
    SetStringQual (o, new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_496 "Apply molecule cRNA (overwrite existing text) where source taxname starts with 'Influenza A virus' and where sequence type is nucleotide"
VAR
    match = "Influenza A virus"
FOR EACH MolInfo
WHERE SEQUENCE_FOR_SEQDESC("inst.mol") IN ("dna" ,"rna", "na")
      AND STARTS(BIOSOURCE_FOR_MOLINFO("org.taxname"), match)
DO
    SetQual ("biomol", "cRNA");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_497 "Apply molecule cRNA (overwrite existing text) where source taxname starts with 'Influenza B virus' and where sequence type is nucleotide"
VAR
    match = "Influenza B virus"
FOR EACH MolInfo
WHERE SEQUENCE_FOR_SEQDESC("inst.mol") IN ("dna" ,"rna", "na")
      AND STARTS(BIOSOURCE_FOR_MOLINFO("org.taxname"), match)
DO
    SetQual ("biomol", "cRNA");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_498 "Apply molecule cRNA (overwrite existing text) where source taxname starts with 'Influenza C virus' and where sequence type is nucleotide"
VAR
    match = "Influenza C virus"
FOR EACH MolInfo
WHERE SEQUENCE_FOR_SEQDESC("inst.mol") IN ("dna" ,"rna", "na")
      AND STARTS(BIOSOURCE_FOR_MOLINFO("org.taxname"), match)
DO
    SetQual ("biomol", "cRNA");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_499 "Apply molecule cRNA (overwrite existing text) where source taxname starts with 'Influenza D virus' and where sequence type is nucleotide"
VAR
    match = "Influenza D virus"
FOR EACH MolInfo
WHERE SEQUENCE_FOR_SEQDESC("inst.mol") IN ("dna" ,"rna", "na")
      AND STARTS(BIOSOURCE_FOR_MOLINFO("org.taxname"), match)
DO
    SetQual ("biomol", "cRNA");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_500 "Remove All where object text equals 'PCR' (ignore spaces, ignore punctuation), allow 'PCR' to be replaced by 'microscope', 'cloning', 'clone', 'sequencing', 'direct sequencing', 'taxonomy', 'sequence', 'PCR cloning', 'sequence similarity', 'blast', 'blastn', 'blastp', 'blastx', 'tblastn', 'tblastx', 'RT-PCR', 'TAIL-PCR', 'TAIL PCR', 'polymerase chain reaction', 'BLAST search', 'PCR amplification and sequencing', 'pGEMT-Easy', 'nested PCR', 'nested polymerase chain reaction', 'RT PCR', 'RTPCR', 'pGEMT Easy', and 'pGEMTEasy'"
VAR
   match = "PCR"
   case_sensitive = false
   ignore_spaces = true
   ignore_punctuation = true
FOR EACH BioSource
DO
   objs = ResolveBsrcQuals() WHERE EQUALS(objs, match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match);
   RemoveQual(objs);
   sub = Resolve("subtype") WHERE EQUALS("sub.name", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match);
   RemoveModifier(sub);
   orgmod = Resolve("org.orgname.mod") WHERE EQUALS("orgmod.subname", match, case_sensitive, ignore_spaces, ignore_punctuation, "synonyms.txt", match);
   RemoveModifier(orgmod);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_501 "Remove clone where source clone equals 'direct PCR' (ignore spaces, ignore punctuation), allow 'direct PCR' to be replaced by 'Bacterium', 'Virus', 'Clone', 'True', 'partial', '16S rRNA gene', '16S sequencing', '16S rRNA', '16S', 'fungal', 'fungus', 'rRNA', 'fungi', 'Bacteria', 'prokaryote', and 'prokaryotic'"
VAR
    match = "direct PCR"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "clone" 
                             AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_502 "Remove cell-type where source cell-type equals 'direct PCR' (ignore spaces, ignore punctuation), allow 'direct PCR' to be replaced by 'Bacterium', 'Virus', 'Clone', 'True', 'partial', '16S rRNA gene', '16S sequencing', '16S rRNA', '16S', 'fungal', 'fungus', 'rRNA', 'fungi', 'Bacteria', 'prokaryote', and 'prokaryotic'"
VAR
    match = "direct PCR"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "cell-type" 
                             AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_503 "Remove strain where source strain equals 'pure-cultured strain' (ignore spaces, ignore punctuation), allow 'pure-cultured strain' to be replaced by 'pure-culture', 'strain', and 'Pure'"
VAR
    match = "pure-cultured strain"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "strain"
                             AND EQUALS("obj.subname", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_504 "Remove culture-collection where source culture-collection equals 'pure-cultured strain' (ignore spaces, ignore punctuation), allow 'pure-cultured strain' to be replaced by 'pure-culture', 'strain', and 'Pure'"
VAR
    match = "pure-cultured strain"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "culture-collection"
                             AND EQUALS("obj.subname", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_505 "Remove type where source type contains 'DNA' (ignore spaces, ignore punctuation), allow 'DNA' to be replaced by 'RNA' and 'genomic'"
VAR
    match = "DNA"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "type"
                             AND CONTAINS("obj.subname", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_506 "Remove type where source type equals 'Bacteria' (ignore spaces, ignore punctuation), allow 'Bacteria' to be replaced by 'Bacterium', 'Virus', 'Clone', 'True', 'partial', '16S rRNA gene', '16S sequencing', '16S rRNA', '16S', 'fungal', 'fungus', 'rRNA', and 'fungi'"
VAR
    match = "Bacteria"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "type"
                             AND EQUALS("obj.subname", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_507 "Remove biotype where source biotype equals 'Bacteria' (ignore spaces, ignore punctuation), allow 'Bacteria' to be replaced by 'Bacterium', 'Virus', 'Clone', 'True', 'partial', '16S rRNA gene', '16S sequencing', '16S rRNA', '16S', 'fungal', 'fungus', 'rRNA', and 'fungi'"
VAR
    match = "Bacteria"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH BioSource
DO
    obj = Resolve("org.orgname.mod") WHERE obj.subtype = "biotype"
                             AND EQUALS("obj.subname", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match);
    RemoveModifier(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_508 "Apply nasopharyngeal aspirate to isolation-source (overwrite existing text) where source isolation-source equals 'Naso pharyngeal aspirate' (ignore spaces, ignore punctuation), allow 'Naso pharyngeal aspirate' to be replaced by 'Naso-pharyngeal aspirate', 'naso pharyngeal aspirate', and 'naso-pharyngeal aspirate'"
VAR
    new_value = "nasopharyngeal aspirate"
    existing_text = "eReplace"
    match = "Naso pharyngeal aspirate"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_509 "Apply lung to isolation-source (overwrite existing text) where object text equals 'lung tissue' (ignore spaces, ignore punctuation) and where source isolation-source equals 'lung tissue' (ignore spaces, ignore punctuation), allow 'lung tissue' to be replaced by 'lung tissues'"
VAR
    new_value = "lung"
    existing_text = "eReplace"
    match = "lung tissue"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_510 "Apply blood to isolation-source (overwrite existing text) where source isolation-source equals 'blood sample' (ignore spaces, ignore punctuation), allow 'blood sample' to be replaced by 'blood samples'"
VAR
    new_value = "blood"
    existing_text = "eReplace"
    match = "blood sample"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "isolation-source" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_511 "Apply blood to tissue-type (overwrite existing text) where source tissue-type equals 'blood sample' (ignore spaces, ignore punctuation), allow 'blood sample' to be replaced by 'blood samples'"
VAR
    new_value = "blood"
    existing_text = "eReplace"
    match = "blood sample"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "tissue-type" 
                                     AND EQUALS("obj.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    SetStringQual("obj.name", new_value, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_512 "Remove single-sequence pop, phy, mut, or eco wrapper set without alignment"
FOR EACH TSEntry
DO
    RemoveSingleItemSet();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_513 "Reorder structured comment fields"
FOR EACH StructComment
DO
    ReorderStructuredComment();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_514 "Edit structured comment field Sequencing Technology replace 'Illunima' (case insensitive) with 'Illumina'"
VAR
    find_text = "Illunima"
    repl_text = "Illumina"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_515 "Edit structured comment field Sequencing Technology replace 'llumina' (case insensitive) with 'Illumina'"
VAR
    find_text = "llumina"
    repl_text = "Illumina"
    location = "at the beginning"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_516 "Edit structured comment field Sequencing Technology replace 'Illunina' (case insensitive) with 'Illumina'"
VAR
    find_text = "Illunina"
    repl_text = "Illumina"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_517 "Edit structured comment field Sequencing Technology replace 'Ilumina' (case insensitive) with 'Illumina'"
VAR
    find_text = "Ilumina"
    repl_text = "Illumina"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_518 "Edit structured comment field Sequencing Technology replace 'Illumia' (case insensitive) with 'Illumina'"
VAR
    find_text = "Illumia"
    repl_text = "Illumina"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_519 "Edit structured comment field Sequencing Technology replace 'Illumna' (case insensitive) with 'Illumina'"
VAR
    find_text = "Illumna"
    repl_text = "Illumina"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_520 "Edit structured comment field Sequencing Technology replace 'PaBio' (case insensitive) with 'PacBio'"
VAR
    find_text = "PaBio"
    repl_text = "PacBio"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_521 "Edit structured comment field Sequencing Technology replace 'Pacific Biosciences' (case insensitive) with 'PacBio'"
VAR
    find_text = "Pacific Biosciences"
    repl_text = "PacBio"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_522 "Edit structured comment field Sequencing Technology replace 'Pacific Bioscienes' (case insensitive) with 'PacBio'"
VAR
    find_text = "Pacific Bioscienes"
    repl_text = "PacBio"
    location = "anywhere"
    case_sensitive = false
    field = "Sequencing Technology"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_523 "Remove duplicate structured comments"
FOR EACH SeqNa
DO
    RemoveDuplicateStructComments();
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_524 "Remove structured comment field Coverage where object text equals '100%' (case-sensitive), allow '100%' to be replaced by 'partial', 'all', '-', 'n/a', 'complete', 'complete sequence', and 'partial sequence'"
VAR
    match = "100%"
    case_sensitive = true
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = "Coverage" AND EQUALS("obj.data.str", match, case_sensitive, "synonyms.txt", match);
    RemoveQual(obj); 
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_525 "Remove structured comment field Coverage where object text contains '%' (case-sensitive)"
VAR
    match = "%"
    case_sensitive = true
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = "Coverage" AND CONTAINS("obj.data.str", match, case_sensitive);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_526 "Remove structured comment field Coverage where object text ends with 'bp'"
VAR
    match = "bp"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = "Coverage" AND ENDS("obj.data.str", match);
    RemoveQual(obj);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_527 "Edit structured comment field Assembly Method replace 'v.v.' (case insensitive) with 'v.'"
VAR
    find_text = "v.v."
    repl_text = "v."
    location = "anywhere"
    case_sensitive = false
    field = "Assembly Method"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_528 "Edit structured comment field Assembly Method replace 'v. version' (case insensitive) with 'v.'"
VAR
    find_text = "v. version"
    repl_text = "v."
    location = "anywhere"
    case_sensitive = false
    field = "Assembly Method"
FOR EACH StructComment
DO
    obj = Resolve("data") WHERE obj.label.str = field;
    EditStringQual ("obj.data.str", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_529 "Edit taxname replace 'uncultured fungus clone' (case insensitive) with 'uncultured fungus' where source taxname equals 'uncultured fungus clone' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "uncultured fungus clone"
    repl_text = "uncultured fungus"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_530 "Edit taxname replace 'uncultured bacteria clone' (case insensitive) with 'uncultured bacterium' where source taxname equals 'uncultured bacteria clone' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "uncultured bacteria clone"
    repl_text = "uncultured bacterium"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_531 "Edit taxname replace 'uncultured bacterium clone' (case insensitive) with 'uncultured bacterium' where source taxname equals 'uncultured bacterium clone' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "uncultured bacterium clone"
    repl_text = "uncultured bacterium"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_532 "Edit taxname replace 'unculture bacterium' (case insensitive) with 'uncultured bacterium' where source taxname equals 'unculture bacterium' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "unculture bacterium"
    repl_text = "uncultured bacterium"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_533 "Edit taxname replace 'unculture fungus' (case insensitive) with 'uncultured fungus' where source taxname equals 'unculture fungus' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "unculture fungus"
    repl_text = "uncultured fungus"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_534 "Edit taxname replace 'fungi' (case insensitive) with 'fungal sp.' where source taxname equals 'fungi'"
VAR
    find_text = "fungi"
    repl_text = "fungal sp."
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
WHERE org.taxname = find_text
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_535 "Edit taxname replace 'fungus' (case insensitive) with 'fungal sp.' where source taxname equals 'fungus'"
VAR
    find_text = "fungus"
    repl_text = "fungal sp."
    location = "anywhere"
    case_sensitive = false
FOR EACH BioSource
WHERE org.taxname = find_text
DO
    EditStringQual ("org.taxname", find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_536 "Edit taxname replace 'uncultured cyanobacteria' (case insensitive) with 'uncultured cyanobacterium' where source taxname equals 'uncultured cyanobacteria' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "uncultured cyanobacteria"
    repl_text = "uncultured cyanobacterium"
    location = "anywhere"
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_537 "Edit taxname replace 'Measles viruse' with 'Measles virus' where source taxname equals 'Measles viruse' (ignore spaces, ignore punctuation)"
VAR
    qual_name = "org.taxname"
    find_text = "Measles viruse"
    repl_text = "Measles virus"
    location = "anywhere"
    case_sensitive_edit = true
    case_sensitive = false
    ignore_spaces = true
    ignore_punctuation = true
FOR EACH BioSource
WHERE EQUALS(qual_name, find_text, case_sensitive, ignore_spaces, ignore_punctuation)
DO
    EditStringQual (qual_name, find_text, repl_text, location, case_sensitive_edit);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_538 "Remove duplicate features(case-sensitive) and remove protein products"
VAR
    check_partials = true
    case_sensitive = true
    remove_proteins = true
FOR EACH Seq
DO
    RemoveDuplicateFeatures("any", check_partials, case_sensitive, remove_proteins);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_539 "Set both ends partial for rRNA features only objects on plus strands of nucleotide sequences that are complete on both ends with 5' end exactly 0 from end of sequence with 3' end exactly 0 from end of sequence and where object text equals '16S ribosomal RNA' (ignore spaces, ignore punctuation), allow '16S ribosomal RNA' to be replaced by '16S small subunit ribosomal RNA' and where sequence type is nucleotide and rRNA is present and sequence has exactly 1 feature and sequence is less than 1201 in length"
VAR
    extend = false
    match = "16S ribosomal RNA"
    case_sensitive = false
    ignore_space = true
    ignore_punctuation = true
FOR EACH rRNA
WHERE STRAND() = "plus" AND
      IS_SEQ_NA("location") AND
      NOT ISPARTIALSTART() AND NOT ISPARTIALSTOP() AND
      DISTFROMSTART() = 0 AND DISTFROMSTOP() = 0 AND
      EQUALS("data.rna.ext.name", match, case_sensitive, ignore_space, ignore_punctuation, "synonyms.txt", match) AND
      FEATS_ON_SEQ("all") = 1 AND
      SEQUENCE_FOR_SEQFEAT("inst.length") < 1201
DO
    SetBothEndsPartial("all", extend);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_540 "Set both ends partial for rRNA features only objects on plus strands of nucleotide sequences that are complete on both ends with 5' end exactly 0 from end of sequence with 3' end exactly 0 from end of sequence and where object text equals '18S ribosomal RNA' (case-sensitive), allow '18S ribosomal RNA' to be replaced by '23S ribosomal RNA', '28S ribosomal RNA', '26S ribosomal RNA', '18S small subunit ribosomal RNA', '23S large subunit ribosomal RNA', '26S large subunit ribosomal RNA', '28S large subunit ribosomal RNA', and 'large subunit ribosomal RNA' and where sequence type is nucleotide and rRNA is present and sequence has exactly 1 feature and sequence is less than 1000 in length"
VAR
    extend = false
    match = "18S ribosomal RNA"
    case_sensitive = true
FOR EACH rRNA
WHERE STRAND() = "plus" AND
      IS_SEQ_NA("location") AND
      NOT ISPARTIALSTART() AND NOT ISPARTIALSTOP() AND
      DISTFROMSTART() = 0 AND DISTFROMSTOP() = 0 AND
      EQUALS("data.rna.ext.name", match, case_sensitive, "synonyms.txt", match) AND
      FEATS_ON_SEQ("all") = 1 AND
      SEQUENCE_FOR_SEQFEAT("inst.length") < 1000
DO
    SetBothEndsPartial("all", extend);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_541 "Apply origin artificial (overwrite existing text) where source taxname equals 'synthetic construct' (case-sensitive)"
VAR
    qual_name = "org.taxname"
    match = "synthetic construct"
    case_sensitive = true
FOR EACH BioSource
WHERE EQUALS(qual_name, match, case_sensitive)
DO
    SetQual ("origin", "artificial");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_542 "Apply molecule other-genetic (overwrite existing text) where source taxname equals 'synthetic construct' (case-sensitive)"
VAR
    match = "synthetic construct"
    case_sensitive = true
FOR EACH MolInfo
WHERE EQUALS(BIOSOURCE_FOR_MOLINFO("org.taxname"), match, case_sensitive)
DO
    SetQual ("biomol", "other-genetic");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_543 "Apply origin artificial (overwrite existing text) where source taxname contains 'cloning vector' (case-insensitive)"
VAR
    qual_name = "org.taxname"
    match = "cloning vector"
FOR EACH BioSource
WHERE CONTAINS(qual_name, match)
DO
    SetQual ("origin", "artificial");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_544 "Apply molecule other-genetic (overwrite existing text) where source taxname contains 'cloning vector' (case-insensitive)"
VAR
    match = "cloning vector"
FOR EACH MolInfo
WHERE CONTAINS(BIOSOURCE_FOR_MOLINFO("org.taxname"), match)
DO
    SetQual ("biomol", "other-genetic");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_545 "Apply origin artificial (overwrite existing text) where source taxname contains 'expression vector' (case-insensitive)"
VAR
    qual_name = "org.taxname"
    match = "expression vector"
FOR EACH BioSource
WHERE CONTAINS(qual_name, match)
DO
    SetQual ("origin", "artificial");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_546 "Apply molecule other-genetic (overwrite existing text) where source taxname contains 'expression vector' (case-insensitive)"
VAR
    match = "expression vector"
FOR EACH MolInfo
WHERE CONTAINS(BIOSOURCE_FOR_MOLINFO("org.taxname"), match)
DO
    SetQual ("biomol", "other-genetic");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_547 "Convert pop sets to phy sets when taxnames are inconsistent"
FOR EACH SeqSet
WHERE class = "pop-set" AND INCONSISTENT_TAXA()
DO
    SetQual("class", "phy-set");
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_548 "Convert isolation-source to isolation-source (overwrite existing text) where source isolation-source equals 'gut' (ignore spaces, ignore punctuation), allow 'gut' to be replaced by 'processed salad', 'mushroom', 'throat swab & urine', 'mouth swab', 'induced sputum', 'skin tissue', 'biogas plant', 'bait shop', 'Nasopharyngeal/Throat Swab', 'water sample', 'coastal water', 'Soil samples', 'Oral Swab', 'throat swab', 'Surface Seawater', 'Plant', 'Insect Gut', and 'Sea Water'"
VAR
    cap_change = "tolower"
    strip_name = false
    existing_text = "eReplace"
    match = "gut"
    case_sensitive = false
    ignore_space = true
    ignore_punct = true
FOR EACH BioSource
DO
    src = Resolve("subtype") WHERE src.subtype = "isolation-source" 
                             AND EQUALS("src.name", match, case_sensitive, ignore_space, ignore_punct, "synonyms.txt", match);
    ConvertStringQual("src.name", "src.name", cap_change, strip_name, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_549 "Convert host to host (overwrite existing text) where source host equals 'pumpkin' (case-sensitive), allow 'pumpkin' to be replaced by 'grasshopper', 'green pepper', and 'barley'"
VAR
    cap_change = "tolower"
    strip_name = false
    existing_text = "eReplace"
    match = "pumpkin"
    case_sensitive = true
FOR EACH BioSource
DO
    src = Resolve("org.orgname.mod") WHERE src.subtype = "nat-host" 
                             AND EQUALS("src.subname", match, case_sensitive, "synonyms.txt", match);
    ConvertStringQual("src.subname", "src.subname", cap_change, strip_name, existing_text);
DONE
------------------------------------------------------------------------------
MACRO AutofixGB_550 "Remove altitude where altitude does not ends with ' m' (case-sensitive)"
VAR
    not_ends1 = % m%
FOR EACH BioSource
DO
    obj_bsrc = Resolve("subtype") WHERE obj_bsrc.subtype = "altitude" AND NOT ENDS("obj_bsrc.name",not_ends1,true,false,false,false,false);
    RemoveModifier(obj_bsrc);
DONE
---------------------------------------------------
MACRO AutofixGB_551 "Edit taxname replace 'Unidentified fungus' (case sensitive)  with 'fungal sp.' where taxname equals 'Unidentified fungus' "
VAR
    find_text = %Unidentified fungus%
    repl_text = %fungal sp.%
    location = "anywhere"
    case_sensitive = %true%
    is_regex = %false%
    equals1 = %Unidentified fungus%
FOR EACH BioSource
WHERE EQUALS("org.taxname",equals1,false,false,false,false,false)
DO
    EditStringQual("org.taxname", find_text, repl_text, location, case_sensitive, is_regex);
DONE
---------------------------------------------------
MACRO AutofixGB_552 "Apply 'genomic' to molecule (overwrite existing text) where molecule equals 'other-genetic' (case-sensitive) and genome equals 'mitochondrion' (case-sensitive) and molecule does not equal 'peptide' (case-sensitive) and taxname does not contain 'synthetic' (case-sensitive) and taxname does not contain 'cloning' (case-sensitive) and molecule does not contain 'vector' (case-sensitive) and class equals 'DNA' (case-sensitive)"
VAR
    new_value = %genomic%
    existing_text = "eReplace"
    equals1 = %other-genetic%
    equals2 = %mitochondrion%
    not_equals3 = %peptide%
    not_contains4 = %synthetic%
    not_contains5 = %cloning%
    not_contains6 = %vector%
    equals7 = %dna%
FOR EACH Seq
WHERE EQUALS("descr..molinfo.biomol",equals1,true,false,false,false,false)
      AND EQUALS(BIOSOURCE_FOR_SEQUENCE("genome"),equals2,true,false,false,false,false)
      AND NOT EQUALS("descr..molinfo.biomol",not_equals3,true,false,false,false,false)
      AND NOT CONTAINS(BIOSOURCE_FOR_SEQUENCE("org.taxname"),not_contains4,true,false,false,false,false)
      AND NOT CONTAINS(BIOSOURCE_FOR_SEQUENCE("org.taxname"),not_contains5,true,false,false,false,false)
      AND NOT CONTAINS("descr..molinfo.biomol",not_contains6,true,false,false,false,false)
      AND EQUALS("inst.mol",equals7,true,false,false,false,false)
DO
    SetStringQual("descr..molinfo.biomol", new_value, existing_text);
DONE
---------------------------------------------------
MACRO AutofixGB_553 "Apply 'genomic' to molecule (overwrite existing text) where molecule equals 'other-genetic' (case-sensitive) and genome equals 'chloroplast' (case-sensitive) and molecule does not equal 'peptide' (case-sensitive) and taxname does not contain 'synthetic' (case-sensitive) and taxname does not contain 'cloning' (case-sensitive) and molecule does not contain 'vector' (case-sensitive) and class equals 'DNA' (case-sensitive)"
VAR
    new_value = %genomic%
    existing_text = "eReplace"
    equals1 = %other-genetic%
    equals2 = %chloroplast%
    not_equals3 = %peptide%
    not_contains4 = %synthetic%
    not_contains5 = %cloning%
    not_contains6 = %vector%
    equals7 = %dna%
FOR EACH Seq
WHERE EQUALS("descr..molinfo.biomol",equals1,true,false,false,false,false)
    AND EQUALS(BIOSOURCE_FOR_SEQUENCE("genome"),equals2,true,false,false,false,false)
    AND NOT EQUALS("descr..molinfo.biomol",not_equals3,true,false,false,false,false)
    AND NOT CONTAINS(BIOSOURCE_FOR_SEQUENCE("org.taxname"),not_contains4,true,false,false,false,false)
    AND NOT CONTAINS(BIOSOURCE_FOR_SEQUENCE("org.taxname"),not_contains5,true,false,false,false,false)
    AND NOT CONTAINS("descr..molinfo.biomol",not_contains6,true,false,false,false,false)
    AND EQUALS("inst.mol",equals7,true,false,false,false,false)
DO
    SetStringQual("descr..molinfo.biomol", new_value, existing_text);
DONE
---------------------------------------------------
MACRO AutofixGB_554 "Apply 'genomic' to molecule (overwrite existing text) where molecule equals 'other-genetic' (case-sensitive) and genome equals 'plastid' (case-sensitive) and molecule does not equal 'peptide' (case-sensitive) and taxname does not contain 'synthetic' (case-sensitive) and taxname does not contain 'cloning' (case-sensitive) and molecule does not contain 'vector' (case-sensitive) and class equals 'DNA' (case-sensitive)"
VAR
    new_value = %genomic%
    existing_text = "eReplace"
    equals1 = %other-genetic%
    equals2 = %plastid%
    not_equals3 = %peptide%
    not_contains4 = %synthetic%
    not_contains5 = %cloning%
    not_contains6 = %vector%
    equals7 = %dna%
FOR EACH Seq
WHERE EQUALS("descr..molinfo.biomol",equals1,true,false,false,false,false)
    AND EQUALS(BIOSOURCE_FOR_SEQUENCE("genome"),equals2,true,false,false,false,false)
    AND NOT EQUALS("descr..molinfo.biomol",not_equals3,true,false,false,false,false)
    AND NOT CONTAINS(BIOSOURCE_FOR_SEQUENCE("org.taxname"),not_contains4,true,false,false,false,false)
    AND NOT CONTAINS(BIOSOURCE_FOR_SEQUENCE("org.taxname"),not_contains5,true,false,false,false,false)
    AND NOT CONTAINS("descr..molinfo.biomol",not_contains6,true,false,false,false,false)
    AND EQUALS("inst.mol",equals7,true,false,false,false,false)
DO
    SetStringQual("descr..molinfo.biomol", new_value, existing_text);
DONE
---------------------------------------------------
MACRO AutofixGB_555 "Edit country replace 'Republic of Congo' (case insensitive)  with 'Republic of the Congo'"
VAR
    find_text = %Republic of Congo%
    repl_text = %Republic of the Congo%
    location = "anywhere"
    case_sensitive = %false%
    is_regex = %false%
FOR EACH BioSource
DO
    obj = Resolve("subtype") WHERE obj.subtype = "country";
    EditStringQual("obj.name", find_text, repl_text, location, case_sensitive, is_regex);
DONE
---------------------------------------------------
MACRO AutofixGB_556 "Remove invalid EC numbers from CDS product"
FOR EACH Protein
DO
    RemoveInvalidECNumbers();
DONE
---------------------------------------------------
MACRO AutofixGB_557 "Remove specimen-voucher where specimen-voucher equals 'NULL' "
VAR
    equals1 = %NULL%
FOR EACH BioSource
DO
    obj_bsrc = Resolve("org.orgname.mod") WHERE obj_bsrc.subtype = "specimen-voucher" AND EQUALS("obj_bsrc.subname",equals1,false,false,false,false,false);
    RemoveModifier(obj_bsrc);
DONE
---------------------------------------------------

