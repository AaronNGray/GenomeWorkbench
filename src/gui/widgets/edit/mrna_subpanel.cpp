/*  $Id: mrna_subpanel.cpp 25495 2012-03-27 20:35:24Z kuznets $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data,  the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties,  express or implied,  including
 *  warranties of performance,  merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Authors:  Roman Katargin
 */


#include <ncbi_pch.hpp>
////@begin includes
////@end includes

#include "mrna_subpanel.hpp"

#include <wx/sizer.h>
#include <wx/bitmap.h>
#include <wx/icon.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>

BEGIN_NCBI_SCOPE

////@begin XPM images
////@end XPM images


/*!
 * CmRNASubPanel type definition
 */

IMPLEMENT_DYNAMIC_CLASS( CmRNASubPanel, wxPanel )


/*!
 * CmRNASubPanel event table definition
 */

BEGIN_EVENT_TABLE( CmRNASubPanel, wxPanel )

////@begin CmRNASubPanel event table entries
////@end CmRNASubPanel event table entries

END_EVENT_TABLE()


/*!
 * CmRNASubPanel constructors
 */

CmRNASubPanel::CmRNASubPanel()
{
    Init();
}

CmRNASubPanel::CmRNASubPanel( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, pos, size, style);
}


/*!
 * CmRNASubPanel creator
 */

bool CmRNASubPanel::Create( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
////@begin CmRNASubPanel creation
    wxPanel::Create( parent, id, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end CmRNASubPanel creation
    return true;
}


/*!
 * CmRNASubPanel destructor
 */

CmRNASubPanel::~CmRNASubPanel()
{
////@begin CmRNASubPanel destruction
////@end CmRNASubPanel destruction
}


/*!
 * Member initialisation
 */

void CmRNASubPanel::Init()
{
////@begin CmRNASubPanel member initialisation
////@end CmRNASubPanel member initialisation
}


/*!
 * Control creation for CmRNASubPanel
 */

void CmRNASubPanel::CreateControls()
{
////@begin CmRNASubPanel content construction
    // Generated by DialogBlocks, Sat 16 Feb 2008 11:11:09 AM EST (unregistered)

    CmRNASubPanel* itemPanel1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemPanel1->SetSizer(itemBoxSizer2);

    wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer3, 0, wxGROW|wxALL, 0);

    wxStaticText* itemStaticText4 = new wxStaticText( itemPanel1, wxID_STATIC, wxT("Name"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer3->Add(itemStaticText4, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT|wxTOP|wxBOTTOM, 5);

    wxTextCtrl* itemTextCtrl5 = new wxTextCtrl( itemPanel1, ID_TEXTCTRL8, wxT(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer3->Add(itemTextCtrl5, 1, wxALIGN_CENTER_VERTICAL|wxLEFT|wxTOP|wxBOTTOM, 5);

    // Set validators
    itemTextCtrl5->SetValidator( wxTextValidator(wxFILTER_NONE, & m_Name) );
////@end CmRNASubPanel content construction
}


/*!
 * Should we show tooltips?
 */

bool CmRNASubPanel::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap CmRNASubPanel::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin CmRNASubPanel bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end CmRNASubPanel bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon CmRNASubPanel::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin CmRNASubPanel icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end CmRNASubPanel icon retrieval
}

END_NCBI_SCOPE
