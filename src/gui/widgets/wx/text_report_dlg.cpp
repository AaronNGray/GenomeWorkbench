/*  $Id: text_report_dlg.cpp 44437 2019-12-18 19:08:05Z asztalos $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data,  the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties,  express or implied,  including
 *  warranties of performance,  merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Authors:  Roman Katargin
 */


#include <ncbi_pch.hpp>

////@begin includes
////@end includes

#include <gui/widgets/wx/text_report_dlg.hpp>

#include <wx/sizer.h>
#include <wx/button.h>
#include <wx/icon.h>
#include <wx/textctrl.h>
#include <wx/artprov.h>
#include <wx/statbmp.h>

BEGIN_NCBI_SCOPE

////@begin XPM images
////@end XPM images


/*!
 * CTextReportDlg type definition
 */

IMPLEMENT_DYNAMIC_CLASS( CTextReportDlg, wxDialog )


/*!
 * CTextReportDlg event table definition
 */

BEGIN_EVENT_TABLE( CTextReportDlg, wxDialog )

////@begin CTextReportDlg event table entries
    EVT_HTML_LINK_CLICKED( ID_TEXTCTRL1, CTextReportDlg::OnTextctrl1LinkClicked )
////@end CTextReportDlg event table entries

END_EVENT_TABLE()


/*!
 * CTextReportDlg constructors
 */

CTextReportDlg::CTextReportDlg()
{
    Init();
}

CTextReportDlg::CTextReportDlg( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*!
 * CTextReportDlg creator
 */

bool CTextReportDlg::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin CTextReportDlg creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end CTextReportDlg creation
    SetIcon(eIcon_Stop);
    return true;
}

void CTextReportDlg::SetIcon(EDialogIcon icon) 
{
    switch (icon) {
    case eIcon_Info:
        m_Bitmap->SetBitmap(wxArtProvider::GetBitmap(wxART_INFORMATION, wxART_MESSAGE_BOX));
        break;
    case eIcon_Question:
        m_Bitmap->SetBitmap(wxArtProvider::GetBitmap(wxART_QUESTION, wxART_MESSAGE_BOX));
        break;
    case eIcon_Exclamation:
        m_Bitmap->SetBitmap(wxArtProvider::GetBitmap(wxART_WARNING, wxART_MESSAGE_BOX));
        break;
    case eIcon_Stop:
        m_Bitmap->SetBitmap(wxArtProvider::GetBitmap(wxART_ERROR, wxART_MESSAGE_BOX));
        break;
    default:
        break;
    }

}

/*!
 * CTextReportDlg destructor
 */

CTextReportDlg::~CTextReportDlg()
{
////@begin CTextReportDlg destruction
////@end CTextReportDlg destruction
}


/*!
 * Member initialisation
 */

void CTextReportDlg::Init()
{
////@begin CTextReportDlg member initialisation
    m_Bitmap = NULL;
    m_TextCtrl = NULL;
////@end CTextReportDlg member initialisation
}


/*!
 * Control creation for CTextReportDlg
 */

void CTextReportDlg::CreateControls()
{
////@begin CTextReportDlg content construction
    // Generated by DialogBlocks, 17/12/2019 10:27:11 (unregistered)

    CTextReportDlg* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer1 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer1);

    wxFlexGridSizer* itemFlexGridSizer2 = new wxFlexGridSizer(0, 2, 0, 0);
    itemBoxSizer1->Add(itemFlexGridSizer2, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, wxDLG_UNIT(itemDialog1, wxSize(3, -1)).x);

    m_Bitmap = new wxStaticBitmap( itemDialog1, wxID_STATIC, wxNullBitmap, wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer2->Add(m_Bitmap, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, wxDLG_UNIT(itemDialog1, wxSize(10, -1)).x);

    m_TextCtrl = new wxHtmlWindow( itemDialog1, ID_TEXTCTRL1, wxDefaultPosition, wxDLG_UNIT(itemDialog1, wxSize(200, 100)), wxHW_SCROLLBAR_AUTO|wxVSCROLL );
    itemFlexGridSizer2->Add(m_TextCtrl, 0, wxGROW|wxALL, wxDLG_UNIT(itemDialog1, wxSize(5, -1)).x);

    itemFlexGridSizer2->AddGrowableRow(0);
    itemFlexGridSizer2->AddGrowableCol(1);

    wxStdDialogButtonSizer* itemStdDialogButtonSizer1 = new wxStdDialogButtonSizer;

    itemBoxSizer1->Add(itemStdDialogButtonSizer1, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, wxDLG_UNIT(itemDialog1, wxSize(5, -1)).x);
    wxButton* itemButton6 = new wxButton( itemDialog1, wxID_OK, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStdDialogButtonSizer1->AddButton(itemButton6);

    itemStdDialogButtonSizer1->Realize();

////@end CTextReportDlg content construction
}


/*!
 * Should we show tooltips?
 */

bool CTextReportDlg::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap CTextReportDlg::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin CTextReportDlg bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end CTextReportDlg bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon CTextReportDlg::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin CTextReportDlg icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end CTextReportDlg icon retrieval
}


/*!
 * wxEVT_COMMAND_HTML_LINK_CLICKED event handler for ID_TEXTCTRL1
 */

void CTextReportDlg::OnTextctrl1LinkClicked( wxHtmlLinkEvent& event )
{
    wxString href(event.GetLinkInfo().GetHref());
    ::wxLaunchDefaultBrowser(href);
}

END_NCBI_SCOPE

