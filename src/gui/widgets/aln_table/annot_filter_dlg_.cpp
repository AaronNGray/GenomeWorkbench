// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include <ncbi_pch.hpp>

inline void CAnnotCompareFilterDlg::cb__i(CButton*, void*) {
  x_OnChooseFeatTypes();
}
void CAnnotCompareFilterDlg::cb_(CButton* o, void* v) {
  ((CAnnotCompareFilterDlg*)(o->parent()->parent()->user_data()))->cb__i(o,v);
}

inline void CAnnotCompareFilterDlg::cb_OK_i(CReturnButton*, void*) {
  x_OnOK();
}
void CAnnotCompareFilterDlg::cb_OK(CReturnButton* o, void* v) {
  ((CAnnotCompareFilterDlg*)(o->parent()->parent()->user_data()))->cb_OK_i(o,v);
}

inline void CAnnotCompareFilterDlg::cb_Cancel_i(CButton*, void*) {
  x_OnCancel();
}
void CAnnotCompareFilterDlg::cb_Cancel(CButton* o, void* v) {
  ((CAnnotCompareFilterDlg*)(o->parent()->parent()->user_data()))->cb_Cancel_i(o,v);
}

Fl_Double_Window* CAnnotCompareFilterDlg::x_CreateWindow() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(480, 235, "Feature Comparison Filter");
    w = o;
    o->user_data((void*)(this));
    { CDialogBackground* o = new CDialogBackground(0, 0, 480, 235);
      o->box(FL_NO_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP);
      o->when(FL_WHEN_RELEASE);
      { CInput* o = m_FeatTypes = new CInput(190, 15, 240, 22, "Compare feature subtypes");
        o->box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->selection_color(FL_SELECTION_COLOR);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->textsize(12);
        o->align(FL_ALIGN_LEFT);
        o->when(FL_WHEN_RELEASE);
      }
      { CButton* o = new CButton(435, 15, 25, 22, "...");
        o->box(FL_UP_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BACKGROUND_COLOR);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->callback((Fl_Callback*)cb_);
        o->align(FL_ALIGN_CENTER);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_ShowIdenticalLoc = new CCheckButton(60, 80, 170, 22, "Identical location");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_ShowNotFound = new CCheckButton(245, 106, 170, 22, "Not Found");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_ShowIdenticalSeq = new CCheckButton(245, 80, 170, 22, "Identical sequence");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_ShowIdenticalProd = new CCheckButton(60, 106, 170, 22, "Identical product");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_ShowComplex = new CCheckButton(60, 132, 170, 22, "Complex");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_ShowMissingExons = new CCheckButton(245, 132, 170, 22, "Missing exons");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_Show5PrimeExt = new CCheckButton(60, 158, 170, 22, "5\' Extension");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CCheckButton* o = m_Show3PrimeExt = new CCheckButton(245, 158, 170, 22, "3\' Extension");
        o->box(FL_NO_BOX);
        o->down_box(FL_DOWN_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BLACK);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
      }
      { CBox* o = new CBox(90, 55, 270, 22, "Show/Hide comparisons with:");
        o->box(FL_NO_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BACKGROUND_COLOR);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->align(FL_ALIGN_CENTER);
        o->when(FL_WHEN_RELEASE);
      }
      { CReturnButton* o = new CReturnButton(162, 193, 75, 22, "OK");
        o->box(FL_UP_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BACKGROUND_COLOR);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->callback((Fl_Callback*)cb_OK);
        o->align(FL_ALIGN_CENTER);
        o->when(FL_WHEN_RELEASE);
      }
      { CButton* o = new CButton(242, 193, 75, 22, "Cancel");
        o->box(FL_UP_BOX);
        o->color(FL_BACKGROUND_COLOR);
        o->selection_color(FL_BACKGROUND_COLOR);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(FL_BLACK);
        o->callback((Fl_Callback*)cb_Cancel);
        o->align(FL_ALIGN_CENTER);
        o->when(FL_WHEN_RELEASE);
      }
      o->end();
    }
    o->end();
  }
  return w;
}
