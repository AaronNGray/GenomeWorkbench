/*  $Id: wx_histogram_config_dlg.hpp 43724 2019-08-23 15:29:15Z katargir $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Authors:  Liangshou Wu
 *
 * File Description:
 *
 */
// Generated by DialogBlocks (unregistered), 01/12/2008 09:18:04

#ifndef _HISTOGRAM_CONFIG_DLG_H_
#define _HISTOGRAM_CONFIG_DLG_H_


/*!
 * Includes
 */
#include <corelib/ncbiobj.hpp>
#include <string>

// This header must (at least indirectly) precede any wxWidgets headers.
#include <gui/widgets/wx/fixed_base.hpp>

#include <gui/widgets/seq_graphic/histogram_conf.hpp>
#include <gui/widgets/wx/dialog.hpp>

////@begin includes
#include "wx/statline.h"
#include "wx/valgen.h"
#include "wx/spinctrl.h"
#include "wx/clrpicker.h"
////@end includes
#include <wx/dialog.h>
#include <wx/checkbox.h>
#include <wx/radiobox.h>

/*!
 * Forward declarations
 */

////@begin forward declarations
class wxSpinCtrl;
class wxColourPickerCtrl;
class wxBoxSizer;
////@end forward declarations
class wxSlider;
class wxRadioButton;
class wxStaticText;

BEGIN_NCBI_SCOPE


/*!
 * Control identifiers
 */

////@begin control identifiers
#define SYMBOL_CHISTCONFIGDLG_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX|wxTAB_TRAVERSAL
#define SYMBOL_CHISTCONFIGDLG_TITLE _("Graph Rendering Options")
#define SYMBOL_CHISTCONFIGDLG_IDNAME ID_CHISTCONFIGDLG
#define SYMBOL_CHISTCONFIGDLG_SIZE wxDefaultSize
#define SYMBOL_CHISTCONFIGDLG_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * CHistConfigDlg class declaration
 */

class CHistConfigDlg: public CDialog
{    
    DECLARE_DYNAMIC_CLASS( CHistConfigDlg )
    DECLARE_EVENT_TABLE()

public:
    CHistConfigDlg();
    CHistConfigDlg( wxWindow* parent, wxWindowID id = SYMBOL_CHISTCONFIGDLG_IDNAME, const wxString& caption = SYMBOL_CHISTCONFIGDLG_TITLE, const wxPoint& pos = SYMBOL_CHISTCONFIGDLG_POSITION, const wxSize& size = SYMBOL_CHISTCONFIGDLG_SIZE, long style = SYMBOL_CHISTCONFIGDLG_STYLE );

    bool CreateX( wxWindow* parent, wxWindowID id = SYMBOL_CHISTCONFIGDLG_IDNAME, const wxString& caption = SYMBOL_CHISTCONFIGDLG_TITLE, const wxPoint& pos = SYMBOL_CHISTCONFIGDLG_POSITION, const wxSize& size = SYMBOL_CHISTCONFIGDLG_SIZE, long style = SYMBOL_CHISTCONFIGDLG_STYLE );

    ~CHistConfigDlg();

    void Init();

    void CreateControls();

////@begin CHistConfigDlg event handler declarations

    void OnRenderStyleSelected( wxCommandEvent& event );

    void OnGraphScaleSelected( wxCommandEvent& event );

    void OnShowRulerClick( wxCommandEvent& event );

    void OnDrawBackgroundClick( wxCommandEvent& event );

    void OnHeightUpdated( wxCommandEvent& event );

    void OnClipChkClick( wxCommandEvent& event );

    void OnSpinctrlUpdated( wxSpinEvent& event );

    void OnGraphOpacityUpdated( wxCommandEvent& event );

    void OnFGColorChanged( wxColourPickerEvent& event );

    void OnNegColorChanged( wxColourPickerEvent& event );

    void OnBGColorChanged( wxColourPickerEvent& event );

    void OnOpacityUpdated( wxCommandEvent& event );

    void OnColorMinChanged( wxColourPickerEvent& event );

    void OnColorMaxChanged( wxColourPickerEvent& event );

////@end CHistConfigDlg event handler declarations

////@begin CHistConfigDlg member function declarations

    wxBitmap GetBitmapResource( const wxString& name );

    wxIcon GetIconResource( const wxString& name );
////@end CHistConfigDlg member function declarations

    static bool ShowToolTips();
    void SetConfig(CRef<CHistParams> config);
    void SetConfigName(const string& name) { m_ConfName = name; }

    CRef<CHistParams> GetConfig() const { return m_Config; }
    void SetHistName(const string& title);

////@begin CHistConfigDlg member variables
    wxStaticText* m_HistName;
    wxRadioBox* m_RenderStyle;
    wxRadioBox* m_GraphScale;
    wxCheckBox* m_NeedRuler;
    wxCheckBox* m_DrawBackground;
    wxTextCtrl* m_Height;
    wxCheckBox* m_ClipOutliers;
    wxSpinCtrl* m_SDevThreshold;
    wxStaticBox* m_ColorBox;
    wxSlider* m_GraphOpacity;
    wxColourPickerCtrl* m_fgColor;
    wxColourPickerCtrl* m_fgNegColor;
    wxBoxSizer* m_BgColorGroup;
    wxColourPickerCtrl* m_bgColor;
    wxBoxSizer* m_BgColorGroup2;
    wxSlider* m_Opacity;
    wxBoxSizer* m_RulerColorGroup;
    wxColourPickerCtrl* m_LabelColor;
    wxColourPickerCtrl* m_RulerColor;
    wxBoxSizer* m_SmearColorGroup;
    wxColourPickerCtrl* m_ColorMin;
    wxBoxSizer* m_SmearColorGroup2;
    wxColourPickerCtrl* m_ColorMax;
    wxBoxSizer* m_OutlierColorGroup;
    wxColourPickerCtrl* m_ColorOutlier;
    enum {
        ID_CHISTCONFIGDLG = 10020,
        ID_RADIOBOX5 = 10065,
        ID_RADIOBOX4 = 10064,
        ID_CHECKBOX5 = 10018,
        ID_CHECKBOX4 = 10017,
        ID_TEXTCTRL2 = 10024,
        ID_CLIP_CHK = 10057,
        ID_SPINCTRL = 10061,
        ID_SLIDER = 10000,
        ID_COLOURPICKERCTRL4 = 10026,
        ID_COLOURPICKERCTRL = 10001,
        ID_COLOURPICKERCTRL3 = 10025,
        ID_SLIDER1 = 10014,
        ID_COLOURPICKERCTRL5 = 10027,
        ID_COLOURPICKERCTRL8 = 10016,
        ID_COLOURPICKERCTRL6 = 10028,
        ID_COLOURPICKERCTRL7 = 10029,
        ID_COLOURPICKERCTRL9 = 10060
    };
////@end CHistConfigDlg member variables

private:
    CRef<CHistParams>  m_Config;
    string m_ConfName; 
};

END_NCBI_SCOPE

#endif
    // _HISTOGRAM_CONFIG_DLG_H_
