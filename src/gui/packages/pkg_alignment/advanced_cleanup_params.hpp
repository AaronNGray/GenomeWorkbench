#ifndef PKG_ALIGNMENT___ADVANCED_CLEANUP_PARAMS__HPP
#define PKG_ALIGNMENT___ADVANCED_CLEANUP_PARAMS__HPP

/*  $Id: advanced_cleanup_params.hpp 44058 2019-10-17 16:50:04Z katargir $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Authors: Roman Katargin
 *
 * File Description:
 *
 */

// Generated by DialogBlocks (unregistered), 24/09/2019 09:38:19

#include <corelib/ncbistd.hpp>

#include <algo/align/advanced_cleanup/advanced_cleanup.hpp>

#include <gui/objutils/reg_settings.hpp>
#include <gui/objutils/objects.hpp>

BEGIN_NCBI_SCOPE

/*!
 * CAdvancedCleanupParams class declaration
 */

class CAdvancedCleanupParams: public IRegSettings
{    
    friend class CAdvancedCleanupParamsPanel;
public:
    CAdvancedCleanupParams();

    CAdvancedCleanupParams(const CAdvancedCleanupParams& data);

    ~CAdvancedCleanupParams();

    void operator=(const CAdvancedCleanupParams& data);

    bool operator==(const CAdvancedCleanupParams& data) const;

    void Copy(const CAdvancedCleanupParams& data);

    void Init();

    /// @name IRegSettings interface implementation
    /// @{
    virtual void SetRegistryPath(const string& reg_path);
    virtual void LoadSettings();
    virtual void SaveSettings() const;
    /// @}

////@begin CAdvancedCleanupParams member function declarations
    bool GetInvokeBest() const { return m_InvokeBest ; }
    void SetInvokeBest(bool value) { m_InvokeBest = value ; }

    TConstScopedObjects GetObjects() const { return m_Objects ; }
    void SetObjects(TConstScopedObjects value) { m_Objects = value ; }

    int GetQueryTpe() const { return m_QueryType ; }
    void SetQueryTpe(int value) { m_QueryType = value ; }

    int GetSplignDirection() const { return m_SplignDirection ; }
    void SetSplignDirection(int value) { m_SplignDirection = value ; }

////@end CAdvancedCleanupParams member function declarations

////@begin CAdvancedCleanupParams member variables
public:
    TConstScopedObjects m_Objects;
private:
    bool m_InvokeBest;
    int m_QueryType;
    int m_SplignDirection;
////@end CAdvancedCleanupParams member variables

    string m_RegPath;
};

END_NCBI_SCOPE

#endif // PKG_ALIGNMENT___ADVANCED_CLEANUP_PARAMS__HPP
